'-'           Punctuation
'module'      Name.Entity
'('           Punctuation
'test'        Name
')'           Punctuation
'.'           Punctuation
'\n'          Text.Whitespace

'-'           Punctuation
'export'      Name.Entity
'('           Punctuation
'['           Punctuation
'listen'      Name
'/'           Operator
'1'           Literal.Number.Integer
','           Punctuation
'\n         ' Text.Whitespace
'handle_client' Name
'/'           Operator
'1'           Literal.Number.Integer
','           Punctuation
'\n         ' Text.Whitespace
'maintain_clients' Name
'/'           Operator
'1'           Literal.Number.Integer
','           Punctuation
'\n         ' Text.Whitespace
'start'       Name
'/'           Operator
'1'           Literal.Number.Integer
','           Punctuation
'\n         ' Text.Whitespace
'stop'        Name
'/'           Operator
'0'           Literal.Number.Integer
','           Punctuation
'\n         ' Text.Whitespace
'controller'  Name
'/'           Operator
'1'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'-'           Punctuation
'author'      Name.Entity
'('           Punctuation
'"'           Literal.String
'jerith'      Literal.String
'"'           Literal.String
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'-'           Punctuation
'define'      Name.Entity
'('           Punctuation
'TCP_OPTIONS' Name.Constant
','           Punctuation
'['           Punctuation
'list'        Name
','           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'packet'      Name
','           Punctuation
' '           Text.Whitespace
'0'           Literal.Number.Integer
'}'           Punctuation
','           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'active'      Name
','           Punctuation
' '           Text.Whitespace
'false'       Name
'}'           Punctuation
','           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'reuseaddr'   Name
','           Punctuation
' '           Text.Whitespace
'true'        Name
'}'           Punctuation
']'           Punctuation
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'-'           Punctuation
'record'      Name.Entity
'('           Punctuation
'player'      Name.Label
','           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'name'        Name
'='           Operator
'none'        Name
','           Punctuation
' '           Text.Whitespace
'socket'      Name
','           Punctuation
' '           Text.Whitespace
'mode'        Name
'}'           Punctuation
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% To allow incoming connections, we need to listen on a TCP port.' Comment
'\n'          Text.Whitespace

'%% This is also the entry point for our server as a whole, so it' Comment
'\n'          Text.Whitespace

'%% starts the client_manager process and gives it a name so the rest' Comment
'\n'          Text.Whitespace

'%% of the code can get to it easily.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'listen'      Name.Function
'('           Punctuation
'Port'        Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'{'           Punctuation
'ok'          Name
','           Punctuation
' '           Text.Whitespace
'LSocket'     Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'gen_tcp'     Name.Namespace
':'           Punctuation
'listen'      Name.Function
'('           Punctuation
'Port'        Name.Variable
','           Punctuation
' '           Text.Whitespace
'?'           Operator
'TCP_OPTIONS' Name.Variable
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'register'    Name.Builtin
'('           Punctuation
'client_manager' Name
','           Punctuation
' '           Text.Whitespace
'spawn'       Name.Builtin
'('           Punctuation
'?'           Operator
'MODULE'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'maintain_clients' Name
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'['           Punctuation
']'           Punctuation
']'           Punctuation
')'           Punctuation
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'do_accept'   Name
'('           Punctuation
'LSocket'     Name.Variable
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% Accepting a connection gives us a connection socket with the' Comment
'\n'          Text.Whitespace

'%% newly-connected client on the other end.  Since we want to accept' Comment
'\n'          Text.Whitespace

'%% more than one client, we spawn a new process for each and then wait' Comment
'\n'          Text.Whitespace

'%% for another connection on our listening socket.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'do_accept'   Name.Function
'('           Punctuation
'LSocket'     Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'case'        Keyword
' '           Text.Whitespace
'gen_tcp'     Name.Namespace
':'           Punctuation
'accept'      Name.Function
'('           Punctuation
'LSocket'     Name.Variable
')'           Punctuation
' '           Text.Whitespace
'of'          Keyword
'\n        '  Text.Whitespace
'{'           Punctuation
'ok'          Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'spawn'       Name.Builtin
'('           Punctuation
'?'           Operator
'MODULE'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'handle_client' Name
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'Socket'      Name.Variable
']'           Punctuation
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'client_manager' Name
' '           Text.Whitespace
'!'           Operator
' '           Text.Whitespace
'{'           Punctuation
'connect'     Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
'}'           Punctuation
';'           Punctuation
'\n        '  Text.Whitespace
'{'           Punctuation
'error'       Name
','           Punctuation
' '           Text.Whitespace
'Reason'      Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'io'          Name.Namespace
':'           Punctuation
'format'      Name.Function
'('           Punctuation
'"'           Literal.String
'Socket accept error: ' Literal.String
'~s'          Literal.String.Interpol
'~n'          Literal.String.Interpol
'"'           Literal.String
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'Reason'      Name.Variable
']'           Punctuation
')'           Punctuation
'\n    '      Text.Whitespace
'end'         Keyword
','           Punctuation
'\n    '      Text.Whitespace
'do_accept'   Name
'('           Punctuation
'LSocket'     Name.Variable
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% All the client-socket process needs to do is wait for data and' Comment
'\n'          Text.Whitespace

'%% forward it to the client_manager process which decides what to do' Comment
'\n'          Text.Whitespace

'%% with it.  If the client disconnects, we let client_manager know and' Comment
'\n'          Text.Whitespace

'%% then quietly go away.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'handle_client' Name.Function
'('           Punctuation
'Socket'      Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'case'        Keyword
' '           Text.Whitespace
'gen_tcp'     Name.Namespace
':'           Punctuation
'recv'        Name.Function
'('           Punctuation
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text.Whitespace
'of'          Keyword
'\n        '  Text.Whitespace
'{'           Punctuation
'ok'          Name
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'client_manager' Name
' '           Text.Whitespace
'!'           Operator
' '           Text.Whitespace
'{'           Punctuation
'data'        Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
'}'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'handle_client' Name
'('           Punctuation
'Socket'      Name.Variable
')'           Punctuation
';'           Punctuation
'\n        '  Text.Whitespace
'{'           Punctuation
'error'       Name
','           Punctuation
' '           Text.Whitespace
'closed'      Name
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'client_manager' Name
' '           Text.Whitespace
'!'           Operator
' '           Text.Whitespace
'{'           Punctuation
'disconnect'  Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
'}'           Punctuation
'\n    '      Text.Whitespace
'end'         Keyword
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% This is the main loop of the client_manager process.  It maintains' Comment
'\n'          Text.Whitespace

'%% the list of "players" and calls the handler for client input.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'maintain_clients' Name.Function
'('           Punctuation
'Players'     Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'io'          Name.Namespace
':'           Punctuation
'format'      Name.Function
'('           Punctuation
'"'           Literal.String
'Players:'    Literal.String
'~n'          Literal.String.Interpol
'"'           Literal.String
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
']'           Punctuation
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'foreach'     Name.Function
'('           Punctuation
'fun'         Keyword
'('           Punctuation
'P'           Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
' '           Text.Whitespace
'io'          Name.Namespace
':'           Punctuation
'format'      Name.Function
'('           Punctuation
'"'           Literal.String
'>>> '        Literal.String
'~w'          Literal.String.Interpol
'~n'          Literal.String.Interpol
'"'           Literal.String
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'P'           Name.Variable
']'           Punctuation
')'           Punctuation
' '           Text.Whitespace
'end'         Keyword
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'receive'     Keyword
'\n        '  Text.Whitespace
'{'           Punctuation
'connect'     Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'Player'      Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'#player'     Name.Label
'{'           Punctuation
'socket'      Name
'='           Operator
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'mode'        Name
'='           Operator
'connect'     Name
'}'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'send_prompt' Name
'('           Punctuation
'Player'      Name.Variable
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'io'          Name.Namespace
':'           Punctuation
'format'      Name.Function
'('           Punctuation
'"'           Literal.String
'client connected: ' Literal.String
'~w'          Literal.String.Interpol
'~n'          Literal.String.Interpol
'"'           Literal.String
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'Player'      Name.Variable
']'           Punctuation
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'NewPlayers'  Name.Variable
' '           Text.Whitespace
'='           Operator
'  '          Text.Whitespace
'['           Punctuation
'Player'      Name.Variable
' '           Text.Whitespace
'|'           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
']'           Punctuation
';'           Punctuation
'\n        '  Text.Whitespace
'{'           Punctuation
'disconnect'  Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'Player'      Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'find_player' Name
'('           Punctuation
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'io'          Name.Namespace
':'           Punctuation
'format'      Name.Function
'('           Punctuation
'"'           Literal.String
'client disconnected: ' Literal.String
'~w'          Literal.String.Interpol
'~n'          Literal.String.Interpol
'"'           Literal.String
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'Player'      Name.Variable
']'           Punctuation
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'NewPlayers'  Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'delete'      Name.Function
'('           Punctuation
'Player'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
';'           Punctuation
'\n        '  Text.Whitespace
'{'           Punctuation
'data'        Name
','           Punctuation
' '           Text.Whitespace
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'Player'      Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'find_player' Name
'('           Punctuation
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'NewPlayers'  Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'parse_data'  Name
'('           Punctuation
'Player'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'NewPlayer'   Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'find_player' Name
'('           Punctuation
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'NewPlayers'  Name.Variable
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'send_prompt' Name
'('           Punctuation
'NewPlayer'   Name.Variable
')'           Punctuation
'\n    '      Text.Whitespace
'end'         Keyword
','           Punctuation
'\n    '      Text.Whitespace
'maintain_clients' Name
'('           Punctuation
'NewPlayers'  Name.Variable
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% find_player is a utility function to get a player record associated' Comment
'\n'          Text.Whitespace

'%% with a particular socket out of the player list.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'find_player' Name.Function
'('           Punctuation
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'{'           Punctuation
'value'       Name
','           Punctuation
' '           Text.Whitespace
'Player'      Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'keysearch'   Name.Function
'('           Punctuation
'Socket'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'#player.socket' Name.Label
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'Player'      Name.Variable
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% delete_player returns the player list without the given player.  It' Comment
'\n'          Text.Whitespace

'%% deletes the player from the list based on the socket rather than' Comment
'\n'          Text.Whitespace

'%% the whole record because the list might hold a different version.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'delete_player' Name.Function
'('           Punctuation
'Player'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'keydelete'   Name.Function
'('           Punctuation
'Player'      Name.Variable
'#player.socket' Name.Label
','           Punctuation
' '           Text.Whitespace
'#player.socket' Name.Label
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% Sends an appropriate prompt to the player.  Currently the only' Comment
'\n'          Text.Whitespace

'%% prompt we send is the initial "Name: " when the player connects.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'send_prompt' Name.Function
'('           Punctuation
'Player'      Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'case'        Keyword
' '           Text.Whitespace
'Player'      Name.Variable
'#player.mode' Name.Label
' '           Text.Whitespace
'of'          Keyword
'\n        '  Text.Whitespace
'connect'     Name
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'gen_tcp'     Name.Namespace
':'           Punctuation
'send'        Name.Builtin
'('           Punctuation
'Player'      Name.Variable
'#player.socket' Name.Label
','           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'Name: '      Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n        '  Text.Whitespace
'active'      Name
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'ok'          Name
'\n    '      Text.Whitespace
'end'         Keyword
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% Sends the given data to all players in active mode.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'send_to_active' Name.Function
'('           Punctuation
'Prefix'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'ActivePlayers' Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'filter'      Name.Function
'('           Punctuation
'fun'         Keyword
'('           Punctuation
'P'           Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
' '           Text.Whitespace
'P'           Name.Variable
'#player.mode' Name.Label
' '           Text.Whitespace
'=='          Operator
' '           Text.Whitespace
'active'      Name
' '           Text.Whitespace
'end'         Keyword
','           Punctuation
'\n                                 ' Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'foreach'     Name.Function
'('           Punctuation
'fun'         Keyword
'('           Punctuation
'P'           Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
' '           Text.Whitespace
'gen_tcp'     Name.Namespace
':'           Punctuation
'send'        Name.Builtin
'('           Punctuation
'P'           Name.Variable
'#player.socket' Name.Label
','           Punctuation
' '           Text.Whitespace
'Prefix'      Name.Variable
' '           Text.Whitespace
'++'          Operator
' '           Text.Whitespace
'Data'        Name.Variable
')'           Punctuation
' '           Text.Whitespace
'end'         Keyword
','           Punctuation
'\n                  ' Text.Whitespace
'ActivePlayers' Name.Variable
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'ok'          Name
'.'           Punctuation
'\n\n'        Text.Whitespace

"%% We don't really do much parsing, but that will probably change as" Comment
'\n'          Text.Whitespace

'%% more features are added.  Currently this handles naming the player' Comment
'\n'          Text.Whitespace

'%% when he first connects and treats everything else as a message to' Comment
'\n'          Text.Whitespace

'%% send.'    Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'parse_data'  Name.Function
'('           Punctuation
'Player'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'case'        Keyword
' '           Text.Whitespace
'Player'      Name.Variable
'#player.mode' Name.Label
' '           Text.Whitespace
'of'          Keyword
'\n        '  Text.Whitespace
'active'      Name
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'send_to_active' Name
'('           Punctuation
'Player'      Name.Variable
'#player.name' Name.Label
' '           Text.Whitespace
'++'          Operator
' '           Text.Whitespace
'"'           Literal.String
': '          Literal.String
'"'           Literal.String
','           Punctuation
'\n              ' Text.Whitespace
'delete_player' Name
'('           Punctuation
'Player'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
','           Punctuation
' '           Text.Whitespace
'Data'        Name.Variable
')'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'Players'     Name.Variable
';'           Punctuation
'\n        '  Text.Whitespace
'connect'     Name
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n            ' Text.Whitespace
'UPlayer'     Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'Player'      Name.Variable
'#player'     Name.Label
'{'           Punctuation
'name'        Name
'='           Operator
'bogostrip'   Name
'('           Punctuation
'Data'        Name.Variable
')'           Punctuation
','           Punctuation
' '           Text.Whitespace
'mode'        Name
'='           Operator
'active'      Name
'}'           Punctuation
','           Punctuation
'\n            ' Text.Whitespace
'['           Punctuation
'UPlayer'     Name.Variable
' '           Text.Whitespace
'|'           Punctuation
' '           Text.Whitespace
'delete_player' Name
'('           Punctuation
'Player'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Players'     Name.Variable
')'           Punctuation
']'           Punctuation
'\n    '      Text.Whitespace
'end'         Keyword
'.'           Punctuation
'\n\n'        Text.Whitespace

'%% Utility methods to clean up the name before we apply it.  Called' Comment
'\n'          Text.Whitespace

'%% bogostrip rather than strip because it returns the first continuous' Comment
'\n'          Text.Whitespace

'%% block of non-matching characters rather stripping matching' Comment
'\n'          Text.Whitespace

'%% characters off the front and back.' Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'bogostrip'   Name.Function
'('           Punctuation
'String'      Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'bogostrip'   Name
'('           Punctuation
'String'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'\\r'         Literal.String.Escape
'\\n'         Literal.String.Escape
'\\t'         Literal.String.Escape
' '           Literal.String
'"'           Literal.String
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'bogostrip'   Name.Function
'('           Punctuation
'String'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Chars'       Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'LStripped'   Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'string'      Name.Namespace
':'           Punctuation
'substr'      Name.Function
'('           Punctuation
'String'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'string'      Name.Namespace
':'           Punctuation
'span'        Name.Function
'('           Punctuation
'String'      Name.Variable
','           Punctuation
' '           Text.Whitespace
'Chars'       Name.Variable
')'           Punctuation
'+'           Operator
'1'           Literal.Number.Integer
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'string'      Name.Namespace
':'           Punctuation
'substr'      Name.Function
'('           Punctuation
'LStripped'   Name.Variable
','           Punctuation
' '           Text.Whitespace
'1'           Literal.Number.Integer
','           Punctuation
' '           Text.Whitespace
'string'      Name.Namespace
':'           Punctuation
'cspan'       Name.Function
'('           Punctuation
'LStripped'   Name.Variable
','           Punctuation
' '           Text.Whitespace
'Chars'       Name.Variable
')'           Punctuation
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

"%% Here we have some extra code to test other bits of pygments' Erlang" Comment
'\n'          Text.Whitespace

'%% lexer.'   Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'get_timestamp' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'{'           Punctuation
'{'           Punctuation
'Year'        Name.Variable
','           Punctuation
'Month'       Name.Variable
','           Punctuation
'Day'         Name.Variable
'}'           Punctuation
','           Punctuation
'{'           Punctuation
'Hour'        Name.Variable
','           Punctuation
'Min'         Name.Variable
','           Punctuation
'Sec'         Name.Variable
'}'           Punctuation
'}'           Punctuation
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'erlang'      Name.Namespace
':'           Punctuation
'universaltime' Name.Function
'('           Punctuation
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'lists'       Name.Namespace
':'           Punctuation
'flatten'     Name.Function
'('           Punctuation
'io_lib'      Name.Namespace
':'           Punctuation
'format'      Name.Function
'('           Punctuation
'\n                    ' Text.Whitespace
'"'           Literal.String
'~4.10.0B'    Literal.String.Interpol
'-'           Literal.String
'~2.10.0B'    Literal.String.Interpol
'-'           Literal.String
'~2.10.0B'    Literal.String.Interpol
'T'           Literal.String
'~2.10.0B'    Literal.String.Interpol
':'           Literal.String
'~2.10.0B'    Literal.String.Interpol
':'           Literal.String
'~2.10.0B'    Literal.String.Interpol
'Z'           Literal.String
'"'           Literal.String
','           Punctuation
'\n                    ' Text.Whitespace
'['           Punctuation
'Year'        Name.Variable
','           Punctuation
' '           Text.Whitespace
'Month'       Name.Variable
','           Punctuation
' '           Text.Whitespace
'Day'         Name.Variable
','           Punctuation
' '           Text.Whitespace
'Hour'        Name.Variable
','           Punctuation
' '           Text.Whitespace
'Min'         Name.Variable
','           Punctuation
' '           Text.Whitespace
'Sec'         Name.Variable
']'           Punctuation
')'           Punctuation
')'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'a_binary'    Name.Function
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'<'           Operator
'<'           Operator
' '           Text.Whitespace
'100'         Literal.Number.Integer
':'           Punctuation
'16'          Literal.Number.Integer
'/'           Operator
'integer'     Name
','           Punctuation
' '           Text.Whitespace
'16#7f'       Literal.Number.Integer
' '           Text.Whitespace
'>'           Operator
'>'           Operator
'.'           Punctuation
'\n\n'        Text.Whitespace

'a_list_comprehension' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'['           Punctuation
'X'           Name.Variable
'*'           Operator
'2'           Literal.Number.Integer
' '           Text.Whitespace
'|'           Punctuation
'|'           Punctuation
' '           Text.Whitespace
'X'           Name.Variable
' '           Text.Whitespace
'<'           Operator
'-'           Operator
' '           Text.Whitespace
'['           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
'2'           Literal.Number.Integer
','           Punctuation
'3'           Literal.Number.Integer
']'           Punctuation
']'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'a_map'       Name.Function
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'M0'          Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'#{'          Punctuation
' '           Text.Whitespace
'a'           Name
' '           Text.Whitespace
'='           Operator
'>'           Operator
' '           Text.Whitespace
'1'           Literal.Number.Integer
','           Punctuation
' '           Text.Whitespace
'b'           Name
' '           Text.Whitespace
'='           Operator
'>'           Operator
' '           Text.Whitespace
'2'           Literal.Number.Integer
' '           Text.Whitespace
'}'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'M1'          Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'M0'          Name.Variable
'#{'          Punctuation
' '           Text.Whitespace
'b'           Name
' '           Text.Whitespace
':'           Punctuation
'='           Operator
' '           Text.Whitespace
'200'         Literal.Number.Integer
' '           Text.Whitespace
'}'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'escape_sequences' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'['           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'\\b'         Literal.String.Escape
'\\d'         Literal.String.Escape
'\\e'         Literal.String.Escape
'\\f'         Literal.String.Escape
'\\n'         Literal.String.Escape
'\\r'         Literal.String.Escape
'\\s'         Literal.String.Escape
'\\t'         Literal.String.Escape
'\\v'         Literal.String.Escape
"\\'"         Literal.String.Escape
'\\"'         Literal.String.Escape
'\\\\'        Literal.String.Escape
'"'           Literal.String
'\n    '      Text.Whitespace
','           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'\\1'         Literal.String.Escape
'\\12'        Literal.String.Escape
'\\123'       Literal.String.Escape
'"'           Literal.String
' '           Text.Whitespace
'% octal'     Comment
'\n'          Text.Whitespace

'    '        Text.Whitespace
','           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'\\x01'       Literal.String.Escape
'"'           Literal.String
'      '      Text.Whitespace
'% short hex' Comment
'\n'          Text.Whitespace

'    '        Text.Whitespace
','           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'\\x{fff}'    Literal.String.Escape
'"'           Literal.String
'   '         Text.Whitespace
'% long hex'  Comment
'\n'          Text.Whitespace

'    '        Text.Whitespace
','           Punctuation
' '           Text.Whitespace
'"'           Literal.String
'\\^a'        Literal.String.Escape
'\\^A'        Literal.String.Escape
'"'           Literal.String
'    '        Text.Whitespace
'% control characters' Comment
'\n'          Text.Whitespace

'    '        Text.Whitespace
']'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

'map'         Name.Function
'('           Punctuation
'Fun'         Name.Variable
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
'H'           Name.Variable
'|'           Punctuation
'T'           Name.Variable
']'           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'['           Punctuation
'Fun'         Name.Variable
'('           Punctuation
'H'           Name.Variable
')'           Punctuation
' '           Text.Whitespace
'|'           Punctuation
' '           Text.Whitespace
'map'         Name
'('           Punctuation
'Fun'         Name.Variable
','           Punctuation
' '           Text.Whitespace
'T'           Name.Variable
')'           Punctuation
']'           Punctuation
';'           Punctuation
'\n\n'        Text.Whitespace

'map'         Name.Function
'('           Punctuation
'Fun'         Name.Variable
','           Punctuation
' '           Text.Whitespace
'['           Punctuation
']'           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'['           Punctuation
']'           Punctuation
'.'           Punctuation
'\n\n'        Text.Whitespace

"%% pmap, just because it's cool." Comment
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'pmap'        Name.Function
'('           Punctuation
'F'           Name.Variable
','           Punctuation
' '           Text.Whitespace
'L'           Name.Variable
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n    '      Text.Whitespace
'Parent'      Name.Variable
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'self'        Name
'('           Punctuation
')'           Punctuation
','           Punctuation
'\n    '      Text.Whitespace
'['           Punctuation
'receive'     Keyword
' '           Text.Whitespace
'{'           Punctuation
'Pid'         Name.Variable
','           Punctuation
' '           Text.Whitespace
'Result'      Name.Variable
'}'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n             ' Text.Whitespace
'Result'      Name.Variable
'\n     '     Text.Whitespace
'end'         Keyword
' '           Text.Whitespace
'|'           Punctuation
'|'           Punctuation
' '           Text.Whitespace
'Pid'         Name.Variable
' '           Text.Whitespace
'<'           Operator
'-'           Operator
' '           Text.Whitespace
'['           Punctuation
'spawn'       Name.Builtin
'('           Punctuation
'fun'         Keyword
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'-'           Operator
'>'           Operator
'\n                                  ' Text.Whitespace
'Parent'      Name.Variable
' '           Text.Whitespace
'!'           Operator
' '           Text.Whitespace
'{'           Punctuation
'self'        Name
'('           Punctuation
')'           Punctuation
','           Punctuation
' '           Text.Whitespace
'F'           Name.Variable
'('           Punctuation
'X'           Name.Variable
')'           Punctuation
'}'           Punctuation
' \n                          ' Text.Whitespace
'end'         Keyword
')'           Punctuation
' '           Text.Whitespace
'|'           Punctuation
'|'           Punctuation
' '           Text.Whitespace
'X'           Name.Variable
' '           Text.Whitespace
'<'           Operator
'-'           Operator
' '           Text.Whitespace
'L'           Name.Variable
']'           Punctuation
']'           Punctuation
'.'           Punctuation
'\n'          Text.Whitespace
