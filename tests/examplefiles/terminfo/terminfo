######## This example from excerpt of <http://www.catb.org/esr/terminfo/>:
#
#	Version 11.0.1
#	$Date: 2000/03/02 15:51:11 $
#	terminfo syntax
#

######## ANSI, UNIX CONSOLE, AND SPECIAL TYPES
#
# This section describes terminal classes and brands that are still
# quite common.
#

#### Specials
#
# Special "terminals".  These are used to label tty lines when you don't
# know what kind of terminal is on it.  The characteristics of an unknown
# terminal are the lowest common denominator - they look about like a ti 700.
#

dumb|80-column dumb tty, 
	am, 
	cols#80, 
	bel=^G, cr=^M, cud1=^J, ind=^J, 
unknown|unknown terminal type, 
	gn, use=dumb, 
lpr|printer|line printer, 
	hc, os, 
	cols#132, lines#66, 
	bel=^G, cr=^M, cub1=^H, cud1=^J, ff=^L, ind=^J, 
glasstty|classic glass tty interpreting ASCII control characters, 
	am, 
	cols#80, 
	bel=^G, clear=^L, cr=^M, cub1=^H, cud1=^J, ht=^I, kcub1=^H, 
	kcud1=^J, nel=^M^J, 
vanilla, 
	bel=^G, cr=^M, cud1=^J, ind=^J, 

#### ANSI.SYS/ISO 6429/ECMA-48 Capabilities
#
# See the end-of-file comment for more on these.
#

# ANSI capabilities are broken up into pieces, so that a terminal
# implementing some ANSI subset can use many of them.
ansi+local1, 
	cub1=\E[D, cud1=\E[B, cuf1=\E[C, cuu1=\E[A, 
ansi+local, 
	cub=\E[%p1%dD, cud=\E[%p1%dB, cuf=\E[%p1%dC, 
	cuu=\E[%p1%dA, 
	use=ansi+local1, 
ansi+tabs, 
	cbt=\E[Z, ht=^I, hts=\EH, tbc=\E[2g, 
ansi+inittabs, 
	it#8, use=ansi+tabs, 
ansi+erase, 
	clear=\E[H\E[J, ed=\E[J, el=\E[K, 
ansi+rca, 
	hpa=\E[%p1%{1}%+%dG, vpa=\E[%p1%{1}%+%dd, 
ansi+cup, 
	cup=\E[%i%p1%d;%p2%dH, home=\E[H, 
ansi+rep, 
	rep=%p1%c\E[%p2%{1}%-%db, 
ansi+idl1, 
	dl1=\E[M, il1=\E[L, 
ansi+idl, 
	dl=\E[%p1%dM, il=\E[%p1%dL, use=ansi+idl1, 
ansi+idc, 
	dch1=\E[P, ich=\E[%p1%d@, ich1=\E[@, rmir=\E6, smir=\E6, 
ansi+arrows, 
	kbs=^H, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	khome=\E[H, 
ansi+sgr|ansi graphic renditions, 
	blink=\E[5m, invis=\E[8m, rev=\E[7m, sgr0=\E[0m, 
ansi+sgrso|ansi standout only, 
	rmso=\E[m, smso=\E[7m, 
ansi+sgrul|ansi underline only, 
	rmul=\E[m, smul=\E[4m, 
ansi+sgrbold|ansi graphic renditions; assuming terminal has bold; not dim, 
	bold=\E[1m, 
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;m, use=ansi+sgr, use=ansi+sgrso, use=ansi+sgrul, 
ansi+sgrdim|ansi graphic renditions; assuming terminal has dim; not bold, 
	dim=\E[2m, 
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p5%t2;%;m, use=ansi+sgr, use=ansi+sgrso, use=ansi+sgrul, 
ansi+pp|ansi printer port, 
	mc0=\E[0i, mc4=\E[4i, mc5=\E[5i, 
ansi+csr|ansi scroll-region plus cursor save & restore, 
	csr=\E[%i%p1%d;%p2%dr, rc=\E8, sc=\E7, 

# The IBM PC alternate character set.  Plug this into any Intel console entry.
# We use \E[11m for rmacs rather than \E[12m so the <acsc> string can use the
# ROM graphics for control characters such as the diamond, up- and down-arrow.
# This works with the System V, Linux, and BSDI consoles.  It's a safe bet this
# will work with any Intel console, they all seem to have inherited \E[11m
# from the ANSI.SYS de-facto standard.
klone+acs|alternate character set for ansi.sys displays, 
	acsc=+\020\,\021-\030.^Y0\333`\004a\261f\370g\361h\260j\331k\277l\332m\300n\305o~p\304q\304r\304s_t\303u\264v\301w\302x\263y\363z\362{\343|\330}\234~\376, 
	rmacs=\E[10m, smacs=\E[11m, 

# Highlight controls corresponding to the ANSI.SYS standard.  Most 
# console drivers for Intel boxes obey these.  Makes the same assumption
# about \E[11m as klone+acs.  True ANSI/ECMA-48 would have <rmso=\E[27m>,
# <rmul=\E[24m>, but this isn't a documented feature of ANSI.SYS.
klone+sgr|attribute control for ansi.sys displays, 
	blink=\E[5m, bold=\E[1m, invis=\E[8m, rev=\E[7m, 
	rmpch=\E[10m, rmso=\E[m, rmul=\E[m, 
	sgr=\E[0;10%?%p1%t;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;%?%p7%t;8%;%?%p9%t;11%;m, 
	sgr0=\E[0;10m, smpch=\E[11m, smso=\E[7m, smul=\E[4m, 
	use=klone+acs, 

# Highlight controls corresponding to the ANSI.SYS standard.  *All*
# console drivers for Intel boxes obey these.  Does not assume \E[11m will
# work; uses \E[12m instead, which is pretty bulletproof but loses you the ACS
# diamond and arrow characters under curses.
klone+sgr-dumb|attribute control for ansi.sys displays (no ESC [ 11 m), 
	blink=\E[5m, bold=\E[1m, invis=\E[8m, rev=\E[7m, rmso=\E[m, 
	rmul=\E[m, 
	sgr=\E[0;10%?%p1%t;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;%?%p7%t;8%;%?%p9%t;12%;m, 
	sgr0=\E[0;10m, smacs=\E[12m, smso=\E[7m, smul=\E[4m, 
	use=klone+acs, 

# KOI8-R (RFC1489) acs (alternate character set)
# From: Qing Long <qinglong@Bolizm.ihep.su>, 24 Feb 1996.
klone+koi8acs|alternate character set for ansi.sys displays with KOI8 charset, 
	acsc=+\020\,\021-\036.^_0\215`\004a\237f\234g\232h\222i\220j\205k\203l\202m\204n\212o\213p\216q\0r\217s\214t\206u\207v\210w\211x\201y\230z\231{\267|\274}L~\225, 
	rmacs=\E[10m, smacs=\E[11m, 

# ANSI.SYS color control.  The setab/setaf caps depend on the coincidence
# between SVr4/XPG4's color numbers and ANSI.SYS attributes.  Here are longer
# but equivalent strings that don't rely on that coincidence:
# setb=\E[4%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m,
# setf=\E[3%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m,
# The DOS 5 manual asserts that these sequences meet the ISO 6429 standard.
# They match a subset of ECMA-48.
klone+color|color control for ansi.sys and ISO6429-compatible displays, 
	colors#8, ncv#3, pairs#64, 
	op=\E[37;40m, setab=\E[4%p1%dm, setaf=\E[3%p1%dm, 

# This is better than klone+color, it doesn't assume white-on-black as the
# default color pair,  but many `ANSI' terminals don't grok the <op> cap.
ecma+color|color control for ECMA-48-compatible terminals, 
	colors#8, ncv#3, pairs#64, 
	op=\E[39;49m, setab=\E[4%p1%dm, setaf=\E[3%p1%dm, 

# Attribute control for ECMA-48-compatible terminals
ecma+sgr|attribute capabilities for true ECMA-48 terminals, 
	rmso=\E[27m, rmul=\E[24m, 
	use=klone+sgr, 

# For comparison, here are all the capabilities implied by the Intel
# Binary Compatibility Standard (level 2) that fit within terminfo.
# For more detail on this rather pathetic standard, see the comments
# near the end of this file.
ibcs2|Intel Binary Compatibility Standard prescriptions, 
	cbt=\E[Z, clear=\Ec, cub=\E[%p1%dD, cud=\E[%p1%dB, 
	cuf=\E[%p1%dC, cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, 
	dch=\E[%p1%dP, dispc=\E=%p1%dg, ech=\E[%p1%dX, 
	hpa=\E[%i%p1%dG, hts=\EH, ich=\E[%p1%d@, il=\E[%p1%dL, 
	indn=\E[%p1%dS, rc=\E7, rin=\E[%p1%dT, rmam=\E[?7l, sc=\E7, 
	smam=\E[?7h, tbc=\E[g, vpa=\E[%i%p1%dd, 

#### ANSI/ECMA-48 terminals and terminal emulators
#
# See near the end of this file for details on ANSI conformance.
# Don't mess with these entries!  Lots of other entries depend on them!
#
# This section lists entries in a least-capable to most-capable order.
# if you're in doubt about what `ANSI' matches yours, try them in that
# order and back off from the first that breaks.

# ansi-mr is for ANSI terminals with ONLY relative cursor addressing
# and more than one page of memory.  It uses local motions instead of
# direct cursor addressing, and makes almost no assumptions. It does
# assume auto margins, no padding and/or xon/xoff, and a 24x80 screen.
ansi-mr|mem rel cup ansi, 
	am, xon, 
	cols#80, lines#24, use=vanilla, use=ansi+erase, 
	use=ansi+local1, 

# ansi-mini is a bare minimum ANSI terminal. This should work on anything, but 
# beware of screen size problems and memory relative cursor addressing.
ansi-mini|minimum ansi standard terminal, 
	am, xon, 
	cols#80, lines#24, use=vanilla, use=ansi+cup, 
	use=ansi+erase, 

# ansi-mtabs adds relative addressing and minimal tab support 
ansi-mtabs|any ansi terminal with pessimistic assumptions, 
	it#8, 
	ht=^I, use=ansi+local1, use=ansi-mini, 

# ANSI X3.64 from emory!mlhhh (Hugh Hansard) via BRL
#
# The following is an entry for the full ANSI 3.64 (1977).  It lacks
# padding, but most terminals using the standard are "fast" enough
# not to require any -- even at 9600 bps.  If you encounter problems,
# try including the padding specifications.
#
# Note: the :as: and :ae: specifications are not implemented here, for
# the available termcap documentation does not make clear WHICH alternate
# character set to specify.  ANSI 3.64 seems to make allowances for several.
# Please make the appropriate adjustments to fit your needs -- that is
# if you will be using alternate character sets.
#
# There are very few terminals running the full ANSI 3.64 standard,
# so I could only test this entry on one verified terminal (Visual 102).
# I would appreciate the results on other terminals sent to me.
#
# Please report comments, changes, and problems to:
#
# U.S. MAIL:   Hugh Hansard
#              Box: 22830
#              Emory University
#              Atlanta, GA. 30322.
#
# USENET {akgua,msdc,sb1,sb6,gatech}!emory!mlhhh.
#
# (Added vt100 <rc>,<sc> to quiet a tic warning --esr)
ansi77|ansi 3.64 standard 1977 version, 
	am, mir, 
	cols#80, it#8, lines#24, 
	bel=^G, clear=\E[;H\E[2J, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=\E[B, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH, 
	cuu1=\E[A, dch1=\E[P, dl1=\E[M$<5*/>, ed=\E[J, el=\E[K, 
	home=\E[H, ht=^I, il1=\E[L$<5*/>, ind=\ED, kbs=^H, 
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, kf1=\EOP, 
	kf2=\EOR, kf4=\EOS, khome=\E[H, nel=^M\ED, rc=\E8, ri=\EM, 
	rmir=\E[4l, rmso=\E[m, rmul=\E[m, sc=\E7, smir=\E[4h, 
	smso=\E[7m, smul=\E[4m, 

# Procomm and some other ANSI emulations don't recognize all of the ANSI-
# standard capabilities.  This entry deletes <cuu>, <cuf>, <cud>, <cub>, and 
# <vpa>/<hpa> capabilities, forcing curses to use repetitions of <cuu1>, 
# <cuf1>, <cud1> and <cub1>.  Also deleted <ich> and <ich1>, as QModem up to 
# 5.03 doesn't recognize these.  Finally, we delete <rep> and <ri>, which seem
# to confuse many emulators.  On the other hand, we can count on these programs
# doing <rmacs>/<smacs>/<sgr>. Older versions of this entry featured 
# <invis=\E[9m>, but <invis=\E[8m> now seems to be more common under
# ANSI.SYS influence.
# From: Eric S. Raymond <esr@snark.thyrsus.com> Oct 30 1995
pcansi-m|pcansi-mono|ibm-pc terminal programs claiming to be ansi (mono mode), 
	am, mir, msgr, 
	cols#80, it#8, lines#24, 
	bel=^G, cbt=\E[Z, clear=\E[H\E[J, cr=^M, cub1=\E[D, 
	cud1=\E[B, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH, cuu1=\E[A, 
	dch1=\E[P, dl1=\E[M, ed=\E[J, el=\E[K, home=\E[H, ht=^I, 
	hts=\EH, il1=\E[L, ind=^J, kbs=^H, kcub1=\E[D, kcud1=\E[B, 
	kcuf1=\E[C, kcuu1=\E[A, khome=\E[H, tbc=\E[2g, 
	use=klone+sgr-dumb, 
pcansi-25-m|pcansi25m|ibm-pc terminal programs with 25 lines (mono mode), 
	lines#25, use=pcansi-m, 
pcansi-33-m|pcansi33m|ibm-pc terminal programs with 33 lines (mono mode), 
	lines#33, use=pcansi-m, 
pcansi-43-m|ansi43m|ibm-pc terminal programs with 43 lines (mono mode), 
	lines#43, use=pcansi-m, 
# The color versions.  All PC emulators do color...
pcansi|ibm-pc terminal programs claiming to be ansi, 
	use=klone+color, use=pcansi-m, 
pcansi-25|pcansi25|ibm-pc terminal programs with 25 lines, 
	lines#25, use=pcansi, 
pcansi-33|pcansi33|ibm-pc terminal programs with 33 lines, 
	lines#33, use=pcansi, 
pcansi-43|pcansi43|ibm-pc terminal programs with 43 lines, 
	lines#43, use=pcansi, 

# ansi-m -- full ANSI X3.64 with ANSI.SYS-compatible attributes, no color.
# If you want pound signs rather than dollars, replace `B' with `A'
# in the <s0ds>, <s1ds>, <s2ds>, and <s3ds> capabilities.
# From: Eric S. Raymond <esr@snark.thyrsus.com> Nov 6 1995
ansi-m|ansi-mono|ANSI X3.64-1979 terminal with ANSI.SYS compatible attributes, 
	mc5i, 
	cub=\E[%p1%dD, cud=\E[%p1%dB, cuf=\E[%p1%dC, 
	cuu=\E[%p1%dA, dch=\E[%p1%dP, dl=\E[%p1%dM, 
	ech=\E[%p1%dX, el1=\E[1K, hpa=\E[%i%p1%dG, ht=\E[I, 
	ich=\E[%p1%d@, il=\E[%p1%dL, indn=\E[%p1%dS, kbs=^H, 
	kcbt=\E[Z, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kich1=\E[L, mc4=\E[4i, mc5=\E[5i, nel=\r\E[S, 
	rep=%p1%c\E[%p2%{1}%-%db, rin=\E[%p1%dT, s0ds=\E(B, 
	s1ds=\E)B, s2ds=\E*B, s3ds=\E+B, tbc=\E[2g, 
	vpa=\E[%i%p1%dd, use=pcansi-m, 

# ansi -- this terminfo expresses the largest subset of X3.64 that will fit in
# standard terminfo.  Assumes ANSI.SYS-compatible attributes and color.
# From: Eric S. Raymond <esr@snark.thyrsus.com> Nov 6 1995
ansi|ansi/pc-term compatible with color, 
	u6=\E[%i%d;%dR, u7=\E[6n, u8=\E[?%[;0123456789]c, 
	u9=\E[c, 
	use=ecma+color, use=klone+sgr, use=ansi-m, 

# ansi-generic is a vanilla ANSI terminal. This is assumed to implement 
# all the normal ANSI stuff with no extensions. It assumes 
# insert/delete line/char is there, so it won't work with 
# vt100 clones. It assumes video attributes for bold, blink, 
# underline, and reverse, which won't matter much if the terminal 
# can't do some of those. Padding is assumed to be zero, which 
# shouldn't hurt since xon/xoff is assumed.
ansi-generic|generic ansi standard terminal, 
	am, xon, 
	cols#80, lines#24, use=vanilla, use=ansi+csr, use=ansi+cup, 
	use=ansi+rca, use=ansi+erase, use=ansi+tabs, 
	use=ansi+local, use=ansi+idc, use=ansi+idl, use=ansi+rep, 
	use=ansi+sgrbold, use=ansi+arrows, 

#### Linux consoles
#

# This entry is good for the 1.2.13 or later version of the Linux console.
#
# ***************************************************************************
# *                                                                         *
# *                           WARNING:                                      *
# * Linuxes come with a default keyboard mapping kcbt=^I.  This entry, in   *
# * response to user requests, assumes kcbt=\E[Z, the ANSI/ECMA reverse-tab *
# * character. Here are the keymap replacement lines that will set this up: *
# *                                                                         *
#	keycode  15 = Tab             Tab
#		alt     keycode  15 = Meta_Tab
#		shift	keycode  15 = F26
#	string F26 ="\033[Z"
# *                                                                         *
# * This has to use a key slot which is unfortunate (any unused one will    *
# * do, F26 is the higher-numbered one).  The change ought to be built      *
# * into the kernel tables.                                                 *
# *                                                                         *
# ***************************************************************************
#
# The 1.3.x kernels add color-change capabilities; if yours doesn't have this
# and it matters, turn off <ccc>.  The %02x escape used to implement this is
# not back-portable to SV curses and not supported in ncurses versions before
# 1.9.9. All linux kernels since 1.2.13 (at least) set the screen size
# themselves; this entry assumes that capability.
#
# This entry is good for the 1.2.13 or later version of the Linux console.
#
# ***************************************************************************
# *                                                                         *
# *                           WARNING:                                      *
# * Linuxes come with a default keyboard mapping kcbt=^I.  This entry, in   *
# * response to user requests, assumes kcbt=\E[Z, the ANSI/ECMA reverse-tab *
# * character. Here are the keymap replacement lines that will set this up: *
# *                                                                         *
#	keycode  15 = Tab             Tab
#		alt     keycode  15 = Meta_Tab
#		shift	keycode  15 = F26
#	string F26 ="\033[Z"
# *                                                                         *
# * This has to use a key slot which is unfortunate (any unused one will    *
# * do, F26 is the higher-numbered one).  The change ought to be built      *
# * into the kernel tables.                                                 *
# *                                                                         *
# ***************************************************************************
#
# The 1.3.x kernels add color-change capabilities; if yours doesn't have this
# and it matters, turn off <ccc>.  The %02x escape used to implement this is
# not back-portable to SV curses and not supported in ncurses versions before
# 1.9.9. All linux kernels since 1.2.13 (at least) set the screen size
# themselves; this entry assumes that capability.
#
# The 2.2.x kernels add a private mode that sets the cursor type; use that to
# get a block cursor for cvvis.
# reported by Frank Heckenbach <frank@g-n-u.de>.
linux|linux console, 
	am, bce, eo, mir, msgr, xenl, xon, 
	it#8, ncv#2, 
	acsc=+\020\,\021-\030.^Y0\333`\004a\261f\370g\361h\260i\316j\331k\277l\332m\300n\305o~p\304q\304r\304s_t\303u\264v\301w\302x\263y\363z\362{\343|\330}\234~\376, 
	bel=^G, civis=\E[?25l\E[?1c, clear=\E[H\E[J, 
	cnorm=\E[?25h\E[?0c, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=^J, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH, 
	cuu1=\E[A, cvvis=\E[?25h\E[?8c, dch=\E[%p1%dP, dch1=\E[P, 
	dim=\E[2m, dl=\E[%p1%dM, dl1=\E[M, ech=\E[%p1%dX, ed=\E[J, 
	el=\E[K, el1=\E[1K, flash=\E[?5h\E[?5l$<200/>, home=\E[H, 
	hpa=\E[%i%p1%dG, ht=^I, hts=\EH, ich=\E[%p1%d@, ich1=\E[@, 
	il=\E[%p1%dL, il1=\E[L, ind=^J, kb2=\E[G, kbs=\177, 
	kcbt=\E[Z, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kdch1=\E[3~, kend=\E[4~, kf1=\E[[A, kf10=\E[21~, 
	kf11=\E[23~, kf12=\E[24~, kf13=\E[25~, kf14=\E[26~, 
	kf15=\E[28~, kf16=\E[29~, kf17=\E[31~, kf18=\E[32~, 
	kf19=\E[33~, kf2=\E[[B, kf20=\E[34~, kf3=\E[[C, kf4=\E[[D, 
	kf5=\E[[E, kf6=\E[17~, kf7=\E[18~, kf8=\E[19~, kf9=\E[20~, 
	khome=\E[1~, kich1=\E[2~, knp=\E[6~, kpp=\E[5~, kspd=^Z, 
	nel=^M^J, rc=\E8, rev=\E[7m, ri=\EM, rmir=\E[4l, rmso=\E[27m, 
	rmul=\E[24m, rs1=\Ec\E]R, sc=\E7, 
	sgr=\E[0;10%?%p1%t;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p5%t;2%;%?%p6%t;1%;%?%p7%t;8%;%?%p9%t;11%;m, 
	smir=\E[4h, smul=\E[4m, tbc=\E[3g, u6=\E[%i%d;%dR, 
	u7=\E[6n, u8=\E[?6c, u9=\E[c, vpa=\E[%i%p1%dd, 
	use=klone+sgr, use=ecma+color, 
linux-m|Linux console no color, 
	colors@, pairs@, 
	setab@, setaf@, setb@, setf@, use=linux, 
linux-c-nc|linux console 1.3.x hack for ncurses only, 
	ccc, 
	initc=\E]P%p1%x%p2%{255}%*%{1000}%/%02x%p3%{255}%*%{1000}%/%02x%p4%{255}%*%{1000}%/%02x, 
	oc=\E]R, 
	use=linux, 
# From: Dennis Henriksen <opus@osrl.dk>, 9 July 1996
linux-c|linux console 1.3.6+ with private palette for each virtual console, 
	ccc, 
	colors#8, pairs#64, 
	initc=\E]P%?%p1%{9}%>%t%p1%{10}%-%'a'%+%c%e%p1%d%;%p2%{255}%&%Pr%gr%{16}%/%Px%?%gx%{9}%>%t%gx%{10}%-%'A'%+%c%e%gx%d%;%gr%{15}%&%Px%?%gx%{9}%>%t%gx%{10}%-%'A'%+%c%e%gx%d%;%p3%{255}%&%Pr%gr%{16}%/%Px%?%gx%{9}%>%t%gx%{10}%-%'A'%+%c%e%gx%d%;%gr%{15}%&%Px%?%gx%{9}%>%t%gx%{10}%-%'A'%+%c%e%gx%d%;%p4%{255}%&%Pr%gr%{16}%/%Px%?%gx%{9}%>%t%gx%{10}%-%'A'%+%c%e%gx%d%;%gr%{15}%&%Px%?%gx%{9}%>%t%gx%{10}%-%'A'%+%c%e%gx%d%;, 
	oc=\E]R, 
	use=linux, 

# See the note on ICH/ICH1 VERSUS RMIR/SMIR near the end of file
linux-nic|linux with ich/ich1 suppressed for non-curses programs, 
	ich@, ich1@, 
	use=linux, 

# This assumes you have used setfont(8) to load one of the Linux koi8-r fonts.
# acsc entry from Pavel Roskin" <pavel@absolute.spb.su>, 29 Sep 1997.
linux-koi8|linux with koi8 alternate character set, 
	acsc=+\020\,\021-\030.^Y0\215`\004a\221f\234g\237h\220i\276j\205k\203l\202m\204n\212o~p\0q\0r\0s_t\206u\207v\211w\210x\201y\230z\231{\267|\274~\224, 
	use=linux, use=klone+koi8acs, 

# Another entry for KOI8-r with Qing Long's acsc.
# (which one better complies with the standard?)
linux-koi8r|linux with koi8-r alternate character set, 
	use=linux, use=klone+koi8acs, 

# Entry for the latin1 and latin2 fonts
linux-lat|linux with latin1 or latin2 alternate character set, 
	acsc=+\020\,\021-\030.^Y0\333`\004a\013f\370g\361h\260i\316j\211k\214l\206m\203n\305o~p\304q\212r\304s_t\207u\215v\301w\302x\205y\363z\362{\343|\330}\234~\376, 
	use=linux, 

#### NetBSD consoles
#
# pcvt termcap database entries (corresponding to release 3.31)
# Author's last edit-date: [Fri Sep 15 20:29:10 1995]
#
# (For the terminfo master file, I translated these into terminfo syntax.
# Then I dropped all the pseudo-HP entries. we don't want and can't use
# the :Xs: flag. Then I split :is: into a size-independent <is1> and a
# size-dependent <is2>.  Finally, I added <rmam>/<smam> -- esr)

# NOTE: <ich1> has been taken out of this entry. for reference, it should
# be <ich1=\E[@>.  For discussion, see ICH/ICH1 VERSUS RMIR/SMIR below.
# (esr: added <civis> and <cnorm> to resolve NetBSD Problem Report #4583)
pcvtXX|pcvt vt200 emulator (DEC VT220), 
	am, km, mir, msgr, xenl, 
	it#8, vt#3, 
	acsc=++\,\,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz~~, 
	bel=^G, blink=\E[5m, bold=\E[1m, civis=\E[?25l, 
	clear=\E[H\E[J, cnorm=\E[?25h, cr=^M, 
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=^H, 
	cud=\E[%p1%dB, cud1=\E[B, cuf=\E[%p1%dC, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A, 
	dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, 
	el=\E[K, el1=\E[1K, home=\E[H, ht=^I, hts=\EH, ich=\E[%p1%d@, 
	il=\E[%p1%dL, il1=\E[L, ind=\ED, indn=\E[%p1%dS, 
	is1=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, kbs=\177, 
	kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, 
	kdch1=\E[3~, kf1=\E[17~, kf2=\E[18~, kf3=\E[19~, 
	kf4=\E[20~, kf5=\E[21~, kf6=\E[23~, kf7=\E[24~, kf8=\E[25~, 
	khome=\E[1~, kich1=\E[2~, kll=\E[4~, knp=\E[6~, kpp=\E[5~, 
	nel=\EE, rc=\E8, rev=\E[7m, rf=/usr/share/tabset/vt100, 
	ri=\EM, rin=\E[%p1%dT, rmacs=\E(B, rmam=\E[?7l, rmir=\E[4l, 
	rmkx=\E[?1l\E>, rmso=\E[27m, rmul=\E[24m, 
	rs1=\Ec\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7, 
	sgr0=\E[m, smacs=\E(0, smam=\E[?7h, smir=\E[4h, 
	smkx=\E[?1h\E=, smso=\E[7m, smul=\E[4m, tbc=\E[3g, 

#	NetBSD/FreeBSD vt220 terminal emulator console (pc keyboard & monitor)
#	termcap entries for pure VT220-Emulation and 25, 28, 35, 40, 43 and
#	50 lines entries; 80 columns
pcvt25|dec vt220 emulation with 25 lines, 
	cols#80, lines#25, 
	is2=\E[1;25r\E[25;1H, use=pcvtXX, 
pcvt28|dec vt220 emulation with 28 lines, 
	cols#80, lines#28, 
	is2=\E[1;28r\E[28;1H, use=pcvtXX, 
pcvt35|dec vt220 emulation with 35 lines, 
	cols#80, lines#35, 
	is2=\E[1;35r\E[35;1H, use=pcvtXX, 
pcvt40|dec vt220 emulation with 40 lines, 
	cols#80, lines#40, 
	is2=\E[1;40r\E[40;1H, use=pcvtXX, 
pcvt43|dec vt220 emulation with 43 lines, 
	cols#80, lines#43, 
	is2=\E[1;43r\E[43;1H, use=pcvtXX, 
pcvt50|dec vt220 emulation with 50 lines, 
	cols#80, lines#50, 
	is2=\E[1;50r\E[50;1H, use=pcvtXX, 

#	NetBSD/FreeBSD vt220 terminal emulator console (pc keyboard & monitor)
#	termcap entries for pure VT220-Emulation and 25, 28, 35, 40, 43 and
#	50 lines entries; 132 columns
pcvt25w|dec vt220 emulation with 25 lines and 132 cols, 
	cols#132, lines#25, 
	is2=\E[1;25r\E[25;1H, use=pcvtXX, 
pcvt28w|dec vt220 emulation with 28 lines and 132 cols, 
	cols#132, lines#28, 
	is2=\E[1;28r\E[28;1H, use=pcvtXX, 
pcvt35w|dec vt220 emulation with 35 lines and 132 cols, 
	cols#132, lines#35, 
	is2=\E[1;35r\E[35;1H, use=pcvtXX, 
pcvt40w|dec vt220 emulation with 40 lines and 132 cols, 
	cols#132, lines#40, 
	is2=\E[1;40r\E[40;1H, use=pcvtXX, 
pcvt43w|dec vt220 emulation with 43 lines and 132 cols, 
	cols#132, lines#43, 
	is2=\E[1;43r\E[43;1H, use=pcvtXX, 
pcvt50w|dec vt220 emulation with 50 lines and 132 cols, 
	cols#132, lines#50, 
	is2=\E[1;50r\E[50;1H, use=pcvtXX, 

# Terminfo entries to enable the use of the ncurses library in colour on a
# NetBSD-arm32 console (only tested on a RiscPC).
# Created by Dave Millen <dmill@globalnet.co.uk> 22.07.98
# modified codes for setf/setb to setaf/setab, then to klone+color, corrected
# typo in invis - TD
arm100|arm100-am|Arm(RiscPC) ncurses compatible (for 640x480), 
	am, bce, msgr, xenl, xon, 
	cols#80, it#8, lines#30, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>, 
	clear=\E[H\E[J$<50>, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub=\E[%p1%dD, cub1=^H, cud=\E[%p1%dB, cud1=^J, 
	cuf=\E[%p1%dC, cuf1=\E[C$<2>, 
	cup=\E[%i%p1%d;%p2%dH$<5>, cuu=\E[%p1%dA, 
	cuu1=\E[A$<2>, ed=\E[J$<50>, el=\E[K$<3>, el1=\E[1K$<3>, 
	enacs=\E(B\E)0, home=\E[H, ht=^I, hts=\EH, ind=^J, 
	invis=\E[8m$<2>, ka1=\E[q, ka3=\E[s, kb2=\E[r, kbs=^H, 
	kc1=\E[p, kc3=\E[n, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, 
	kcuu1=\E[A, kent=\E[M, kf0=\E[y, kf1=\E[P, kf10=\E[x, 
	kf2=\E[Q, kf3=\E[R, kf4=\E[S, kf5=\E[t, kf6=\E[u, kf7=\E[v, 
	kf8=\E[l, kf9=\E[w, rc=\E8, rev=\E[6m$<2>, ri=\EM$<5>, 
	rmacs=^O, rmam=\E[?7l, rmkx=\E[?1l\E>, rmso=\E[m$<2>, 
	rmul=\E[m$<2>, rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, 
	sc=\E7, 
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t\016%e\017%;, 
	sgr0=\E[m\017$<2>, smacs=^N, smam=\E[?7h, smkx=\E[?1h\E=, 
	smso=\E[7m$<2>, smul=\E[4m$<2>, tbc=\E[3g, 
	use=ecma+sgr, use=klone+color, 
arm100-w|arm100-wam|Arm(RiscPC) ncurses compatible (for 1024x768), 
	cols#132, lines#50, use=arm100, 

# NetBSD/x68k console vt200 emulator. This port runs on a 68K machine
# manufactured by Sharp for the Japenese market.
# From Minoura Makoto <minoura@netlaputa.or.jp>, 12 May 1996
x68k|x68k-ite|NetBSD/x68k ITE, 
	cols#96, lines#32, 
	kclr=\E[9~, khlp=\E[28~, use=vt220, 

# <tv@pobox.com>:
# Entry for the DNARD OpenFirmware console, close to ANSI but not quite.
#
# (still unfinished, but good enough so far.)
ofcons, 
	bw, 
	cols#80, lines#30, 
	bel=^G, blink=\2337;2m, bold=\2331m, clear=^L, cr=^M, 
	cub=\233%p1%dD, cub1=\233D, cud=\233%p1%dB, cud1=\233B, 
	cuf=\233%p1%dC, cuf1=\233C, cup=\233%i%p1%d;%p2%dH, 
	cuu=\233%p1%dA, cuu1=\233A, dch=\233%p1%dP, dch1=\233P, 
	dim=\2332m, dl=\233%p1%dM, dl1=\233M, ed=\233J, el=\233K, 
	flash=^G, ht=^I, ich=\233%p1%d@, ich1=\233@, il=\233%p1%dL, 
	il1=\233L, ind=^J, invis=\2338m, kbs=^H, kcub1=\233D, 
	kcud1=\233B, kcuf1=\233C, kcuu1=\233A, kdch1=\233P, 
	kf1=\2330P, kf10=\2330M, kf2=\2330Q, kf3=\2330W, 
	kf4=\2330x, kf5=\2330t, kf6=\2330u, kf7=\2330q, kf8=\2330r, 
	kf9=\2330p, knp=\233/, kpp=\233?, nel=^M^J, rev=\2337m, 
	rmso=\2330m, rmul=\2330m, sgr0=\2330m, 

# NetBSD "wscons" emulator in vt220 mode
# These are micro-minimal and probably need to be redone for real
# after the manner of the pcvt entries.
wsvt25|NetBSD wscons in 25 line DEC VT220 mode, 
	cols#80, lines#25, use=vt220, 

wsvt25m|NetBSD wscons in 25 line DEC VT220 mode with Meta, 
	km, 
	cols#80, lines#25, use=vt220, 

# `rasterconsole' provided by 4.4BSD, NetBSD and OpenBSD on SPARC, and 
# DECstation/pmax.
rcons|BSD rasterconsole, 
	use=sun-il, 
# Color version of above. Color currenly only provided by NetBSD.
rcons-color|BSD rasterconsole with ANSI color, 
	bce, 
	colors#8, pairs#64, 
	op=\E[m, setab=\E[4%dm, setaf=\E[3%dm, use=rcons, 

#### FreeBSD console entries
#
# From: Andrey Chernov <ache@astral.msk.su> 29 Mar 1996
# Andrey Chernov maintains the FreeBSD termcap distributions.
#
# Note: Users of FreeBSD 2.1.0 and older versions must either upgrade
# or comment out the :cb: capability in the console entry.
#
# Alexander Lukyanov reports:
# I have seen FreeBSD-2.1.5R... The old el1 bug changed, but it is still there.
# Now el1 clears not only to the line beginning, but also a large chunk
# of previous line. But there is another bug - ech does not work at all.
#

# for syscons
# common entry without semigraphics
# Bug: The <op> capability resets attributes.
# Bug? The ech and el1 attributes appear to move the cursor in some cases; for
# instance el1 does if the cursor is moved to the right margin first.  Removed
# by T.Dickey 97/5/3 (ech=\E[%p1%dX, el1=\E[1K)
#
# Setting colors turns off reverse; we cannot guarantee order, so use ncv.
# Note that this disables standout with color.
cons25w|ansiw|ansi80x25-raw|freebsd console (25-line raw mode), 
	am, bce, bw, eo, msgr, npc, 
	colors#8, cols#80, it#8, lines#25, ncv#21, pairs#64, 
	bel=^G, blink=\E[5m, bold=\E[1m, cbt=\E[Z, clear=\E[H\E[J, 
	cnorm=\E[=0C, cr=^M, cub=\E[%p1%dD, cub1=^H, cud=\E[%p1%dB, 
	cud1=\E[B, cuf=\E[%p1%dC, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A, 
	cvvis=\E[=1C, dch=\E[%p1%dP, dch1=\E[P, dim=\E[30;1m, 
	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, home=\E[H, 
	hpa=\E[%i%p1%d`, ht=^I, ich=\E[%p1%d@, ich1=\E[@, 
	il=\E[%p1%dL, il1=\E[L, ind=\E[S, indn=\E[%p1%dS, kb2=\E[E, 
	kbs=^H, kcbt=\E[Z, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, 
	kcuu1=\E[A, kdch1=\177, kend=\E[F, kf1=\E[M, kf10=\E[V, 
	kf11=\E[W, kf12=\E[X, kf2=\E[N, kf3=\E[O, kf4=\E[P, kf5=\E[Q, 
	kf6=\E[R, kf7=\E[S, kf8=\E[T, kf9=\E[U, khome=\E[H, 
	kich1=\E[L, knp=\E[G, kpp=\E[I, nel=\E[E, op=\E[x, rev=\E[7m, 
	ri=\E[T, rin=\E[%p1%dT, rmso=\E[m, rs1=\E[x\E[m\Ec, 
	setab=\E[4%p1%dm, setaf=\E[3%p1%dm, sgr0=\E[m, 
	smso=\E[7m, vpa=\E[%i%p1%dd, 
cons25|ansis|ansi80x25|freebsd console (25-line ansi mode), 
	acsc=-\030.^Y0\333`\004a\260f\370g\361h\261i\025j\331k\277l\332m\300n\305q\304t\303u\264v\301w\302x\263y\363z\362~\371, 
	use=cons25w, 
cons25-m|ansis-mono|ansi80x25-mono|freebsd console (25-line mono ansi mode), 
	colors@, pairs@, 
	bold@, dim@, op@, rmul=\E[m, setab@, setaf@, smul=\E[4m, use=cons25, 
cons30|ansi80x30|freebsd console (30-line ansi mode), 
	lines#30, use=cons25, 
cons30-m|ansi80x30-mono|freebsd console (30-line mono ansi mode), 
	lines#30, use=cons25-m, 
cons43|ansi80x43|freebsd console (43-line ansi mode), 
	lines#43, use=cons25, 
cons43-m|ansi80x43-mono|freebsd console (43-line mono ansi mode), 
	lines#43, use=cons25-m, 
cons50|ansil|ansi80x50|freebsd console (50-line ansi mode), 
	lines#50, use=cons25, 
cons50-m|ansil-mono|ansi80x50-mono|freebsd console (50-line mono ansi mode), 
	lines#50, use=cons25-m, 
cons60|ansi80x60|freebsd console (60-line ansi mode), 
	lines#60, use=cons25, 
cons60-m|ansi80x60-mono|freebsd console (60-line mono ansi mode), 
	lines#60, use=cons25-m, 
cons25r|pc3r|ibmpc3r|cons25-koi8-r|freebsd console w/koi8-r cyrillic, 
	acsc=-\030.^Y0\215`\004a\220f\234h\221i\025j\205k\203l\202m\204n\212q\0t\206u\207v\211w\210x\201y\230z\231~\225, 
	use=cons25w, 
cons25r-m|pc3r-m|ibmpc3r-mono|cons25-koi8r-m|freebsd console w/koi8-r cyrillic (mono), 
	colors@, pairs@, 
	op@, rmul=\E[m, setab@, setaf@, smul=\E[4m, use=cons25r, 
cons50r|cons50-koi8r|freebsd console w/koi8-r cyrillic (50 lines), 
	lines#50, use=cons25r, 
cons50r-m|cons50-koi8r-m|freebsd console w/koi8-r cyrillic (50-line mono), 
	lines#50, use=cons25r-m, 
cons60r|cons60-koi8r|freebsd console w/koi8-r cyrillic (60 lines), 
	lines#60, use=cons25r, 
cons60r-m|cons60-koi8r-m|freebsd console w/koi8-r cyrillic (60-line mono), 
	lines#60, use=cons25r-m, 
# ISO 8859-1 FreeBSD console
cons25l1|cons25-iso8859|freebsd console w/iso 8859-1 chars, 
	acsc=+\253\,\273-\030.\031`\201a\202f\207g\210i\247j\213k\214l\215m\216n\217o\220p\221q\222r\223s\224t\225u\226v\227w\230x\231y\232z\233~\237, 
	use=cons25w, 
cons25l1-m|cons25-iso-m|freebsd console w/iso 8859-1 chars (mono), 
	colors@, pairs@, 
	bold@, dim@, op@, rmul=\E[m, setab@, setaf@, smul=\E[4m, use=cons25l1, 
cons50l1|cons50-iso8859|freebsd console w/iso 8859-1 chars (50 lines), 
	lines#50, use=cons25l1, 
cons50l1-m|cons50-iso-m|freebsd console w/iso 8859-1 chars (50-line mono), 
	lines#50, use=cons25l1-m, 
cons60l1|cons60-iso|freebsd console w/iso 8859-1 chars (60 lines), 
	lines#60, use=cons25l1, 
cons60l1-m|cons60-iso-m|freebsd console w/iso 8859-1 chars (60-line mono), 
	lines#60, use=cons25l1-m, 

#### 386BSD and BSD/OS Consoles
#

# This was the original 386BSD console entry (I think).  
# Some places it's named oldpc3|oldibmpc3.
# From: Alex R.N. Wetmore <aw2t@andrew.cmu.edu>
origpc3|origibmpc3|IBM PC 386BSD Console, 
	am, bw, eo, xon, 
	cols#80, lines#25, 
	acsc=j\331k\277l\332m\300n\305q\304t\303u\264v\301w\302x\263, 
	bold=\E[7m, clear=\Ec, cub1=^H, cud1=\E[B, cuf1=\E[C, 
	cup=\E[%i%p1%2d;%p2%2dH, cuu1=\E[A, ed=\E[J, el=\E[K, 
	home=\E[H, ind=\E[S, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, 
	kcuu1=\E[A, khome=\E[Y, ri=\E[T, rmso=\E[1;0x\E[2;7x, 
	rmul=\E[1;0x\E[2;7x, sgr0=\E[m\E[1;0x\E[2;7x, 
	smso=\E[1;7x\E[2;0x, smul=\E[1;7x\E[2;0x, 

# description of BSD/386 console emulator in version 1.0 (supplied by BSDI)
oldpc3|oldibmpc3|old IBM PC BSD/386 Console, 
	km, 
	lines#25, 
	bel=^G, bold=\E[=15F, cr=^M, cud1=^J, dim=\E[=8F, dl1=\E[M, 
	ht=^I, il1=\E[L, ind=^J, kbs=^H, kcub1=\E[D, kcud1=\E[B, 
	kcuf1=\E[C, kcuu1=\E[A, khome=\E[H, kich1=\E[L, kll=\E[F, 
	knp=\E[G, kpp=\E[I, nel=^M^J, sgr0=\E[=R, 

# Description of BSD/OS console emulator in version 1.1, 2.0, 2.1
# Note, the emulator supports many of the additional console features
# listed in the iBCS2 (e.g. character-set selection) though not all
# are described here.  This entry really ought to be upgraded.
# Also note, the console will also work with fewer lines after doing
# "stty rows NN", e.g. to use 24 lines.
# (Color support from Kevin Rosenberg <kevin@cyberport.com>, 2 May 1996) 
# Bug: The <op> capability resets attributes.
bsdos-pc-nobold|BSD/OS PC console w/o bold, 
	am, eo, km, xon, 
	cols#80, it#8, lines#25, 
	bel=^G, clear=\Ec, cr=^M, cub=\E[%p1%dD, cub1=^H, 
	cud=\E[%p1%dB, cud1=^J, cuf=\E[%p1%dC, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A, 
	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, home=\E[H, ht=^I, 
	il=\E[%p1%dL, il1=\E[L, ind=^J, kbs=^H, kcub1=\E[D, 
	kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, khome=\E[H, kich1=\E[L, 
	kll=\E[F, knp=\E[G, kpp=\E[I, nel=^M^J, rc=\E8, sc=\E7, 
	sgr=\E[0;10%?%p1%t;7%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;%?%p7%t;8%;%?%p9%t;11%;m%?%p5%t\E[=8F%;, 
	use=klone+sgr, use=klone+color, 
bsdos-pc|IBM PC BSD/OS Console, 
	sgr=\E[0;10%?%p1%t;7%;%?%p2%t;1%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;%?%p7%t;8%;%?%p9%t;11%;m, use=bsdos-pc-nobold, 

# Old names for BSD/OS PC console used in releases before 4.1. 
pc3|BSD/OS on the PC Console, 
	use=bsdos-pc-nobold, 
ibmpc3|pc3-bold|BSD/OS on the PC Console with bold instead of underline, 
	use=bsdos-pc, 
 
# BSD/OS on the SPARC 
bsdos-sparc|Sun SPARC BSD/OS Console, 
	use=sun, 
	 
# BSD/OS on the PowerPC 
bsdos-ppc|PowerPC BSD/OS Console, 
	use=bsdos-pc, 

#### DEC VT100 and compatibles
#
# DEC terminals from the vt100 forward are collected here. Older DEC terminals
# and micro consoles can be found in the `obsolete' section.  More details on
# the relationship between the VT100 and ANSI X3.64/ISO 6429/ECMA-48 may be
# found near the end of this file.
#
# Except where noted, these entries are DEC's official terminfos.
# Contact Bill Hedberg <hedberg@hannah.enet.dec.com> of Terminal Support
# Engineering for more information.  Updated terminfos and termcaps 
# are kept available at ftp://gatekeeper.dec.com/pub/DEC/termcaps.
#
# In October 1995 DEC sold its terminals business, including the VT and Dorio
# line and trademark, to SunRiver Data Systems.  SunRiver has since changed
# its name to Boundless Technologies; see http://www.boundless.com.
#

# NOTE:  Any VT100 emulation, whether in hardware or software, almost
# certainly includes what DEC called the `Level 1 editing extension' codes;
# only the very oldest VT100s lacked these and there probably aren't any of
# those left alive.  To capture these, use one of the VT102 entries.
#
# Note that the <xenl> glitch in vt100 is not quite the same as on the Concept,
# since the cursor is left in a different position while in the
# weird state (concept at beginning of next line, vt100 at end
# of this line) so all versions of vi before 3.7 don't handle
# <xenl> right on vt100. The correct way to handle <xenl> is when
# you output the char in column 80, immediately output CR LF
# and then assume you are in column 1 of the next line. If <xenl>
# is on, am should be on too.
# 
# I assume you have smooth scroll off or are at a slow enough baud
# rate that it doesn't matter (1200? or less). Also this assumes
# that you set auto-nl to "on", if you set it off use vt100-nam 
# below.
# 
# The padding requirements listed here are guesses. It is strongly
# recommended that xon/xoff be enabled, as this is assumed here.
# 
# The vt100 uses <rs2> and <rf> rather than <is2>/<tbc>/<hts> because the 
# tab settings are in non-volatile memory and don't need to be 
# reset upon login. Also setting the number of columns glitches 
# the screen annoyingly. You can type "reset" to get them set.
#
# The VT100 series terminals have cursor ("arrows") keys which can operate
# in two different modes: Cursor Mode and Application Mode.  Cursor Mode
# is the reset state, and is assumed to be the normal state.  Application
# Mode is the "set" state.  In Cursor Mode, the cursor keys transmit
# "Esc [ {code}" sequences, conforming to ANSI standards.  In Application
# Mode, the cursor keys transmit "Esc O <code>" sequences.  Application Mode
# was provided primarily as an aid to the porting of VT52 applications.  It is
# assumed that the cursor keys are normally in Cursor Mode, and expected that
# applications such as vi will always transmit the <smkx> string.  Therefore,
# the definitions for the cursor keys are made to match what the terminal
# transmits after the <smkx> string is transmitted.  If the <smkx> string
# is a null string or is not defined, then cursor keys are assumed to be in
# "Cursor Mode", and the cursor keys definitions should match that assumption,
# else the appication may fail.  It is also expected that applications will
# always transmit the <rmkx> string to the terminal before they exit.
#
# The VT100 series terminals have an auxilliary keypad, commonly referred to as
# the "Numeric Keypad", because it is a cluster of numeric and function keys.
# The Numeric Keypad which can operate in two different modes: Numeric Mode and
# Application Mode.  Numeric Mode is the reset state, and is assumed to be
# the normal state.  Application Mode is the "set" state.  In Numeric Mode,
# the numeric and punctuation keys transmit ASCII 7-bit characters, and the 
# Enter key transmits the same as the Return key (Note: the Return key
# can be configured to send either LF (\015) or CR LF).  In Application Mode,
# all the keypad keys transmit "Esc O {code}" sequences.  The PF1 - PF4 keys
# always send the same "Esc O {code}" sequences.  It is assumed that the keypad
# is normally in Numeric Mode.  If an application requires that the keypad be
# in Application Mode then it is expected that the user, or the application,
# will set the TERM environment variable to point to a terminfo entry which has
# defined the <smkx> string to include the codes that switch the keypad into
# Application Mode, and the terminfo entry will also define function key
# fields to match the Application Mode control codes.  If the <smkx> string
# is a null string or is not defined, then the keypad is assumed to be in
# Numeric Mode.  If the <smkx> string switches the keypad into Application
# Mode, it is expected that the <rmkx> string will contain the control codes
# necessary to reset the keypad to "Normal" mode, and it is also expected that
# applications which transmit the <smkx> string will also always transmit the
# <rmkx> string to the terminal before they exit.
#
# Here's a diagram of the VT100 keypad keys with their bindings.
# The top line is the name of the key (some DEC keyboards have the keys
# labelled somewhat differently, like GOLD instead of PF1, but this is
# the most "official" name).  The second line is the escape sequence it
# generates in Application Keypad mode (where "$" means the ESC
# character).  The third line contains two items, first the mapping of
# the key in terminfo, and then in termcap.
#   _______________________________________
#  |   PF1   |   PF2   |   PF3   |   PF4   |
#  |   $OP   |   $OQ   |   $OR   |   $OS   |
#  |_kf1__k1_|_kf2__k2_|_kf3__k3_|_kf4__k4_|
#  |    7         8         9         -    |
#  |   $Ow   |   $Ox   |   $Oy   |   $Om   |
#  |_kf9__k9_|_kf10_k;_|_kf0__k0_|_________|
#  |    4    |    5    |    6    |    ,    |
#  |   $Ot   |   $Ou   |   $Ov   |   $Ol   |
#  |_kf5__k5_|_kf6__k6_|_kf7__k7_|_kf8__k8_|
#  |    1    |    2    |    3    |         |
#  |   $Oq   |   $Or   |   $Os   |  enter  |
#  |_ka1__K1_|_kb2__K2_|_ka3__K3_|  $OM    |
#  |         0         |   .     |         |
#  |        $Op        |  $On    |         |
#  |___kc1_______K4____|_kc3__K5_|_kent_@8_|
#
# And here, for those of you with orphaned VT100s lacking documentation, is
# a description of the soft switches invoked when you do `Set Up'.
# 
#  Scroll 0-Jump               Shifted 3   0-#
#  |      1-Smooth             |           1-British pound sign
#  | Autorepeat 0-Off          | Wrap Around 0-Off
#  | |          1-On           | |           1-On
#  | | Screen 0-Dark Bkg       | | New Line 0-Off
#  | | |      1-Light Bkg      | | |        1-On
#  | | | Cursor 0-Underline    | | | Interlace 0-Off
#  | | | |      1-Block        | | | |         1-On
#  | | | |                     | | | |
#  1 1 0 1       1 1 1 1       0 1 0 0       0 0 1 0       <--Standard Settings
#                | | | |                     | | | |
#                | | | Auto XON/XOFF 0-Off   | | | Power 0-60 Hz
#                | | |               1-On    | | |       1-50 Hz
#                | | Ansi/VT52 0-VT52        | | Bits Per Char. 0-7 Bits
#                | |           1-ANSI        | |                1-8 Bits
#                | Keyclick 0-Off            | Parity 0-Off
#                |          1-On             |        1-On
#                Margin Bell 0-Off           Parity Sense 0-Odd
#                            1-On                         1-Even
#
# The following SET-UP modes are assumed for normal operation:
#	ANSI_MODE	AUTO_XON/XOFF_ON	NEWLINE_OFF	80_COLUMNS
#	WRAP_AROUND_ON  JUMP_SCROLL_OFF
# Other SET-UP modes may be set for operator convenience or communication
# requirements; I recommend
#	AUTOREPEAT_ON	BLOCK_CURSOR	MARGIN_BELL_OFF    SHIFTED_3_#
# Unless you have a graphics add-on such as Digital Engineering's VT640
# (and even then, whenever it can be arranged!) you should set
#	INTERLACE_OFF
#
# (vt100: I added <rmam>/<smam> based on the init string, also <OTbs>. -- esr)
vt100|vt100-am|dec vt100 (w/advanced video), 
	am, msgr, xenl, xon, 
	cols#80, it#8, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>, 
	clear=\E[H\E[J$<50>, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub=\E[%p1%dD, cub1=^H, cud=\E[%p1%dB, cud1=^J, 
	cuf=\E[%p1%dC, cuf1=\E[C$<2>, 
	cup=\E[%i%p1%d;%p2%dH$<5>, cuu=\E[%p1%dA, 
	cuu1=\E[A$<2>, ed=\E[J$<50>, el=\E[K$<3>, el1=\E[1K$<3>, 
	enacs=\E(B\E)0, home=\E[H, ht=^I, hts=\EH, ind=^J, ka1=\EOq, 
	ka3=\EOs, kb2=\EOr, kbs=^H, kc1=\EOp, kc3=\EOn, kcub1=\EOD, 
	kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, 
	kf1=\EOP, kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt, 
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, rc=\E8, 
	rev=\E[7m$<2>, ri=\EM$<5>, rmacs=^O, rmam=\E[?7l, 
	rmkx=\E[?1l\E>, rmso=\E[m$<2>, rmul=\E[m$<2>, 
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7, 
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t\016%e\017%;, 
	sgr0=\E[m\017$<2>, smacs=^N, smam=\E[?7h, smkx=\E[?1h\E=, 
	smso=\E[7m$<2>, smul=\E[4m$<2>, tbc=\E[3g, 
vt100nam|vt100-nam|vt100 no automargins, 
	am@, xenl@, use=vt100-am, 
vt100-vb|dec vt100 (w/advanced video) & no beep, 
	bel@, flash=\E[?5h\E[?5l, use=vt100, 

# Ordinary vt100 in 132 column ("wide") mode.
vt100-w|vt100-w-am|dec vt100 132 cols (w/advanced video), 
	cols#132, lines#24, 
	rs2=\E>\E[?3h\E[?4l\E[?5l\E[?8h, use=vt100-am, 
vt100-w-nam|vt100-nam-w|dec vt100 132 cols (w/advanced video no automargin), 
	cols#132, lines#14, vt@, 
	rs2=\E>\E[?3h\E[?4l\E[?5l\E[?8h, use=vt100-nam, 

# vt100 with no advanced video.
vt100-nav|vt100 without advanced video option, 
	xmc#1, 
	blink@, bold@, rev@, rmso=\E[m, rmul@, sgr@, sgr0@, smso=\E[7m, 
	smul@, 
	use=vt100, 
vt100-nav-w|vt100-w-nav|dec vt100 132 cols 14 lines (no advanced video option), 
	cols#132, lines#14, use=vt100-nav, 

# vt100 with one of the 24 lines used as a status line.
# We put the status line on the top.
vt100-s|vt100-s-top|vt100-top-s|vt100 for use with top sysline, 
	eslok, hs, 
	lines#23, 
	clear=\E[2;1H\E[J$<50>, csr=\E[%i%i%p1%d;%p2%dr, 
	cup=\E[%i%p1%{1}%+%d;%p2%dH$<5>, dsl=\E7\E[1;24r\E8, 
	fsl=\E8, home=\E[2;1H, is2=\E7\E[2;24r\E8, 
	tsl=\E7\E[1;%p1%dH\E[1K, use=vt100-am, 

# Status line at bottom. 
# Clearing the screen will clobber status line.
vt100-s-bot|vt100-bot-s|vt100 for use with bottom sysline, 
	eslok, hs, 
	lines#23, 
	dsl=\E7\E[1;24r\E8, fsl=\E8, is2=\E[1;23r\E[23;1H, 
	tsl=\E7\E[24;%p1%dH\E[1K, 
	use=vt100-am, 

# Most of the `vt100' emulators out there actually emulate a vt102
# This entry (or vt102-nsgr) is probably the right thing to use for
# these.  
vt102|dec vt102, 
	mir, 
	dch1=\E[P, dl1=\E[M, il1=\E[L, rmir=\E[4l, smir=\E[4h, use=vt100, 
vt102-w|dec vt102 in wide mode, 
	cols#132, 
	rs3=\E[?3h, use=vt102, 

# Many brain-dead PC comm programs that pretend to be `vt100-compatible'
# fail to interpret the ^O and ^N escapes properly.  Symptom: the <sgr0>
# string in the canonical vt100 entry above leaves the screen littered
# with little  snowflake or star characters (IBM PC ROM character \017 = ^O)
# after highlight turnoffs.  This entry should fix that, and even leave
# ACS support working, at the cost of making multiple-highlight changes 
# slightly more expensive.
# From: Eric S. Raymond <esr@snark.thyrsus.com> July 22 1995
vt102-nsgr|vt102 no sgr (use if you see snowflakes after highlight changes), 
	sgr@, sgr0=\E[m, 
	use=vt102, 

# VT125 Graphics CRT.  Clear screen also erases graphics
vt125|vt125 graphics terminal, 
	clear=\E[H\E[2J\EPpS(E)\E\\$<50>, use=vt100, 

# This isn't a DEC entry, it came from University of Wisconsin.
# (vt131: I added <rmam>/<smam> based on the init string, also <OTbs> -- esr)
vt131|dec vt131, 
	am, xenl, 
	cols#80, it#8, lines#24, vt#3, 
	bel=^G, blink=\E[5m$<2/>, bold=\E[1m$<2/>, 
	clear=\E[;H\E[2J$<50/>, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=^J, cuf1=\E[C$<2/>, 
	cup=\E[%i%p1%d;%p2%dH$<5/>, cuu1=\E[A$<2/>, 
	ed=\E[J$<50/>, el=\E[K$<3/>, home=\E[H, ht=^I, 
	is2=\E[1;24r\E[24;1H, kbs=^H, kcub1=\EOD, kcud1=\EOB, 
	kcuf1=\EOC, kcuu1=\EOA, kf1=\EOP, kf2=\EOQ, kf3=\EOR, 
	kf4=\EOS, nel=^M^J, rc=\E8, rev=\E[7m$<2/>, ri=\EM$<5/>, 
	rmam=\E[?7h, rmkx=\E[?1l\E>, rmso=\E[m$<2/>, 
	rmul=\E[m$<2/>, 
	rs1=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7, 
	sgr0=\E[m$<2/>, smam=\E[?7h, smkx=\E[?1h\E=, 
	smso=\E[7m$<2/>, smul=\E[4m$<2/>, 

# vt132 - like vt100 but slower and has ins/del line and such.
# I'm told that <smir>/<rmir> are backwards in the terminal from the
# manual and from the ANSI standard, this describes the actual 
# terminal. I've never actually used a vt132 myself, so this 
# is untested.
#
vt132|DEC vt132, 
	xenl, 
	dch1=\E[P$<7>, dl1=\E[M$<99>, il1=\E[L$<99>, ind=\n$<30>, 
	ip=$<7>, rmir=\E[4h, smir=\E[4l, 
	use=vt100, 

# This vt220 description maps F5--F9 to the second block of function keys
# at the top of the keyboard.  The "DO" key is used as F10 to avoid conflict
# with the key marked (ESC) on the vt220.  See vt220d for an alternate mapping.
# PF1--PF4 are used as F1--F4.
#
vt220-old|vt200-old|DEC VT220 in vt100 emulation mode, 
	am, mir, xenl, xon, 
	cols#80, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>, civis=\E[?25l, 
	clear=\E[H\E[2J$<50>, cnorm=\E[?25h, cr=^M, 
	csr=\E[%i%p1%d;%p2%dr, cub1=^H, cud1=\E[B, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH$<10>, cuu1=\E[A, dch1=\E[P, 
	dl1=\E[M, ed=\E[J$<50>, el=\E[K$<3>, home=\E[H, ht=^I, 
	if=/usr/share/tabset/vt100, il1=\E[L, ind=\ED$<20/>, 
	is2=\E[1;24r\E[24;1H, kbs=^H, kcub1=\E[D, kcud1=\E[B, 
	kcuf1=\E[C, kcuu1=\E[A, kdch1=\E[3~, kend=\E[4~, kf1=\EOP, 
	kf10=\E[29~, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\E[17~, 
	kf6=\E[18~, kf7=\E[19~, kf8=\E[20~, kf9=\E[21~, 
	khome=\E[1~, kich1=\E[2~, knp=\E[6~, kpp=\E[5~, rc=\E8, 
	rev=\E[7m$<2>, rf=/usr/share/tabset/vt100, 
	ri=\EM$<14/>, rmacs=\E(B$<4>, rmam=\E[?7l, rmir=\E[4l, 
	rmso=\E[27m, rmul=\E[24m, 
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7, 
	sgr=\E[0%?%p6%t;1%;%?%p2%t;4%;%?%p4%t;5%;%?%p1%p3%|%t;7%;m%?%p9%t\E(0%e\E(B%;, 
	sgr0=\E[m$<2>, smacs=\E(0$<2>, smam=\E[?7h, smir=\E[4h, 
	smso=\E[7m, smul=\E[4m, 

# A much better description of the VT200/220; used to be vt220-8
vt220|vt200|dec vt220, 
	am, mc5i, mir, msgr, xenl, xon, 
	cols#80, it#8, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[H\E[J, cr=^M, 
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=^H, 
	cud=\E[%p1%dB, cud1=^J, cuf=\E[%p1%dC, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A, 
	dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, 
	ech=\E[%p1%dX, ed=\E[J, el=\E[K, el1=\E[1K, enacs=\E)0, 
	flash=\E[?5h$<200/>\E[?5l, home=\E[H, ht=^I, hts=\EH, 
	ich=\E[%p1%d@, if=/usr/share/tabset/vt100, 
	il=\E[%p1%dL, il1=\E[L, ind=\ED, 
	is2=\E[?7h\E[>\E[?1h\E F\E[?4l, kbs=^H, kcub1=\E[D, 
	kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, kf1=\EOP, kf10=\E[21~, 
	kf11=\E[23~, kf12=\E[24~, kf13=\E[25~, kf14=\E[26~, 
	kf17=\E[31~, kf18=\E[32~, kf19=\E[33~, kf2=\EOQ, 
	kf20=\E[34~, kf3=\EOR, kf4=\EOS, kf6=\E[17~, kf7=\E[18~, 
	kf8=\E[19~, kf9=\E[20~, kfnd=\E[1~, khlp=\E[28~, 
	khome=\E[H, kich1=\E[2~, knp=\E[6~, kpp=\E[5~, krdo=\E[29~, 
	kslt=\E[4~, lf1=pf1, lf2=pf2, lf3=pf3, lf4=pf4, mc0=\E[i, 
	mc4=\E[4i, mc5=\E[5i, nel=\EE, rc=\E8, rev=\E[7m, ri=\EM, 
	rmacs=^O, rmam=\E[?7l, rmir=\E[4l, rmso=\E[27m, 
	rmul=\E[24m, rs1=\E[?3l, sc=\E7, sgr0=\E[m, smacs=^N, 
	smam=\E[?7h, smir=\E[4h, smso=\E[7m, smul=\E[4m, tbc=\E[3g, 
vt220-w|vt200-w|DEC vt220 in wide mode, 
	cols#132, 
	rs3=\E[?3h, use=vt220, 
vt220-8bit|vt220-8|vt200-8bit|vt200-8|dec vt220/200 in 8-bit mode, 
	am, mc5i, mir, msgr, xenl, xon, 
	cols#80, it#8, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\2335m, bold=\2331m, clear=\233H\233J, cr=^M, 
	csr=\233%i%p1%d;%p2%dr, cub=\233%p1%dD, cub1=^H, 
	cud=\233%p1%dB, cud1=^J, cuf=\233%p1%dC, cuf1=\233C, 
	cup=\233%i%p1%d;%p2%dH, cuu=\233%p1%dA, cuu1=\233A, 
	dch=\233%p1%dP, dch1=\233P, dl=\233%p1%dM, dl1=\233M, 
	ech=\233%p1%dX, ed=\233J, el=\233K, el1=\2331K, enacs=\E)0, 
	flash=\233?5h$<200/>\233?5l, home=\233H, ht=^I, hts=\EH, 
	ich=\233%p1%d@, if=/usr/share/tabset/vt100, 
	il=\233%p1%dL, il1=\233L, ind=\ED, 
	is2=\233?7h\233>\233?1h\E F\233?4l, kbs=^H, 
	kcub1=\233D, kcud1=\233B, kcuf1=\233C, kcuu1=\233A, 
	kf1=\EOP, kf10=\23321~, kf11=\23323~, kf12=\23324~, 
	kf13=\23325~, kf14=\23326~, kf17=\23331~, kf18=\23332~, 
	kf19=\23333~, kf2=\EOQ, kf20=\23334~, kf3=\EOR, kf4=\EOS, 
	kf6=\23317~, kf7=\23318~, kf8=\23319~, kf9=\23320~, 
	kfnd=\2331~, khlp=\23328~, khome=\233H, kich1=\2332~, 
	knp=\2336~, kpp=\2335~, krdo=\23329~, kslt=\2334~, lf1=pf1, 
	lf2=pf2, lf3=pf3, lf4=pf4, mc0=\233i, mc4=\2334i, mc5=\2335i, 
	nel=\EE, rc=\E8, rev=\2337m, ri=\EM, rmacs=^O, rmam=\233?7l, 
	rmir=\2334l, rmso=\23327m, rmul=\23324m, rs1=\233?3l, 
	sc=\E7, sgr0=\233m, smacs=^N, smam=\233?7h, smir=\2334h, 
	smso=\2337m, smul=\2334m, tbc=\2333g, 

#
# vt220d:
# This vt220 description regards F6--F10 as the second block of function keys
# at the top of the keyboard.  This mapping follows the description given
# in the VT220 Programmer Reference Manual and agrees with the labeling
# on some terminals that emulate the vt220.  There is no support for an F5.
# See vt220 for an alternate mapping. 
#
vt220d|DEC VT220 in vt100 mode with DEC function key labeling, 
	kf10=\E[21~, kf11=\E[23~, kf12=\E[24~, kf13=\E[25~, 
	kf14=\E[26~, kf15=\E[28~, kf16=\E[29~, kf17=\E[31~, 
	kf18=\E[32~, kf19=\E[33~, kf20=\E[34~, kf5@, kf6=\E[17~, 
	kf7=\E[18~, kf8=\E[19~, kf9=\E[20~, 
	use=vt220-old, 

vt220-nam|v200-nam|VT220 in vt100 mode with no auto margins, 
	am@, 
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7l\E[?8h, use=vt220, 

# vt220 termcap written Tue Oct 25 20:41:10 1988 by Alex Latzko
# (not an official DEC entry!)
# The problem with real vt220 terminals is they don't send escapes when in
# in vt220 mode.  This can be gotten around two ways.  1> don't send
# escapes or 2> put the vt220 into vt100 mode and use all the nifty
# features of vt100 advanced video which it then has.
#
# This entry takes the view of putting a vt220 into vt100 mode so
# you can use the escape key in emacs and everything else which needs it.
#
# You probably don't want to use this on a VMS machine since VMS will think
# it has a vt220 and will get fouled up coming out of emacs
#
# From: Alexander Latzko <latzko@marsenius.rutgers.edu>, 30 Dec 1996
# (Added vt100 <rc>,<sc> to quiet a tic warning -- esr)
vt200-js|vt220-js|dec vt200 series with jump scroll, 
	am, 
	cols#80, 
	bel=^G, clear=\E[H\E[J, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=^J, cup=\E[%i%p1%d;%p2%dH, cuu1=\E[A, 
	dch1=\E[P, dl1=\E[M, ed=\E[J, el=\E[K, home=\E[H, ht=^I, 
	il1=\E[L, ind=\ED, 
	is2=\E[61"p\E[H\E[?3l\E[?4l\E[?1l\E[?5l\E[?6l\E[?7h\E[?8h\E[?25h\E>\E[m, 
	kbs=^H, kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, 
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS, nel=^M\ED, rc=\E8, 
	rf=/usr/lib/tabset/vt100, ri=\EM, rmdc=, rmir=\E[4l, 
	rmkx=\E[?1l\E>, rmso=\E[27m$<5/>, rmul=\E[24m, 
	rs1=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7, smdc=, 
	smir=\E[4h, smkx=\E[?1h\E=, smso=\E[7m$<5/>, smul=\E[4m, 
 

# This was DEC's vt320.  Use the purpose-built one below instead 
#vt320|DEC VT320 in vt100 emulation mode,
#	use=vt220,

#
# Use v320n for SCO's LYRIX.  Otherwise, use Adam Thompson's vt320-nam.
#
vt320nam|v320n|DEC VT320 in vt100 emul. mode with NO AUTO WRAP mode, 
	am@, 
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7l\E[?8h, use=vt220, 

# These entries are not DEC's official ones, they were purpose-built for the 
# VT320.  Here are the designer's notes:
# <kel> is end on a PC kbd.  Actually 'select' on a VT.  Mapped to 
# 'Erase to End of Field'... since nothing seems to use 'end' anyways...
# khome is Home on a PC kbd.  Actually 'FIND' on a VT.
# Things that use <knxt> usually use tab anyways... and things that don't use
# tab usually use <knxt> instead...
# kprv is same as tab - Backtab is useless...
# I left out <sgr> because of its RIDICULOUS complexity,
# and the resulting fact that it causes the termcap translation of the entry
# to SMASH the 1k-barrier...
# From: Adam Thompson <athompso@pangea.ca> Sept 10 1995
# (vt320: uncommented <fsl>, comnmmented out <kslt> to avoid a conflict --esr) 
vt320|vt300|dec vt320 7 bit terminal, 
	am, eslok, hs, mir, msgr, xenl, 
	cols#80, lines#24, wsl#80, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m, bold=\E[1m, civis=\E[?25l, 
	clear=\E[H\E[2J, cnorm=\E[?25h, cr=^M, 
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=^H, 
	cud=\E[%p1%dB, cud1=^J, cuf=\E[%p1%dC, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A, 
	dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, 
	ech=\E[%p1%dX, ed=\E[J, el=\E[K, el1=\E[1K, fsl=\E[0$}, 
	home=\E[H, ht=^I, hts=\EH, ich=\E[%p1%d@, il=\E[%p1%dL, 
	il1=\E[L, ind=\ED, 
	is2=\E>\E[?3l\E[?4l\E[5?l\E[?7h\E[?8h\E[1;24r\E[24;1H, 
	ka1=\EOw, ka3=\EOy, kb2=\EOu, kbs=\177, kc1=\EOq, kc3=\EOs, 
	kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, 
	kdch1=\E[3~, kel=\E[4~, kent=\EOM, kf1=\EOP, kf10=\E[21~, 
	kf11=\E[23~, kf12=\E[24~, kf13=\E[25~, kf14=\E[26~, 
	kf15=\E[28~, kf16=\E[29~, kf17=\E[31~, kf18=\E[32~, 
	kf19=\E[33~, kf2=\EOQ, kf20=\E[34~, kf3=\EOR, kf4=\EOS, 
	kf6=\E[17~, kf7=\E[18~, kf8=\E[19~, kf9=\E[20~, 
	khome=\E[1~, kich1=\E[2~, knp=\E[6~, knxt=^I, kpp=\E[5~, 
	kprv=\E[Z, mc0=\E[i, mc4=\E[?4i, mc5=\E[?5i, nel=\EE, rc=\E8, 
	rev=\E[7m, rf=/usr/share/tabset/vt300, ri=\EM, 
	rmacs=\E(B, rmam=\E[?7l, rmir=\E[4l, rmkx=\E[?1l\E>, 
	rmso=\E[m, rmul=\E[m, 
	rs2=\E>\E[?3l\E[?4l\E[5?l\E[?7h\E[?8h\E[1;24r\E[24;1H, 
	sc=\E7, sgr0=\E[m, smacs=\E(0, smam=\E[?7h, smir=\E[4h, 
	smkx=\E[?1h\E=, smso=\E[7m, smul=\E[4m, tbc=\E[3g, 
	tsl=\E[1$}\E[H\E[K, 
vt320-nam|vt300-nam|dec vt320 7 bit terminal with no am to make SAS happy, 
	am@, 
	is2=\E>\E[?3l\E[?4l\E[5?l\E[?7l\E[?8h\E[1;24r\E[24;1H, 
	rs2=\E>\E[?3l\E[?4l\E[5?l\E[?7l\E[?8h\E[1;24r\E[24;1H, 
	use=vt320, 
# We have to init 132-col mode, not 80-col mode.
vt320-w|vt300-w|dec vt320 wide 7 bit terminal, 
	cols#132, wsl#132, 
	is2=\E>\E[?3h\E[?4l\E[5?l\E[?7h\E[?8h\E[1;24r\E[24;1H, 
	rs2=\E>\E[?3h\E[?4l\E[5?l\E[?7h\E[?8h\E[1;24r\E[24;1H, 
	use=vt320, 
vt320-w-nam|vt300-w-nam|dec vt320 wide 7 bit terminal with no am, 
	am@, 
	is2=\E>\E[?3h\E[?4l\E[5?l\E[?7l\E[?8h\E[1;24r\E[24;1H, 
	rs2=\E>\E[?3h\E[?4l\E[5?l\E[?7l\E[?8h\E[1;24r\E[24;1H, 
	use=vt320-w, 

# VT330 and VT340 -- These are ReGIS and SIXEL graphics terminals
#   which are pretty much a superset of the VT320.  They have the
#   host writable status line, yet another different DRCS matrix size,
#   and such, but they add the DEC Technical character set, Multiple text
#   pages, selectable length pages, and the like.  The difference between
#   the vt330 and vt340 is that the latter has only 2 planes and a monochrome
#   monitor, the former has 4 planes and a color monitor.  These terminals
#   support VT131 and ANSI block mode, but as with much of these things,
#   termcap/terminfo doesn't deal with these features.
#
# Note that this entry is are set up in what was the standard way for GNU
# Emacs v18 terminal modes to deal with the cursor keys in that the arrow
# keys were switched into application mode at the same time the numeric pad
# is switched into application mode.  This changes the definitions of the
# arrow keys.  Emacs v19 is smarter and mines its keys directly out of 
# your termcap or terminfo entry,
#
# From: Daniel Glasser <dag@persoft.persoft.com>, 13 Oct 1993
# (vt340: string capability "sb=\E[M" corrected to "sr";
# also, added <rmam>/<smam> based on the init string -- esr)
vt340|dec-vt340|vt330|dec-vt330|dec vt340 graphics terminal with 24 line page, 
	am, eslok, hs, mir, msgr, xenl, xon, 
	cols#80, it#8, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	blink=\E[5m, bold=\E[1m, civis=\E[?25l, clear=\E[H\E[J, 
	cnorm=\E[?25h, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub=\E[%p1%dD, cub1=^H, cud=\E[%p1%dB, cud1=^J, 
	cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH, 
	cuu=\E[%p1%dA, cuu1=\E[A, cvvis=\E[?25h, dch=\E[%p1%dP, 
	dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, 
	dsl=\E[2$~\r\E[1$}\E[K\E[$}, ed=\E[J, el=\E[K, 
	flash=\E[?5h\E[?5l$<200/>, fsl=\E[$}, home=\E[H, ht=^I, 
	hts=\EH, ich=\E[%p1%d@, il=\E[%p1%dL, il1=\E[L, ind=\ED, 
	is2=\E<\E F\E>\E[?1h\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h\E[1;24r\E[24;1H, 
	kbs=^H, kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, 
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf6=\E[17~, 
	kf7=\E[18~, kf8=\E[19~, kf9=\E[20~, lf1=pf1, lf2=pf2, 
	lf3=pf3, lf4=pf4, nel=^M\ED, rc=\E8, rev=\E[7m, 
	rf=/usr/share/tabset/vt300, ri=\EM, rmacs=^O, 
	rmam=\E[?7l, rmir=\E[4l, rmkx=\E[?1l\E>, rmso=\E[27m, 
	rmul=\E[24m, rs1=\E[?3l, sc=\E7, sgr0=\E[m, smacs=^N, 
	smam=\E[?7h, smir=\E[4h, smkx=\E[?1h\E=, smso=\E[7m, 
	smul=\E[4m, tbc=\E[3g, tsl=\E[2$~\E[1$}\E[1;%dH, 

# DEC doesn't supply a vt400 description, so we add Daniel Glasser's
# (originally written with vt420 as its primary name, and usable for it).
# 
# VT400/420 -- This terminal is a superset of the vt320.  It adds the multiple 
#    text pages and long text pages with selectable length of the vt340, along
#    with left and right margins, rectangular area text copy, fill, and erase
#    operations, selected region character attribute change operations,
#    page memory and rectangle checksums, insert/delete column, reception
#    macros, and other features too numerous to remember right now.  TERMCAP
#    can only take advantage of a few of these added features.
#
# Note that this entry is are set up in what was the standard way for GNU
# Emacs v18 terminal modes to deal with the cursor keys in that the arrow
# keys were switched into application mode at the same time the numeric pad
# is switched into application mode.  This changes the definitions of the
# arrow keys.  Emacs v19 is smarter and mines its keys directly out of 
# your termcap entry,
#
# From: Daniel Glasser <dag@persoft.persoft.com>, 13 Oct 1993
# (vt400: string capability ":sb=\E[M:" corrected to ":sr=\E[M:";
# also, added <rmam>/<smam> based on the init string -- esr)
vt400|vt400-24|dec-vt400|dec vt400 24x80 column autowrap, 
	am, eslok, hs, mir, msgr, xenl, xon, 
	cols#80, it#8, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	blink=\E[5m, bold=\E[1m, civis=\E[?25l, 
	clear=\E[H\E[J$<10/>, cnorm=\E[?25h, cr=^M, 
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=^H, 
	cud=\E[%p1%dB, cud1=^J, cuf=\E[%p1%dC, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A, 
	cvvis=\E[?25h, dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, 
	dl1=\E[M, dsl=\E[2$~\r\E[1$}\E[K\E[$}, ed=\E[J$<10/>, 
	el=\E[K$<4/>, flash=\E[?5h\E[?5l$<200/>, fsl=\E[$}, 
	home=\E[H, ht=^I, hts=\EH, ich=\E[%p1%d@, ich1=\E[@, 
	il=\E[%p1%dL, il1=\E[L, ind=\ED, 
	is2=\E<\E F\E>\E[?1h\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h\E[1;24r\E[24;1H, 
	kbs=^H, kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, 
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf6=\E[17~, 
	kf7=\E[18~, kf8=\E[19~, kf9=\E[20~, lf1=pf1, lf2=pf2, 
	lf3=pf3, lf4=pf4, nel=^M\ED, rc=\E8, rev=\E[7m, 
	rf=/usr/share/tabset/vt300, ri=\EM, rmacs=^O, 
	rmam=\E[?7l, rmir=\E[4l, rmkx=\E[?1l\E>, rmso=\E[27m, 
	rmul=\E[24m, rs1=\E<\E[?3l\E[!p\E[?7h, sc=\E7, sgr0=\E[m, 
	smacs=^N, smam=\E[?7h, smir=\E[4h, smkx=\E[?1h\E=, 
	smso=\E[7m, smul=\E[4m, tbc=\E[3g, 
	tsl=\E[2$~\E[1$}\E[1;%dH, 

# (vt420: I removed <kf0>, it collided with <kf10>.  I also restored
# a missing <sc> -- esr)
vt420|DEC VT420, 
	am, mir, xenl, xon, 
	cols#80, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>, 
	clear=\E[H\E[2J$<50>, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=\E[B, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH$<10>, cuu1=\E[A, dch1=\E[P, 
	dl1=\E[M, ed=\E[J$<50>, el=\E[K$<3>, home=\E[H, ht=^I, 
	if=/usr/share/tabset/vt300, il1=\E[L, ind=\ED, 
	is2=\E[1;24r\E[24;1H, is3=\E[?67h\E[64;1"p, kbs=^H, 
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kdch1=\E[3~, kf1=\EOP, kf10=\E[29~, kf2=\EOQ, kf3=\EOR, 
	kf4=\EOS, kf5=\E[17~, kf6=\E[18~, kf7=\E[19~, kf8=\E[20~, 
	kf9=\E[21~, kfnd=\E[1~, kich1=\E[2~, knp=\E[6~, kpp=\E[5~, 
	kslt=\E[4~, rc=\E8, rev=\E[7m$<2>, 
	rf=/usr/share/tabset/vt300, ri=\EM, rmacs=\E(B$<4>, 
	rmam=\E[?7l, rmir=\E[4l, rmkx=\E>, 
	rmsc=\E[?0;0r\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, 
	rmso=\E[m, rmul=\E[m, rs3=\E[?67h\E[64;1"p, sc=\E7, 
	sgr=\E[0%?%p6%t;1%;%?%p2%t;4%;%?%p4%t;5%;%?%p1%p3%|%t;7%;m%?%p9%t\E(0%e\E(B%;, 
	sgr0=\E[m$<2>, smacs=\E(0$<2>, smam=\E[?7h, smir=\E[4h, 
	smkx=\E=, smso=\E[7m, smul=\E[4m, 

#
# DEC VT220 and up support DECUDK (user-defined keys).  DECUDK (i.e., pfx)
# takes two parameters, the key and the string.  Translating the key is
# straightforward (keys 1-5 are not defined on real terminals, though some
# emulators define these):
#
#               if (key < 16) then  value = key;
#               else if (key < 21) then value = key + 1; 
#               else if (key < 25) then value = key + 2;
#               else if (key < 27) then value = key + 3;
#               else if (key < 30) then value = key + 4;
#               else value = key + 5;
#
# The string must be the hexadecimal equivalent, e.g., "5052494E" for "PRINT". 
# There's no provision in terminfo for emitting a string in this format, so the
# application has to know it.
#
vt420pc|DEC VT420 w/PC keyboard, 
	kdch1=\177, kend=\E[4~, kf1=\E[11~, kf10=\E[21~, 
	kf11=\E[23~, kf12=\E[24~, kf13=\E[11;2~, kf14=\E[12;2~, 
	kf15=\E[13;2~, kf16=\E[14;2~, kf17=\E[15;2~, 
	kf18=\E[17;2~, kf19=\E[18;2~, kf2=\E[12~, kf20=\E[19;2~, 
	kf21=\E[20;2~, kf22=\E[21;2~, kf23=\E[23;2~, 
	kf24=\E[24;2~, kf25=\E[23~, kf26=\E[24~, kf27=\E[25~, 
	kf28=\E[26~, kf29=\E[28~, kf3=\E[13~, kf30=\E[29~, 
	kf31=\E[31~, kf32=\E[32~, kf33=\E[33~, kf34=\E[34~, 
	kf35=\E[35~, kf36=\E[36~, kf37=\E[23;2~, kf38=\E[24;2~, 
	kf39=\E[25;2~, kf4=\E[14~, kf40=\E[26;2~, kf41=\E[28;2~, 
	kf42=\E[29;2~, kf43=\E[31;2~, kf44=\E[32;2~, 
	kf45=\E[33;2~, kf46=\E[34;2~, kf47=\E[35;2~, 
	kf48=\E[36;2~, kf5=\E[15~, kf6=\E[17~, kf7=\E[18~, 
	kf8=\E[19~, kf9=\E[20~, khome=\E[H, 
	pctrm=USR_TERM\:vt420pcdos\:, 
	pfx=\EP1;1|%?%{16}%p1%>%t%{0}%e%{21}%p1%>%t%{1}%e%{25}%p1%>%t%{2}%e%{27}%p1%>%t%{3}%e%{30}%p1%>%t%{4}%e%{5}%;%p1%+%d/%p2%s\E\\, use=vt420, 

vt420pcdos|DEC VT420 w/PC for DOS Merge, 
	lines#25, 
	dispc=%?%p2%{19}%=%t\E\023\021%e%p2%{32}%<%t\E%p2%c%e%p2%{127}%=%t\E\177%e%p2%c%;, 
	pctrm@, 
	rmsc=\E[?0;0r\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sgr@, 
	sgr0=\E[m, smsc=\E[?1;2r\E[34h, 
	use=vt420pc, 

vt420f|DEC VT420 with VT kbd; VT400 mode; F1-F5 used as Fkeys, 
	kdch1=\177, kf1=\E[11~, kf10=\E[21~, kf11=\E[23~, 
	kf12=\E[24~, kf13=\E[25~, kf14=\E[26~, kf15=\E[28~, 
	kf16=\E[29~, kf17=\E[31~, kf18=\E[32~, kf19=\E[33~, 
	kf2=\E[12~, kf20=\E[34~, kf3=\E[13~, kf4=\E[14~, 
	kf5=\E[15~, kf6=\E[17~, kf7=\E[18~, kf8=\E[19~, kf9=\E[20~, 
	khome=\E[H, lf1=\EOP, lf2=\EOQ, lf3=\EOR, lf4=\EOS, 
	use=vt420, 

vt510|DEC VT510, 
	use=vt420, 
vt510pc|DEC VT510 w/PC keyboard, 
	use=vt420pc, 
vt510pcdos|DEC VT510 w/PC for DOS Merge, 
	use=vt420pcdos, 

# VT520/VT525
#
# The VT520 is a monochrome text terminal capable of managing up to
# four independent sessions in the terminal.  It has multiple ANSI
# emulations (VT520, VT420, VT320, VT220, VT100, VT PCTerm, SCO Console)
# and ASCII emulations (WY160/60, PCTerm, 50/50+, 150/120, TVI 950,
# 925 910+, ADDS A2).  This terminfo data is for the ANSI emulations only.
#
# Terminal Set-Up is entered by pressing [F3], [Caps Lock]/[F3] or
# [Alt]/[Print Screen] depending upon which keyboard and which
# terminal mode is being used.  If Set-Up has been disabled or
# assigned to an unknown key, Set-Up may be entered by pressing
# [F3] as the first key after power up, regardless of keyboard type.
# (vt520: I added <rmam>/<smam> based on the init string, also <sc> -- esr)
vt520|DEC VT520, 
	am, mir, xenl, xon, 
	cols#80, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>, 
	clear=\E[H\E[2J$<50>, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=\E[B, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH$<10>, cuu1=\E[A, dch1=\E[P, 
	dl1=\E[M, ed=\E[J$<50>, el=\E[K$<3>, home=\E[H, ht=^I, 
	if=/usr/share/tabset/vt300, il1=\E[L, ind=\ED, 
	is2=\E[1;24r\E[24;1H, is3=\E[?67h\E[64;1"p, kbs=^H, 
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kdch1=\E[3~, kf0=\E[29~, kf1=\EOP, kf10=\E[29~, kf2=\EOQ, 
	kf3=\EOR, kf4=\EOS, kf5=\E[17~, kf6=\E[18~, kf7=\E[19~, 
	kf8=\E[20~, kf9=\E[21~, kfnd=\E[1~, kich1=\E[2~, knp=\E[6~, 
	kpp=\E[5~, kslt=\E[4~, 
	pfx=\EP1;1|%?%{16}%p1%>%t%{0}%e%{21}%p1%>%t%{1}%e%{25}%p1%>%t%{2}%e%{27}%p1%>%t%{3}%e%{30}%p1%>%t%{4}%e%{5}%;%p1%+%d/%p2%s\E\\, 
	rc=\E8, rev=\E[7m$<2>, rf=/usr/share/tabset/vt300, 
	ri=\EM, rmacs=\E(B$<4>, rmam=\E[?7l, rmir=\E[4l, 
	rmsc=\E[?0;0r\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, 
	rmso=\E[m, rmul=\E[m, rs3=\E[?67h\E[64;1"p, sc=\E7, 
	sgr=\E[0%?%p6%t;1%;%?%p2%t;4%;%?%p4%t;5%;%?%p1%p3%|%t;7%;m%?%p9%t\E(0%e\E(B%;, 
	sgr0=\E[m$<2>, smacs=\E(0$<2>, smam=\E[?7h, smir=\E[4h, 
	smso=\E[7m, smul=\E[4m, 

# (vt525: I added <rmam>/<smam> based on the init string;
# removed <rmso>=\E[m, <rmul>=\E[m, added <sc> -- esr)
vt525|DEC VT525, 
	am, mir, xenl, xon, 
	cols#80, lines#24, vt#3, 
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~, 
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>, 
	clear=\E[H\E[2J$<50>, cr=^M, csr=\E[%i%p1%d;%p2%dr, 
	cub1=^H, cud1=\E[B, cuf1=\E[C, 
	cup=\E[%i%p1%d;%p2%dH$<10>, cuu1=\E[A, dch1=\E[P, 
	dl1=\E[M, ed=\E[J$<50>, el=\E[K$<3>, home=\E[H, ht=^I, 
	if=/usr/share/tabset/vt300, il1=\E[L, ind=\ED, 
	is2=\E[1;24r\E[24;1H, is3=\E[?67h\E[64;1"p, kbs=^H, 
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, 
	kdch1=\E[3~, kf0=\E[29~, kf1=\EOP, kf10=\E[29~, kf2=\EOQ, 
	kf3=\EOR, kf4=\EOS, kf5=\E[17~, kf6=\E[18~, kf7=\E[19~, 
	kf8=\E[20~, kf9=\E[21~, kfnd=\E[1~, kich1=\E[2~, knp=\E[6~, 
	kpp=\E[5~, kslt=\E[4~, 
	pfx=\EP1;1|%?%{16}%p1%>%t%{0}%e%{21}%p1%>%t%{1}%e%{25}%p1%>%t%{2}%e%{27}%p1%>%t%{3}%e%{30}%p1%>%t%{4}%e%{5}%;%p1%+%d/%p2%s\E\\, 
	rc=\E8, rev=\E[7m$<2>, rf=/usr/share/tabset/vt300, 
	ri=\EM, rmacs=\E(B$<4>, rmam=\E[?7l, rmir=\E[4l, 
	rmsc=\E[?0;0r\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, 
	rmso=\E[m, rmul=\E[m, rs3=\E[?67h\E[64;1"p, sc=\E7, 
	sgr=\E[0%?%p6%t;1%;%?%p2%t;4%;%?%p4%t;5%;%?%p1%p3%|%t;7%;m%?%p9%t\E(0%e\E(B%;, 
	sgr0=\E[m$<2>, smacs=\E(0$<2>, smam=\E[?7h, smir=\E[4h, 
	smso=\E[7m, smul=\E[4m, 
