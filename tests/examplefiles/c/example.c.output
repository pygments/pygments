'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'<string.h>'  Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'<stdlib.h>'  Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'<stdio.h>'   Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"codegen.h"' Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"symboltable.h"' Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"stringbuffer.h"' Comment.PreprocFile
'\n'          Comment.Preproc

'\n'          Text

'extern'      Keyword
' '           Text
'void'        Keyword.Type
' '           Text
'yyerror'     Name
'('           Punctuation
'char'        Keyword.Type
'*'           Operator
' '           Text
'msg'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'stringBuffer' Name
'*'           Operator
' '           Text
'staticVariableBuffer' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'stringBuffer' Name
'*'           Operator
' '           Text
'classInitBuffer' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'stringBuffer' Name
'*'           Operator
' '           Text
'currentMethodBuffer' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'stringBuffer' Name
'*'           Operator
' '           Text
'finishedMethodsBuffer' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'stringBuffer' Name
'*'           Operator
' '           Text
'mainBuffer'  Name
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'currentMethodBufferIndex' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'currentMethodStackSize' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'currentMethodStackSizeMax' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'currentMethodNumberOfLocals' Name
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'classInitBufferIndex' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'classInitStackSize' Name
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'classInitStackSizeMax' Name
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'labelCounter' Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
' '           Text
'global'      Name
'       '     Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\n'          Text

'char'        Keyword.Type
' '           Text
'tempString'  Name
'['           Punctuation
'MAX_LENGTH_OF_COMMAND' Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'extern'      Keyword
' '           Text
'char'        Keyword.Type
'*'           Operator
' '           Text
'className'   Name
';'           Punctuation
'        '    Text
'/* from minako-syntax.y */' Comment.Multiline
'\n'          Text

'\n'          Text

'/* forward declarations */' Comment.Multiline
'\n'          Text

'static'      Keyword
' '           Text
'void'        Keyword.Type
' '           Text
'increaseStackby' Name
'('           Punctuation
'int'         Keyword.Type
' '           Text
'stackdiff'   Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'char'        Keyword.Type
' '           Text
'convertType' Name.Function
'('           Punctuation
'int'         Keyword.Type
' '           Text
'type'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenInit' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'staticVariableBuffer' Name
'  '          Text
'='           Operator
' '           Text
'newStringBuffer' Name
'('           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'classInitBuffer' Name
'       '     Text
'='           Operator
' '           Text
'newStringBuffer' Name
'('           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'currentMethodBuffer' Name
'   '         Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'finishedMethodsBuffer' Name
' '           Text
'='           Operator
' '           Text
'newStringBuffer' Name
'('           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'mainBuffer'  Name
'            ' Text
'='           Operator
' '           Text
'newStringBuffer' Name
'('           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'; ------- Header --------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
' \n\t'       Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'.class  public synchronized %s' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'className'   Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'.super  java/lang/Object' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'; -----------------------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\n\t'      Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; ------- Constructor ---------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'.method public <init>()V' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'.limit stack 1' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'.limit locals 1' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'aload_0'     Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'invokenonvirtual java/lang/Object/<init>()V' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'return'      Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'.end method' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; -----------------------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'staticVariableBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; ------- Class Variables -----------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; ------- Class Initializer ---------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'.method static <clinit>()V' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'classInitBufferIndex' Name
' '           Text
'='           Operator
' '           Text
'classInitBuffer' Name
'-'           Operator
'>'           Operator
'numberOfNextElement' Name
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'.limit locals 0' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenAppendCommand' Name.Function
'('           Punctuation
'char'        Keyword.Type
'*'           Operator
' '           Text
'cmd'         Name
','           Punctuation
' '           Text
'int'         Keyword.Type
' '           Text
'stackdiff'   Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'char'        Keyword.Type
' '           Text
'tempString'  Name
'['           Punctuation
'MAX_LENGTH_OF_COMMAND' Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'%s'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'cmd'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'global'      Name
')'           Punctuation
' '           Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'increaseStackby' Name
'('           Punctuation
'stackdiff'   Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenInsertCommand' Name.Function
'('           Punctuation
'int'         Keyword.Type
' '           Text
'address'     Name
','           Punctuation
' '           Text
'char'        Keyword.Type
'*'           Operator
' '           Text
'cmd'         Name
','           Punctuation
' '           Text
'int'         Keyword.Type
' '           Text
'stackdiff'   Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'char'        Keyword.Type
' '           Text
'tempString'  Name
'['           Punctuation
'MAX_LENGTH_OF_COMMAND' Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'%s'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'cmd'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'global'      Name
')'           Punctuation
' '           Text
'stringBufferInsert' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'address'     Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'stringBufferInsert' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'address'     Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'increaseStackby' Name
'('           Punctuation
'stackdiff'   Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenAppendLabel' Name.Function
'('           Punctuation
'int'         Keyword.Type
' '           Text
'label'       Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'char'        Keyword.Type
' '           Text
'tempString'  Name
'['           Punctuation
'MAX_LENGTH_OF_COMMAND' Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'Label%d:'    Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'label'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'global'      Name
')'           Punctuation
' '           Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenAddVariable' Name.Function
'('           Punctuation
'char'        Keyword.Type
'*'           Operator
' '           Text
'name'        Name
','           Punctuation
' '           Text
'int'         Keyword.Type
' '           Text
'type'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'/*fprintf(stderr, "add variable %s(%d) global=%d ", name, convertType(type), global);*/' Comment.Multiline
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'global'      Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'if'          Keyword
' '           Text
'('           Punctuation
'type'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'TYPE_INT'    Name
')'           Punctuation
' '           Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'.field static %s %c' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'name'        Name
','           Punctuation
' '           Text
"'"           Literal.String.Char
'I'           Literal.String.Char
"'"           Literal.String.Char
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'else'        Keyword
' '           Text
'if'          Keyword
' '           Text
'('           Punctuation
'type'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'TYPE_FLOAT'  Name
')'           Punctuation
' '           Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'.field static %s %c' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'name'        Name
','           Punctuation
' '           Text
"'"           Literal.String.Char
'F'           Literal.String.Char
"'"           Literal.String.Char
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'else'        Keyword
' '           Text
'if'          Keyword
' '           Text
'('           Punctuation
'type'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'TYPE_BOOLEAN' Name
')'           Punctuation
' '           Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'.field static %s %c' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'name'        Name
','           Punctuation
' '           Text
"'"           Literal.String.Char
'Z'           Literal.String.Char
"'"           Literal.String.Char
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'else'        Keyword
' '           Text
'yyerror'     Name
'('           Punctuation
'"'           Literal.String
'compiler-intern error in codegenAddGlobalVariable().' Literal.String
'\\n'         Literal.String.Escape
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'stringBufferAppend' Name
'('           Punctuation
'staticVariableBuffer' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'currentMethodNumberOfLocals' Name
'+'           Operator
'+'           Operator
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'int'         Keyword.Type
' '           Text
'codegenGetNextLabel' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'labelCounter' Name
'+'           Operator
'+'           Operator
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'int'         Keyword.Type
' '           Text
'codegenGetCurrentAddress' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'global'      Name
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'classInitBuffer' Name
'-'           Operator
'>'           Operator
'numberOfNextElement' Name
';'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'return'      Keyword
' '           Text
'currentMethodBuffer' Name
'-'           Operator
'>'           Operator
'numberOfNextElement' Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenEnterFunction' Name.Function
'('           Punctuation
'symtabEntry' Name
'*'           Operator
' '           Text
'entry'       Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'currentMethodBuffer' Name
' '           Text
'='           Operator
' '           Text
'newStringBuffer' Name
'('           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'currentMethodStackSize' Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'currentMethodStackSizeMax' Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'labelCounter' Name
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'global'      Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t\n\t'      Text
'if'          Keyword
' '           Text
'('           Punctuation
'strcmp'      Name
'('           Punctuation
'entry'       Name
'-'           Operator
'>'           Operator
'name'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'main'        Literal.String
'"'           Literal.String
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'if'          Keyword
' '           Text
'('           Punctuation
'entry'       Name
'-'           Operator
'>'           Operator
'idtype'      Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'TYPE_VOID'   Name
')'           Punctuation
' '           Text
'yyerror'     Name
'('           Punctuation
'"'           Literal.String
'main has to be void.' Literal.String
'\\n'         Literal.String.Escape
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'currentMethodNumberOfLocals' Name
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t\t'        Text
'symtabInsert' Name
'('           Punctuation
'strdup'      Name
'('           Punctuation
'"'           Literal.String
'#main-param#' Literal.String
'"'           Literal.String
')'           Punctuation
','           Punctuation
' '           Text
'TYPE_VOID'   Name
','           Punctuation
' '           Text
'CLASS_FUNC'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; ------- Methode ---- void main() --------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'.method public static main([Ljava/lang/String;)V' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'int'         Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'currentMethodNumberOfLocals' Name
' '           Text
'='           Operator
' '           Text
'entry'       Name
'-'           Operator
'>'           Operator
'paramIndex'  Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; ------- Methode -------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'.method public static %s(' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'entry'       Name
'-'           Operator
'>'           Operator
'name'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'entry'       Name
'-'           Operator
'>'           Operator
'paramIndex'  Name
'-1'          Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'>'           Operator
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t\t'      Text
'int'         Keyword.Type
' '           Text
'type'        Name
' '           Text
'='           Operator
' '           Text
'entry'       Name
'-'           Operator
'>'           Operator
'params'      Name
'['           Punctuation
'i'           Name
']'           Punctuation
'-'           Operator
'>'           Operator
'idtype'      Name
';'           Punctuation
'\n'          Text

'\t\t\t'      Text
'tempString'  Name
'['           Punctuation
'strlen'      Name
'('           Punctuation
'tempString'  Name
')'           Punctuation
'+'           Operator
'1'           Literal.Number.Integer
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t\t\t'      Text
'tempString'  Name
'['           Punctuation
'strlen'      Name
'('           Punctuation
'tempString'  Name
')'           Punctuation
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'convertType' Name
'('           Punctuation
'type'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'}'           Punctuation
'\n'          Text

'\t\t'        Text
'tempString'  Name
'['           Punctuation
'strlen'      Name
'('           Punctuation
'tempString'  Name
')'           Punctuation
'+'           Operator
'2'           Literal.Number.Integer
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t\t'        Text
'tempString'  Name
'['           Punctuation
'strlen'      Name
'('           Punctuation
'tempString'  Name
')'           Punctuation
'+'           Operator
'1'           Literal.Number.Integer
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'convertType' Name
'('           Punctuation
'entry'       Name
'-'           Operator
'>'           Operator
'idtype'      Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\t'        Text
'tempString'  Name
'['           Punctuation
'strlen'      Name
'('           Punctuation
'tempString'  Name
')'           Punctuation
']'           Punctuation
'   '         Text
'='           Operator
' '           Text
"'"           Literal.String.Char
')'           Literal.String.Char
"'"           Literal.String.Char
';'           Punctuation
'\n'          Text

'\t\t'        Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'currentMethodBufferIndex' Name
' '           Text
'='           Operator
' '           Text
'currentMethodBuffer' Name
'-'           Operator
'>'           Operator
'numberOfNextElement' Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenLeaveFunction' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'global'      Name
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'.limit locals %d' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'currentMethodNumberOfLocals' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferInsert' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'currentMethodBufferIndex' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'.limit stack %d' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'currentMethodStackSizeMax' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferInsert' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'currentMethodBufferIndex' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'return'      Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'.end method' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; -----------------------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'currentMethodBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'stringBufferConcatenate' Name
'('           Punctuation
'finishedMethodsBuffer' Name
','           Punctuation
' '           Text
'currentMethodBuffer' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'\n'          Text

'\n'          Text

'void'        Keyword.Type
' '           Text
'codegenFinishCode' Name.Function
'('           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'staticVariableBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; -----------------------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'staticVariableBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'sprintf'     Name
'('           Punctuation
'tempString'  Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'.limit stack %d' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'classInitStackSizeMax' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferInsert' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'classInitBufferIndex' Name
','           Punctuation
' '           Text
'tempString'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'\\t'         Literal.String.Escape
'return'      Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'.end method' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferAppend' Name
'('           Punctuation
'classInitBuffer' Name
','           Punctuation
' '           Text
'"'           Literal.String
'; -----------------------------------------------------------' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t\n\t'      Text
'stringBufferConcatenate' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'staticVariableBuffer' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferConcatenate' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'finishedMethodsBuffer' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'stringBufferConcatenate' Name
'('           Punctuation
'mainBuffer'  Name
','           Punctuation
' '           Text
'classInitBuffer' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'stringBufferPrint' Name
'('           Punctuation
'mainBuffer'  Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'void'        Keyword.Type
' '           Text
'increaseStackby' Name
'('           Punctuation
'int'         Keyword.Type
' '           Text
'stackdiff'   Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'global'      Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'classInitStackSize' Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'stackdiff'   Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'if'          Keyword
' '           Text
'('           Punctuation
'classInitStackSize' Name
' '           Text
'>'           Operator
' '           Text
'classInitStackSizeMax' Name
')'           Punctuation
' '           Text
'classInitStackSizeMax' Name
' '           Text
'='           Operator
' '           Text
'classInitStackSize' Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'currentMethodStackSize' Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'stackdiff'   Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'if'          Keyword
' '           Text
'('           Punctuation
'currentMethodStackSize' Name
' '           Text
'>'           Operator
' '           Text
'currentMethodStackSizeMax' Name
')'           Punctuation
' '           Text
'currentMethodStackSizeMax' Name
' '           Text
'='           Operator
' '           Text
'currentMethodStackSize' Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'char'        Keyword.Type
' '           Text
'convertType' Name
'('           Punctuation
'int'         Keyword.Type
' '           Text
'type'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'switch'      Keyword
'('           Punctuation
'type'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'case'        Keyword
' '           Text
'TYPE_VOID'   Name.Label
':'           Punctuation
'    '        Text
'return'      Keyword
' '           Text
"'"           Literal.String.Char
'V'           Literal.String.Char
"'"           Literal.String.Char
';'           Punctuation
'\n'          Text

'\t\t'        Text
'case'        Keyword
' '           Text
'TYPE_INT'    Name.Label
':'           Punctuation
'     '       Text
'return'      Keyword
' '           Text
"'"           Literal.String.Char
'I'           Literal.String.Char
"'"           Literal.String.Char
';'           Punctuation
'\n'          Text

'\t\t'        Text
'case'        Keyword
' '           Text
'TYPE_FLOAT'  Name.Label
':'           Punctuation
'   '         Text
'return'      Keyword
' '           Text
"'"           Literal.String.Char
'F'           Literal.String.Char
"'"           Literal.String.Char
';'           Punctuation
'\n'          Text

'\t\t'        Text
'case'        Keyword
' '           Text
'TYPE_BOOLEAN' Name.Label
':'           Punctuation
' '           Text
'return'      Keyword
' '           Text
"'"           Literal.String.Char
'Z'           Literal.String.Char
"'"           Literal.String.Char
';'           Punctuation
'\n'          Text

'\t\t'        Text
'default'     Keyword
' '           Text
':'           Operator
' '           Text
'yyerror'     Name
'('           Punctuation
'"'           Literal.String
'compiler-intern error in convertType().' Literal.String
'\\n'         Literal.String.Escape
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'/* to avoid compiler-warning */' Comment.Multiline
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'\n'          Text

'//#include <stdlib.h>\n' Comment.Single

'//#include <stdio.h>\n' Comment.Single

'\n'          Text

'int'         Keyword.Type
' '           Text
'main'        Name
'('           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'int'         Keyword.Type
' '           Text
'a'           Name
' '           Text
'='           Operator
' '           Text
'12'          Literal.Number.Integer
','           Punctuation
' '           Text
'b'           Name
' '           Text
'='           Operator
' '           Text
'44'          Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'while'       Keyword
' '           Text
'('           Punctuation
'a'           Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'b'           Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'if'          Keyword
' '           Text
'('           Punctuation
'a'           Name
' '           Text
'>'           Operator
' '           Text
'b'           Name
')'           Punctuation
'\n'          Text

'\t\t\t'      Text
'a'           Name
' '           Text
'-'           Operator
'='           Operator
' '           Text
'b'           Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'else'        Keyword
'\n'          Text

'\t\t\t'      Text
'b'           Name
' '           Text
'-'           Operator
'='           Operator
' '           Text
'a'           Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'printf'      Name
'('           Punctuation
'"'           Literal.String
'%d'          Literal.String
'\\n'         Literal.String.Escape
'%d'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'a'           Name
','           Punctuation
' '           Text
'0X0'         Literal.Number.Hex
')'           Punctuation
';'           Punctuation
'\\\n'        Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'\n'          Text

'/**********************************************************************\n\n  array.c -\n\n  $Author: murphy $\n  $Date: 2005-11-05 04:33:55 +0100 (Sa, 05 Nov 2005) $\n  created at: Fri Aug  6 09:46:12 JST 1993\n\n  Copyright (C) 1993-2003 Yukihiro Matsumoto\n  Copyright (C) 2000  Network Applied Communication Laboratory, Inc.\n  Copyright (C) 2000  Information-technology Promotion Agency, Japan\n\n**********************************************************************/' Comment.Multiline
'\n'          Text

'\n'          Text

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"ruby.h"'    Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"util.h"'    Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"st.h"'      Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'"node.h"'    Comment.PreprocFile
'\n'          Comment.Preproc

'\n'          Text

'VALUE'       Name
' '           Text
'rb_cArray'   Name
','           Punctuation
' '           Text
'rb_cValues'  Name
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'ID'          Name
' '           Text
'id_cmp'      Name
';'           Punctuation
'\n'          Text

'\n'          Text

'#'           Comment.Preproc
'define ARY_DEFAULT_SIZE 16' Comment.Preproc
'\n'          Comment.Preproc

'\n'          Text

'\n'          Text

'void'        Keyword.Type
'\n'          Text

'rb_mem_clear' Name.Function
'('           Punctuation
'mem'         Name
','           Punctuation
' '           Text
'size'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'register'    Keyword
' '           Text
'VALUE'       Name
' '           Text
'*'           Operator
'mem'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'register'    Keyword
' '           Text
'long'        Keyword.Type
' '           Text
'size'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'while'       Keyword
' '           Text
'('           Punctuation
'size'        Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'*'           Operator
'mem'         Name
'+'           Operator
'+'           Operator
' '           Text
'='           Operator
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'inline'      Keyword.Reserved
' '           Text
'void'        Keyword.Type
'\n'          Text

'memfill'     Name
'('           Punctuation
'mem'         Name
','           Punctuation
' '           Text
'size'        Name
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'register'    Keyword
' '           Text
'VALUE'       Name
' '           Text
'*'           Operator
'mem'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'register'    Keyword
' '           Text
'long'        Keyword.Type
' '           Text
'size'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'register'    Keyword
' '           Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'while'       Keyword
' '           Text
'('           Punctuation
'size'        Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'*'           Operator
'mem'         Name
'+'           Operator
'+'           Operator
' '           Text
'='           Operator
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'#'           Comment.Preproc
'define ARY_TMPLOCK  FL_USER1' Comment.Preproc
'\n'          Comment.Preproc

'\n'          Text

'static'      Keyword
' '           Text
'inline'      Keyword.Reserved
' '           Text
'void'        Keyword.Type
'\n'          Text

'rb_ary_modify_check' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'OBJ_FROZEN'  Name
'('           Punctuation
'ary'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'rb_error_frozen' Name
'('           Punctuation
'"'           Literal.String
'array'       Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'FL_TEST'     Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ARY_TMPLOCK' Name
')'           Punctuation
')'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eRuntimeError' Name
','           Punctuation
' '           Text
'"'           Literal.String
"can't modify array during iteration" Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'!'           Operator
'OBJ_TAINTED' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'rb_safe_level' Name
'('           Punctuation
')'           Punctuation
' '           Text
'>'           Operator
'='           Operator
' '           Text
'4'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eSecurityError' Name
','           Punctuation
' '           Text
'"'           Literal.String
"Insecure: can't modify array" Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'void'        Keyword.Type
'\n'          Text

'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify_check' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'FL_TEST'     Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'ALLOC_N'     Name
'('           Punctuation
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'FL_UNSET'    Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'MEMCPY'      Name
'('           Punctuation
'ptr'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'ptr'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_freeze' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_obj_freeze' Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.frozen?  -> true or false\n *\n *  Return <code>true</code> if this array is frozen (or temporarily frozen\n *  while being sorted).\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_frozen_p' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'OBJ_FROZEN'  Name
'('           Punctuation
'ary'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qtrue'       Name
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'FL_TEST'     Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ARY_TMPLOCK' Name
')'           Punctuation
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qtrue'       Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'Qfalse'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
' '           Text
'ary_alloc'   Name
'('           Punctuation
'VALUE'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'ary_alloc'   Name
'('           Punctuation
'klass'       Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'klass'       Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'NEWOBJ'      Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'struct'      Keyword
' '           Text
'RArray'      Name.Class
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'OBJSETUP'    Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'klass'       Name
','           Punctuation
' '           Text
'T_ARRAY'     Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'ary'         Name
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'    '        Text
'ary'         Name
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'    '        Text
'ary'         Name
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'('           Punctuation
'VALUE'       Name
')'           Punctuation
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'ary_new'     Name
'('           Punctuation
'klass'       Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'klass'       Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'negative array size (or size too big)' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'len'         Name
' '           Text
'*'           Operator
' '           Text
'sizeof'      Keyword
'('           Punctuation
'VALUE'       Name
')'           Punctuation
' '           Text
'<'           Operator
'='           Operator
' '           Text
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'array size too big' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'len'         Name
'+'           Operator
'+'           Operator
';'           Punctuation
'\n'          Text

'    \n    '  Text
'ary'         Name
' '           Text
'='           Operator
' '           Text
'ary_alloc'   Name
'('           Punctuation
'klass'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'ALLOC_N'     Name
'('           Punctuation
'VALUE'       Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_new2' Name
'('           Punctuation
'len'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary_new'     Name.Function
'('           Punctuation
'rb_cArray'   Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_new'  Name
'('           Punctuation
')'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_new2' Name.Function
'('           Punctuation
'ARY_DEFAULT_SIZE' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'#'           Comment.Preproc
'ifdef HAVE_STDARG_PROTOTYPES' Comment.Preproc
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'<stdarg.h>'  Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'define va_init_list(a,b) va_start(a,b)' Comment.Preproc
'\n'          Comment.Preproc

'#'           Comment.Preproc
'else'        Comment.Preproc
'\n'          Comment.Preproc

'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text
'<varargs.h>' Comment.PreprocFile
'\n'          Comment.Preproc

'#'           Comment.Preproc
'define va_init_list(a,b) va_start(a)' Comment.Preproc
'\n'          Comment.Preproc

'#'           Comment.Preproc
'endif'       Comment.Preproc
'\n'          Comment.Preproc

'\n'          Text

'VALUE'       Name
'\n'          Text

'#'           Comment.Preproc
'ifdef HAVE_STDARG_PROTOTYPES' Comment.Preproc
'\n'          Comment.Preproc

'rb_ary_new3' Name
'('           Punctuation
'long'        Keyword.Type
' '           Text
'n'           Name
','           Punctuation
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
')'           Punctuation
'\n'          Text

'#'           Comment.Preproc
'else'        Comment.Preproc
'\n'          Comment.Preproc

'rb_ary_new3' Name
'('           Punctuation
'n'           Name
','           Punctuation
' '           Text
'va_alist'    Name
')'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'va_dcl'      Name
'\n'          Text

'#'           Comment.Preproc
'endif'       Comment.Preproc
'\n'          Comment.Preproc

'{'           Punctuation
'\n'          Text

'    '        Text
'va_list'     Keyword.Type
' '           Text
'ar'          Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'ary'         Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'va_init_list' Name
'('           Punctuation
'ar'          Name
','           Punctuation
' '           Text
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'n'           Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'va_arg'      Name
'('           Punctuation
'ar'          Name
','           Punctuation
' '           Text
'VALUE'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'va_end'      Name
'('           Punctuation
'ar'          Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_new4' Name
'('           Punctuation
'n'           Name
','           Punctuation
' '           Text
'elts'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'const'       Keyword
' '           Text
'VALUE'       Name
' '           Text
'*'           Operator
'elts'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'ary'         Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'n'           Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'elts'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'MEMCPY'      Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'elts'        Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'#'           Comment.Preproc
'ifdef HAVE_STDARG_PROTOTYPES' Comment.Preproc
'\n'          Comment.Preproc

'rb_values_new' Name
'('           Punctuation
'long'        Keyword.Type
' '           Text
'n'           Name
','           Punctuation
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
')'           Punctuation
'\n'          Text

'#'           Comment.Preproc
'else'        Comment.Preproc
'\n'          Comment.Preproc

'rb_values_new' Name
'('           Punctuation
'n'           Name
','           Punctuation
' '           Text
'va_alist'    Name
')'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'va_dcl'      Name
'\n'          Text

'#'           Comment.Preproc
'endif'       Comment.Preproc
'\n'          Comment.Preproc

'{'           Punctuation
'\n'          Text

'    '        Text
'va_list'     Keyword.Type
' '           Text
'ar'          Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'val'         Name
' '           Text
'='           Operator
' '           Text
'ary_new'     Name
'('           Punctuation
'rb_cValues'  Name
','           Punctuation
' '           Text
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'va_init_list' Name
'('           Punctuation
'ar'          Name
','           Punctuation
' '           Text
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'n'           Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'va_arg'      Name
'('           Punctuation
'ar'          Name
','           Punctuation
' '           Text
'VALUE'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'va_end'      Name
'('           Punctuation
'ar'          Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_values_new2' Name
'('           Punctuation
'n'           Name
','           Punctuation
' '           Text
'elts'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'const'       Keyword
' '           Text
'VALUE'       Name
' '           Text
'*'           Operator
'elts'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'val'         Name
' '           Text
'='           Operator
' '           Text
'ary_new'     Name
'('           Punctuation
'rb_cValues'  Name
','           Punctuation
' '           Text
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'n'           Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'elts'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\t'          Text
'MEMCPY'      Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'elts'        Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'n'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'ary_make_shared' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'!'           Operator
'FL_TEST'     Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'NEWOBJ'      Name
'('           Punctuation
'shared'      Name
','           Punctuation
' '           Text
'struct'      Keyword
' '           Text
'RArray'      Name.Class
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'OBJSETUP'    Name
'('           Punctuation
'shared'      Name
','           Punctuation
' '           Text
'rb_cArray'   Name
','           Punctuation
' '           Text
'T_ARRAY'     Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'shared'      Name
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'shared'      Name
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'shared'      Name
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
';'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'shared'      Name
' '           Text
'='           Operator
' '           Text
'('           Punctuation
'VALUE'       Name
')'           Punctuation
'shared'      Name
';'           Punctuation
'\n'          Text

'\t'          Text
'FL_SET'      Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'OBJ_FREEZE'  Name
'('           Punctuation
'shared'      Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'('           Punctuation
'VALUE'       Name
')'           Punctuation
'shared'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'RARRAY'      Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'shared'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'ary_shared_array' Name
'('           Punctuation
'klass'       Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'klass'       Name
','           Punctuation
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
' '           Text
'='           Operator
' '           Text
'ary_alloc'   Name
'('           Punctuation
'klass'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'ary_make_shared' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'val'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'shared'      Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'shared'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'FL_SET'      Name
'('           Punctuation
'val'         Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_values_from_ary' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary_shared_array' Name.Function
'('           Punctuation
'rb_cValues'  Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_from_values' Name
'('           Punctuation
'val'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary_shared_array' Name.Function
'('           Punctuation
'rb_cArray'   Name
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_assoc_new' Name
'('           Punctuation
'car'         Name
','           Punctuation
' '           Text
'cdr'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'car'         Name
','           Punctuation
' '           Text
'cdr'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_values_new' Name.Function
'('           Punctuation
'2'           Literal.Number.Integer
','           Punctuation
' '           Text
'car'         Name
','           Punctuation
' '           Text
'cdr'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'to_ary'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_convert_type' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'T_ARRAY'     Name
','           Punctuation
' '           Text
'"'           Literal.String
'Array'       Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'"'           Literal.String
'to_ary'      Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'to_a'        Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_convert_type' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'T_ARRAY'     Name
','           Punctuation
' '           Text
'"'           Literal.String
'Array'       Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'"'           Literal.String
'to_a'        Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_check_array_type' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_check_convert_type' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'T_ARRAY'     Name
','           Punctuation
' '           Text
'"'           Literal.String
'Array'       Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'"'           Literal.String
'to_ary'      Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
' '           Text
'rb_ary_replace' Name
' '           Text
'_'           Name
'('           Punctuation
'('           Punctuation
'VALUE'       Name
','           Punctuation
' '           Text
'VALUE'       Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     Array.new(size=0, obj=nil)\n *     Array.new(array)\n *     Array.new(size) {|index| block }\n *\n *  Returns a new array. In the first form, the new array is\n *  empty. In the second it is created with _size_ copies of _obj_\n *  (that is, _size_ references to the same\n *  _obj_). The third form creates a copy of the array\n *  passed as a parameter (the array is generated by calling\n *  to_ary  on the parameter). In the last form, an array\n *  of the given size is created. Each element in this array is\n *  calculated by passing the element\'s index to the given block and\n *  storing the return value.\n *\n *     Array.new\n *     Array.new(2)\n *     Array.new(5, "A")\n * \n *     # only one copy of the object is created\n *     a = Array.new(2, Hash.new)\n *     a[0][\'cat\'] = \'feline\'\n *     a\n *     a[1][\'cat\'] = \'Felix\'\n *     a\n * \n *     # here multiple copies are created\n *     a = Array.new(2) { Hash.new }\n *     a[0][\'cat\'] = \'feline\'\n *     a\n * \n *     squares = Array.new(5) {|i| i*i}\n *     squares\n * \n *     copy = Array.new(squares)\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_initialize' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'size'        Name
','           Punctuation
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'02'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'&'           Operator
'size'        Name
','           Punctuation
' '           Text
'&'           Operator
'val'         Name
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_block_given_p' Name
'('           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_warning'  Name
'('           Punctuation
'"'           Literal.String
'given block not used' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'!'           Operator
'FIXNUM_P'    Name
'('           Punctuation
'size'        Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'val'         Name
' '           Text
'='           Operator
' '           Text
'rb_check_array_type' Name
'('           Punctuation
'size'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'!'           Operator
'NIL_P'       Name
'('           Punctuation
'val'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_ary_replace' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'size'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'negative array size' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'len'         Name
' '           Text
'*'           Operator
' '           Text
'('           Punctuation
'long'        Keyword.Type
')'           Punctuation
'sizeof'      Keyword
'('           Punctuation
'VALUE'       Name
')'           Punctuation
' '           Text
'<'           Operator
'='           Operator
' '           Text
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'array size too big' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'REALLOC_N'   Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_block_given_p' Name
'('           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_warn'     Name
'('           Punctuation
'"'           Literal.String
'block supersedes default value argument' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_ary_store' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'i'           Name
','           Punctuation
' '           Text
'rb_yield'    Name
'('           Punctuation
'LONG2NUM'    Name
'('           Punctuation
'i'           Name
')'           Punctuation
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'i'           Name
' '           Text
'+'           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'memfill'     Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'len'         Name
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'\n'          Text

"/* \n* Returns a new array populated with the given objects. \n*\n*   Array.[]( 1, 'a', /^A/ )\n*   Array[ 1, 'a', /^A/ ]\n*   [ 1, 'a', /^A/ ]\n*/" Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_s_create' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'klass'       Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'klass'       Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
' '           Text
'='           Operator
' '           Text
'ary_alloc'   Name
'('           Punctuation
'klass'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'ALLOC_N'     Name
'('           Punctuation
'VALUE'       Name
','           Punctuation
' '           Text
'argc'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'MEMCPY'      Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'argc'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'void'        Keyword.Type
'\n'          Text

'rb_ary_store' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'idx'         Name
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'idx'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'idx'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_raise'    Name
'('           Punctuation
'rb_eIndexError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'index %ld out of array' Literal.String
'"'           Literal.String
','           Punctuation
'\n'          Text

'\t\t    '    Text
'idx'         Name
' '           Text
'-'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'>'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'long'        Keyword.Type
' '           Text
'new_capa'    Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'/'           Operator
' '           Text
'2'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'new_capa'    Name
' '           Text
'<'           Operator
' '           Text
'ARY_DEFAULT_SIZE' Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'new_capa'    Name
' '           Text
'='           Operator
' '           Text
'ARY_DEFAULT_SIZE' Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'new_capa'    Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'idx'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'new_capa'    Name
' '           Text
'*'           Operator
' '           Text
'('           Punctuation
'long'        Keyword.Type
')'           Punctuation
'sizeof'      Keyword
'('           Punctuation
'VALUE'       Name
')'           Punctuation
' '           Text
'<'           Operator
'='           Operator
' '           Text
'new_capa'    Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'index too big' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'REALLOC_N'   Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'new_capa'    Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'new_capa'    Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_mem_clear' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
'\n'          Text

'\t\t     '   Text
'idx'         Name
'-'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'+'           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'>'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'idx'         Name
' '           Text
'+'           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'idx'         Name
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'ary_shared_first' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'nv'          Name
','           Punctuation
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'1'           Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'&'           Operator
'nv'          Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'n'           Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'nv'          Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'n'           Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'n'           Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'if'          Keyword
' '           Text
'('           Punctuation
'n'           Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'negative array size' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'ary_shared_array' Name
'('           Punctuation
'rb_cArray'   Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'result'      Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'ary_shared_last' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'ary_shared_first' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'result'      Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'result'      Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array << obj            -> array\n *  \n *  Append---Pushes the given object on to the end of this array. This\n *  expression returns the array itself, so several appends\n *  may be chained together.\n *\n *     [ 1, 2 ] << "c" << "d" << [ 3, 4 ]\n *             #=>  [ 1, 2, "c", "d", [ 3, 4 ] ]\n *\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_push' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'item'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'item'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_store' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'item'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/* \n *  call-seq:\n *     array.push(obj, ... )   -> array\n *  \n *  Append---Pushes the given object(s) on to the end of this array. This\n *  expression returns the array itself, so several appends\n *  may be chained together.\n *\n *     a = [ "a", "b", "c" ]\n *     a.push("d", "e", "f")  \n *             #=> ["a", "b", "c", "d", "e", "f"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_push_m' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'while'       Keyword
' '           Text
'('           Punctuation
'argc'        Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_ary_push' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'*'           Operator
'argv'        Name
'+'           Operator
'+'           Operator
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_pop'  Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_modify_check' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'!'           Operator
'FL_TEST'     Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
' '           Text
'&'           Operator
'&'           Operator
'\n'          Text

'\t    '      Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'*'           Operator
' '           Text
'2'           Literal.Number.Integer
' '           Text
'<'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'&'           Operator
'&'           Operator
'\n'          Text

'\t    '      Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'>'           Operator
' '           Text
'ARY_DEFAULT_SIZE' Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'*'           Operator
' '           Text
'2'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'REALLOC_N'   Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'-'           Operator
'-'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.pop  -> obj or nil\n *  \n *  Removes the last element from <i>self</i> and returns it, or\n *  <code>nil</code> if the array is empty.\n *     \n *     a = [ "a", "b", "c", "d" ]\n *     a.pop     #=> "d"\n *     a.pop(2)  #=> ["b", "c"]\n *     a         #=> ["a"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_pop_m' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_ary_pop'  Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify_check' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'ary_shared_last' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'result'      Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_shift' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'top'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify_check' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'top'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'ary_make_shared' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'+'           Operator
'+'           Operator
';'           Punctuation
'\t\t'        Text
'/* shift ptr */' Comment.Multiline
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
'-'           Operator
'-'           Operator
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'top'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.shift   ->   obj or nil\n *  \n *  Returns the first element of <i>self</i> and removes it (shifting all\n *  other elements down by one). Returns <code>nil</code> if the array\n *  is empty.\n *     \n *     args = [ "-m", "-q", "filename" ]\n *     args.shift     #=> "-m"\n *     args           #=> ["-q", "filename"]\n *\n *     args = [ "-m", "-q", "filename" ]\n *     args.shift(2)  #=> ["-m", "-q"]\n *     args           #=> ["filename"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_shift_m' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_ary_shift' Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify_check' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'ary_shared_first' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'n'           Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'result'      Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
'='           Operator
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_unshift' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'item'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
','           Punctuation
' '           Text
'item'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'long'        Keyword.Type
' '           Text
'capa_inc'    Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'/'           Operator
' '           Text
'2'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'capa_inc'    Name
' '           Text
'<'           Operator
' '           Text
'ARY_DEFAULT_SIZE' Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'capa_inc'    Name
' '           Text
'='           Operator
' '           Text
'ARY_DEFAULT_SIZE' Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'capa_inc'    Name
';'           Punctuation
'\n'          Text

'\t'          Text
'REALLOC_N'   Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'/* sliding items */' Comment.Multiline
'\n'          Text

'    '        Text
'MEMMOVE'     Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
'+'           Operator
'+'           Operator
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'item'        Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.unshift(obj, ...)  -> array\n *  \n *  Prepends objects to the front of <i>array</i>.\n *  other elements up one.\n *     \n *     a = [ "b", "c", "d" ]\n *     a.unshift("a")   #=> ["a", "b", "c", "d"]\n *     a.unshift(1, 2)  #=> [ 1, 2, "a", "b", "c", "d"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_unshift_m' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'/* make rooms by setting the last item */' Comment.Multiline
'\n'          Text

'    '        Text
'rb_ary_store' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'len'         Name
' '           Text
'+'           Operator
' '           Text
'argc'        Name
' '           Text
'-'           Operator
' '           Text
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'Qnil'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'/* sliding items */' Comment.Multiline
'\n'          Text

'    '        Text
'MEMMOVE'     Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'argc'        Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'MEMCPY'      Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'argc'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    \n    '  Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

"/* faster version - use this if you don't need to treat negative offset */" Comment.Multiline
'\n'          Text

'static'      Keyword
' '           Text
'inline'      Keyword.Reserved
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_elt'  Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'offset'      Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'offset'      Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'offset'      Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'|'           Operator
'|'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'<'           Operator
'='           Operator
' '           Text
'offset'      Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'offset'      Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_entry' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'offset'      Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'offset'      Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'offset'      Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'offset'      Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_elt'  Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'offset'      Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_subseq' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'klass'       Name
','           Punctuation
' '           Text
'ary2'        Name
','           Punctuation
' '           Text
'shared'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'|'           Operator
'|'           Operator
' '           Text
'len'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'len'         Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'beg'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'\t    '      Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'klass'       Name
' '           Text
'='           Operator
' '           Text
'rb_obj_class' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'ary_new'     Name
'('           Punctuation
'klass'       Name
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'shared'      Name
' '           Text
'='           Operator
' '           Text
'ary_make_shared' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'ary2'        Name
' '           Text
'='           Operator
' '           Text
'ary_alloc'   Name
'('           Punctuation
'klass'       Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary2'        Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'beg'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary2'        Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'ary2'        Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'shared'      Name
' '           Text
'='           Operator
' '           Text
'shared'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'FL_SET'      Name
'('           Punctuation
'ary2'        Name
','           Punctuation
' '           Text
'ELTS_SHARED' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary2'        Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/* \n *  call-seq:\n *     array[index]                -> obj      or nil\n *     array[start, length]        -> an_array or nil\n *     array[range]                -> an_array or nil\n *     array.slice(index)          -> obj      or nil\n *     array.slice(start, length)  -> an_array or nil\n *     array.slice(range)          -> an_array or nil\n *\n *  Element Reference---Returns the element at _index_,\n *  or returns a subarray starting at _start_ and\n *  continuing for _length_ elements, or returns a subarray\n *  specified by _range_.\n *  Negative indices count backward from the end of the\n *  array (-1 is the last element). Returns nil if the index\n *  (or starting index) are out of range.\n *\n *     a = [ "a", "b", "c", "d", "e" ]\n *     a[2] +  a[0] + a[1]    #=> "cab"\n *     a[6]                   #=> nil\n *     a[1, 2]                #=> [ "b", "c" ]\n *     a[1..3]                #=> [ "b", "c", "d" ]\n *     a[4..7]                #=> [ "e" ]\n *     a[6..10]               #=> nil\n *     a[-3, 3]               #=> [ "c", "d", "e" ]\n *     # special cases\n *     a[5]                   #=> nil\n *     a[5, 1]                #=> []\n *     a[5..10]               #=> []\n *\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_aref' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'arg'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'beg'         Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'beg'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_ary_subseq' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'11'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'arg'         Name
' '           Text
'='           Operator
' '           Text
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'/* special case - speeding up */' Comment.Multiline
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'FIXNUM_P'    Name
'('           Punctuation
'arg'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_ary_entry' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'FIX2LONG'    Name
'('           Punctuation
'arg'         Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'/* check if idx is Range */' Comment.Multiline
'\n'          Text

'    '        Text
'switch'      Keyword
' '           Text
'('           Punctuation
'rb_range_beg_len' Name
'('           Punctuation
'arg'         Name
','           Punctuation
' '           Text
'&'           Operator
'beg'         Name
','           Punctuation
' '           Text
'&'           Operator
'len'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'      '      Text
'case'        Keyword
' '           Text
'Qfalse'      Name.Label
':'           Punctuation
'\n'          Text

'\t'          Text
'break'       Keyword
';'           Punctuation
'\n'          Text

'      '      Text
'case'        Keyword
' '           Text
'Qnil'        Name.Label
':'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'      '      Text
'default'     Keyword
':'           Operator
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_ary_subseq' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_entry' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'arg'         Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/* \n *  call-seq:\n *     array.at(index)   ->   obj  or nil\n *\n *  Returns the element at _index_. A\n *  negative index counts from the end of _self_.  Returns +nil+\n *  if the index is out of range. See also <code>Array#[]</code>.\n *  (<code>Array#at</code> is slightly faster than <code>Array#[]</code>,\n *  as it does not accept ranges and so on.)\n *\n *     a = [ "a", "b", "c", "d", "e" ]\n *     a.at(0)     #=> "a"\n *     a.at(-1)    #=> "e"\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_at'   Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'pos'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
','           Punctuation
' '           Text
'pos'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_entry' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'pos'         Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.first     ->   obj or nil\n *     array.first(n)  ->   an_array\n *  \n *  Returns the first element of the array. If the array is empty,\n *  returns <code>nil</code>.\n *     \n *     a = [ "q", "r", "s", "t" ]\n *     a.first     #=> "q"\n *     a.first(2)  #=> ["q", "r"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_first' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'RARRAY'      Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'ary_shared_first' Name.Function
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.last     ->  obj or nil\n *     array.last(n)  ->  an_array\n *  \n *  Returns the last element(s) of <i>self</i>. If the array is empty,\n *  the first form returns <code>nil</code>.\n *     \n *     a = [ "w", "x", "y", "z" ]\n *     a.last     #=> "z"\n *     a.last(2)  #=> ["y", "z"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_last' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'RARRAY'      Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
'-1'          Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'ary_shared_last' Name.Function
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.fetch(index)                    -> obj\n *     array.fetch(index, default )          -> obj\n *     array.fetch(index) {|index| block }   -> obj\n *  \n *  Tries to return the element at position <i>index</i>. If the index\n *  lies outside the array, the first form throws an\n *  <code>IndexError</code> exception, the second form returns\n *  <i>default</i>, and the third form returns the value of invoking\n *  the block, passing in the index. Negative values of <i>index</i>\n *  count from the end of the array.\n *     \n *     a = [ 11, 22, 33, 44 ]\n *     a.fetch(1)               #=> 22\n *     a.fetch(-1)              #=> 44\n *     a.fetch(4, \'cat\')        #=> "cat"\n *     a.fetch(4) { |i| i*i }   #=> 16\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_fetch' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'pos'         Name
','           Punctuation
' '           Text
'ifnone'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'block_given' Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'idx'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'11'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'&'           Operator
'pos'         Name
','           Punctuation
' '           Text
'&'           Operator
'ifnone'      Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'block_given' Name
' '           Text
'='           Operator
' '           Text
'rb_block_given_p' Name
'('           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'block_given' Name
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_warn'     Name
'('           Punctuation
'"'           Literal.String
'block supersedes default value argument' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'idx'         Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'pos'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'idx'         Name
' '           Text
'+'           Operator
'='           Operator
'  '          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'idx'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'|'           Operator
'|'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'<'           Operator
'='           Operator
' '           Text
'idx'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'block_given' Name
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'rb_yield'    Name
'('           Punctuation
'pos'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_raise'    Name
'('           Punctuation
'rb_eIndexError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'index %ld out of array' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'idx'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'ifnone'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'idx'         Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.index(obj)           ->  int or nil\n *     array.index {|item| block} ->  int or nil\n *  \n *  Returns the index of the first object in <i>self</i> such that is\n *  <code>==</code> to <i>obj</i>. If a block is given instead of an\n *  argument, returns first object for which <em>block</em> is true.\n *  Returns <code>nil</code> if no match is found.\n *     \n *     a = [ "a", "b", "c" ]\n *     a.index("b")        #=> 1\n *     a.index("z")        #=> nil\n *     a.index{|x|x=="b"}  #=> 1\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_index' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'01'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'&'           Operator
'val'         Name
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'if'          Keyword
' '           Text
'('           Punctuation
'RTEST'       Name
'('           Punctuation
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'return'      Keyword
' '           Text
'LONG2NUM'    Name.Function
'('           Punctuation
'i'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_equal'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
')'           Punctuation
'\n'          Text

'\t\t'        Text
'return'      Keyword
' '           Text
'LONG2NUM'    Name
'('           Punctuation
'i'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.rindex(obj)    ->  int or nil\n *  \n *  Returns the index of the last object in <i>array</i>\n *  <code>==</code> to <i>obj</i>. If a block is given instead of an\n *  argument, returns first object for which <em>block</em> is\n *  true. Returns <code>nil</code> if no match is found.\n *     \n *     a = [ "a", "b", "b", "b", "c" ]\n *     a.rindex("b")        #=> 3\n *     a.rindex("z")        #=> nil\n *     a.rindex{|x|x=="b"}  #=> 3\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_rindex' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'val'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'01'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'&'           Operator
'val'         Name
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'while'       Keyword
' '           Text
'('           Punctuation
'i'           Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'if'          Keyword
' '           Text
'('           Punctuation
'RTEST'       Name
'('           Punctuation
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
')'           Punctuation
'\n'          Text

'\t\t'        Text
'return'      Keyword
' '           Text
'LONG2NUM'    Name
'('           Punctuation
'i'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'if'          Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'i'           Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t    '      Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'while'       Keyword
' '           Text
'('           Punctuation
'i'           Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_equal'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
','           Punctuation
' '           Text
'val'         Name
')'           Punctuation
')'           Punctuation
'\n'          Text

'\t\t'        Text
'return'      Keyword
' '           Text
'LONG2NUM'    Name
'('           Punctuation
'i'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'if'          Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'i'           Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t    '      Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'Qnil'        Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_to_ary' Name
'('           Punctuation
'obj'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'obj'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'TYPE'        Name
'('           Punctuation
'obj'         Name
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'T_ARRAY'     Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'obj'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_respond_to' Name
'('           Punctuation
'obj'         Name
','           Punctuation
' '           Text
'rb_intern'   Name
'('           Punctuation
'"'           Literal.String
'to_ary'      Literal.String
'"'           Literal.String
')'           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'to_ary'      Name.Function
'('           Punctuation
'obj'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_new3' Name
'('           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'obj'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'void'        Keyword.Type
'\n'          Text

'rb_ary_splice' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
','           Punctuation
' '           Text
'rpl'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'rpl'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'rlen'        Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'rb_raise'    Name
'('           Punctuation
'rb_eIndexError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'negative length (%ld)' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'beg'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'beg'         Name
' '           Text
'-'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t    '      Text
'rb_raise'    Name
'('           Punctuation
'rb_eIndexError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'index %ld out of array' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'beg'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'len'         Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'beg'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rpl'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'Qundef'      Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rlen'        Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rpl'         Name
' '           Text
'='           Operator
' '           Text
'rb_ary_to_ary' Name
'('           Punctuation
'rpl'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'rlen'        Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'rpl'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'>'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'rlen'        Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'>'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'REALLOC_N'   Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'rb_mem_clear' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'beg'         Name
' '           Text
'-'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'rlen'        Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'MEMCPY'      Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'rpl'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'rlen'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'long'        Keyword.Type
' '           Text
'alen'        Name
';'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'len'         Name
' '           Text
'>'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'beg'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'alen'        Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'+'           Operator
' '           Text
'rlen'        Name
' '           Text
'-'           Operator
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'alen'        Name
' '           Text
'>'           Operator
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'REALLOC_N'   Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'alen'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'aux'         Name
'.'           Punctuation
'capa'        Name
' '           Text
'='           Operator
' '           Text
'alen'        Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'len'         Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'rlen'        Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'MEMMOVE'     Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'rlen'        Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'len'         Name
','           Punctuation
'\n'          Text

'\t\t    '    Text
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'('           Punctuation
'beg'         Name
' '           Text
'+'           Operator
' '           Text
'len'         Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'alen'        Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'rlen'        Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'MEMMOVE'     Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'+'           Operator
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'rpl'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'rlen'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/* \n *  call-seq:\n *     array[index]         = obj                     ->  obj\n *     array[start, length] = obj or an_array or nil  ->  obj or an_array or nil\n *     array[range]         = obj or an_array or nil  ->  obj or an_array or nil\n *\n *  Element Assignment---Sets the element at _index_,\n *  or replaces a subarray starting at _start_ and\n *  continuing for _length_ elements, or replaces a subarray\n *  specified by _range_.  If indices are greater than\n *  the current capacity of the array, the array grows\n *  automatically. A negative indices will count backward\n *  from the end of the array. Inserts elements if _length_ is\n *  zero. An +IndexError+ is raised if a negative index points\n *  past the beginning of the array. See also\n *  <code>Array#push</code>, and <code>Array#unshift</code>.\n * \n *     a = Array.new\n *     a[4] = "4";                 #=> [nil, nil, nil, nil, "4"]\n *     a[0, 3] = [ \'a\', \'b\', \'c\' ] #=> ["a", "b", "c", nil, "4"]\n *     a[1..2] = [ 1, 2 ]          #=> ["a", 1, 2, nil, "4"]\n *     a[0, 2] = "?"               #=> ["?", 2, nil, "4"]\n *     a[0..2] = "A"               #=> ["A", "4"]\n *     a[-1]   = "Z"               #=> ["A", "Z"]\n *     a[1..-1] = nil              #=> ["A", nil]\n *     a[1..-1] = []              #=> ["A"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_aset' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'offset'      Name
','           Punctuation
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_ary_splice' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
','           Punctuation
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
','           Punctuation
' '           Text
'argv'        Name
'['           Punctuation
'2'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'argv'        Name
'['           Punctuation
'2'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'wrong number of arguments (%d for 2)' Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'argc'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'FIXNUM_P'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'offset'      Name
' '           Text
'='           Operator
' '           Text
'FIX2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'goto'        Keyword
' '           Text
'fixnum'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_range_beg_len' Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
','           Punctuation
' '           Text
'&'           Operator
'beg'         Name
','           Punctuation
' '           Text
'&'           Operator
'len'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'/* check if idx is Range */' Comment.Multiline
'\n'          Text

'\t'          Text
'rb_ary_splice' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
','           Punctuation
' '           Text
'argv'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'argv'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'offset'      Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'fixnum'      Name.Label
':'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_store' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'offset'      Name
','           Punctuation
' '           Text
'argv'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'argv'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.insert(index, obj...)  -> array\n *  \n *  Inserts the given values before the element with the given index\n *  (which may be negative).\n *     \n *     a = %w{ a b c d }\n *     a.insert(2, 99)         #=> ["a", "b", 99, "c", "d"]\n *     a.insert(-2, 1, 2, 3)   #=> ["a", "b", 99, "c", 1, 2, 3, "d"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_insert' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'pos'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'<'           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eArgError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'wrong number of arguments (at least 1)' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'pos'         Name
' '           Text
'='           Operator
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'pos'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'-1'          Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'pos'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'else'        Keyword
' '           Text
'if'          Keyword
' '           Text
'('           Punctuation
'pos'         Name
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'pos'         Name
'+'           Operator
'+'           Operator
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'argc'        Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_splice' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'pos'         Name
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
','           Punctuation
' '           Text
'rb_ary_new4' Name
'('           Punctuation
'argc'        Name
' '           Text
'-'           Operator
' '           Text
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'argv'        Name
' '           Text
'+'           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.each {|item| block }   ->   array\n *  \n *  Calls <i>block</i> once for each element in <i>self</i>, passing that\n *  element as a parameter.\n *     \n *     a = [ "a", "b", "c" ]\n *     a.each {|x| print x, " -- " }\n *     \n *  produces:\n *     \n *     a -- b -- c --\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_each' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.each_index {|index| block }  ->  array\n *  \n *  Same as <code>Array#each</code>, but passes the index of the element\n *  instead of the element itself.\n *     \n *     a = [ "a", "b", "c" ]\n *     a.each_index {|x| print x, " -- " }\n *     \n *  produces:\n *     \n *     0 -- 1 -- 2 --\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_each_index' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_yield'    Name
'('           Punctuation
'LONG2NUM'    Name
'('           Punctuation
'i'           Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.reverse_each {|item| block } \n *  \n *  Same as <code>Array#each</code>, but traverses <i>self</i> in reverse\n *  order.\n *     \n *     a = [ "a", "b", "c" ]\n *     a.reverse_each {|x| print x, " " }\n *     \n *  produces:\n *     \n *     c b a\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_reverse_each' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'while'       Keyword
' '           Text
'('           Punctuation
'len'         Name
'-'           Operator
'-'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'len'         Name
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'<'           Operator
' '           Text
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.length -> int\n *  \n *  Returns the number of elements in <i>self</i>. May be zero.\n *     \n *     [ 1, 2, 3, 4, 5 ].length   #=> 5\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_length' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'LONG2NUM'    Name.Function
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.empty?   -> true or false\n *  \n *  Returns <code>true</code> if <i>self</i> array contains no elements.\n *     \n *     [].empty?   #=> true\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_empty_p' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'Qtrue'       Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'Qfalse'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_dup'  Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'dup'         Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'DUPSETUP'    Name
'('           Punctuation
'dup'         Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'MEMCPY'      Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'dup'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'VALUE'       Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'RARRAY'      Name
'('           Punctuation
'dup'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'dup'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'extern'      Keyword
' '           Text
'VALUE'       Name
' '           Text
'rb_output_fs' Name
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'recursive_join' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'arg'         Name
','           Punctuation
' '           Text
'recur'       Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'arg'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'recur'       Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'recur'       Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_str_new2' Name.Function
'('           Punctuation
'"'           Literal.String
'[...]'       Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_join' Name
'('           Punctuation
'arg'         Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
','           Punctuation
' '           Text
'arg'         Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_join' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'sep'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
','           Punctuation
' '           Text
'sep'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'taint'       Name
' '           Text
'='           Operator
' '           Text
'Qfalse'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'result'      Name
','           Punctuation
' '           Text
'tmp'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'rb_str_new'  Name
'('           Punctuation
'0'           Literal.Number.Integer
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'OBJ_TAINTED' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
' '           Text
'|'           Operator
'|'           Operator
' '           Text
'OBJ_TAINTED' Name
'('           Punctuation
'sep'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'taint'       Name
' '           Text
'='           Operator
' '           Text
'Qtrue'       Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'tmp'         Name
' '           Text
'='           Operator
' '           Text
'rb_check_string_type' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'len'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'NIL_P'       Name
'('           Punctuation
'tmp'         Name
')'           Punctuation
' '           Text
'?'           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
':'           Operator
' '           Text
'RSTRING'     Name
'('           Punctuation
'tmp'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'!'           Operator
'NIL_P'       Name
'('           Punctuation
'sep'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'StringValue' Name
'('           Punctuation
'sep'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'len'         Name
' '           Text
'+'           Operator
'='           Operator
' '           Text
'RSTRING'     Name
'('           Punctuation
'sep'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'*'           Operator
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'rb_str_buf_new' Name
'('           Punctuation
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'tmp'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'switch'      Keyword
' '           Text
'('           Punctuation
'TYPE'        Name
'('           Punctuation
'tmp'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t  '        Text
'case'        Keyword
' '           Text
'T_STRING'    Name.Label
':'           Punctuation
'\n'          Text

'\t    '      Text
'break'       Keyword
';'           Punctuation
'\n'          Text

'\t  '        Text
'case'        Keyword
' '           Text
'T_ARRAY'     Name.Label
':'           Punctuation
'\n'          Text

'\t    '      Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'VALUE'       Name
' '           Text
'args'        Name
'['           Punctuation
'2'           Literal.Number.Integer
']'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'\t\t'        Text
'args'        Name
'['           Punctuation
'0'           Literal.Number.Integer
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'tmp'         Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'args'        Name
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'sep'         Name
';'           Punctuation
'\n'          Text

'\t\t'        Text
'tmp'         Name
' '           Text
'='           Operator
' '           Text
'rb_exec_recursive' Name
'('           Punctuation
'recursive_join' Name
','           Punctuation
' '           Text
'ary'         Name
','           Punctuation
' '           Text
'('           Punctuation
'VALUE'       Name
')'           Punctuation
'args'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'}'           Punctuation
'\n'          Text

'\t    '      Text
'break'       Keyword
';'           Punctuation
'\n'          Text

'\t  '        Text
'default'     Keyword
':'           Operator
'\n'          Text

'\t    '      Text
'tmp'         Name
' '           Text
'='           Operator
' '           Text
'rb_obj_as_string' Name
'('           Punctuation
'tmp'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'!'           Operator
'NIL_P'       Name
'('           Punctuation
'sep'         Name
')'           Punctuation
')'           Punctuation
'\n'          Text

'\t    '      Text
'rb_str_buf_append' Name
'('           Punctuation
'result'      Name
','           Punctuation
' '           Text
'sep'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'rb_str_buf_append' Name
'('           Punctuation
'result'      Name
','           Punctuation
' '           Text
'tmp'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'OBJ_TAINTED' Name
'('           Punctuation
'tmp'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'taint'       Name
' '           Text
'='           Operator
' '           Text
'Qtrue'       Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'taint'       Name
')'           Punctuation
' '           Text
'OBJ_TAINT'   Name
'('           Punctuation
'result'      Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.join(sep=$,)    -> str\n *  \n *  Returns a string created by converting each element of the array to\n *  a string, separated by <i>sep</i>.\n *     \n *     [ "a", "b", "c" ].join        #=> "abc"\n *     [ "a", "b", "c" ].join("-")   #=> "a-b-c"\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_join_m' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'sep'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_scan_args' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'"'           Literal.String
'01'          Literal.String
'"'           Literal.String
','           Punctuation
' '           Text
'&'           Operator
'sep'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'NIL_P'       Name
'('           Punctuation
'sep'         Name
')'           Punctuation
')'           Punctuation
' '           Text
'sep'         Name
' '           Text
'='           Operator
' '           Text
'rb_output_fs' Name
';'           Punctuation
'\n'          Text

'    \n    '  Text
'return'      Keyword
' '           Text
'rb_ary_join' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'sep'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.to_s -> string\n *  \n *  Returns _self_<code>.join</code>.\n *     \n *     [ "a", "e", "i", "o" ].to_s   #=> "aeio"\n *\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_to_s' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'rb_str_new'  Name
'('           Punctuation
'0'           Literal.Number.Integer
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'    \n    '  Text
'return'      Keyword
' '           Text
'rb_ary_join' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'rb_output_fs' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'inspect_ary' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'dummy'       Name
','           Punctuation
' '           Text
'recur'       Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'dummy'       Name
';'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'recur'       Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'tainted'     Name
' '           Text
'='           Operator
' '           Text
'OBJ_TAINTED' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
's'           Name
','           Punctuation
' '           Text
'str'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'recur'       Name
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'rb_tainted_str_new2' Name
'('           Punctuation
'"'           Literal.String
'[...]'       Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'str'         Name
' '           Text
'='           Operator
' '           Text
'rb_str_buf_new2' Name
'('           Punctuation
'"'           Literal.String
'['           Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
's'           Name
' '           Text
'='           Operator
' '           Text
'rb_inspect'  Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'OBJ_TAINTED' Name
'('           Punctuation
's'           Name
')'           Punctuation
')'           Punctuation
' '           Text
'tainted'     Name
' '           Text
'='           Operator
' '           Text
'Qtrue'       Name
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'rb_str_buf_cat2' Name
'('           Punctuation
'str'         Name
','           Punctuation
' '           Text
'"'           Literal.String
', '          Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'rb_str_buf_append' Name
'('           Punctuation
'str'         Name
','           Punctuation
' '           Text
's'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'rb_str_buf_cat2' Name
'('           Punctuation
'str'         Name
','           Punctuation
' '           Text
'"'           Literal.String
']'           Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'tainted'     Name
')'           Punctuation
' '           Text
'OBJ_TAINT'   Name
'('           Punctuation
'str'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'str'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.inspect  -> string\n *\n *  Create a printable version of <i>array</i>.\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_inspect' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'='           Operator
'='           Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'rb_str_new2' Name
'('           Punctuation
'"'           Literal.String
'[]'          Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_exec_recursive' Name.Function
'('           Punctuation
'inspect_ary' Name
','           Punctuation
' '           Text
'ary'         Name
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.to_a     -> array\n *  \n *  Returns _self_. If called on a subclass of Array, converts\n *  the receiver to an Array object.\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_to_a' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'rb_obj_class' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
' '           Text
'!'           Operator
'='           Operator
' '           Text
'rb_cArray'   Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'VALUE'       Name
' '           Text
'dup'         Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'rb_ary_replace' Name
'('           Punctuation
'dup'         Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'dup'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.to_ary -> array\n *  \n *  Returns _self_.\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_to_ary_m' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_reverse' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'p1'          Name
','           Punctuation
' '           Text
'*'           Operator
'p2'          Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'tmp'         Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'>'           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'p1'          Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'p2'          Name
' '           Text
'='           Operator
' '           Text
'p1'          Name
' '           Text
'+'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'-'           Operator
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\t'          Text
'/* points last item */' Comment.Multiline
'\n'          Text

'\n'          Text

'\t'          Text
'while'       Keyword
' '           Text
'('           Punctuation
'p1'          Name
' '           Text
'<'           Operator
' '           Text
'p2'          Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'tmp'         Name
' '           Text
'='           Operator
' '           Text
'*'           Operator
'p1'          Name
';'           Punctuation
'\n'          Text

'\t    '      Text
'*'           Operator
'p1'          Name
'+'           Operator
'+'           Operator
' '           Text
'='           Operator
' '           Text
'*'           Operator
'p2'          Name
';'           Punctuation
'\n'          Text

'\t    '      Text
'*'           Operator
'p2'          Name
'-'           Operator
'-'           Operator
' '           Text
'='           Operator
' '           Text
'tmp'         Name
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.reverse!   -> array \n *  \n *  Reverses _self_ in place.\n *     \n *     a = [ "a", "b", "c" ]\n *     a.reverse!       #=> ["c", "b", "a"]\n *     a                #=> ["c", "b", "a"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_reverse_bang' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_reverse' Name.Function
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.reverse -> an_array\n *  \n *  Returns a new array containing <i>self</i>\'s elements in reverse order.\n *     \n *     [ "a", "b", "c" ].reverse   #=> ["c", "b", "a"]\n *     [ 1 ].reverse               #=> [1]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_reverse_m' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_ary_reverse' Name.Function
'('           Punctuation
'rb_ary_dup'  Name
'('           Punctuation
'ary'         Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'struct'      Keyword
' '           Text
'ary_sort_data' Name.Class
' '           Text
'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'ptr'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'len'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'void'        Keyword.Type
'\n'          Text

'ary_sort_check' Name
'('           Punctuation
'data'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'struct'      Keyword
' '           Text
'ary_sort_data' Name.Class
' '           Text
'*'           Operator
'data'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'data'        Name
'-'           Operator
'>'           Operator
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'data'        Name
'-'           Operator
'>'           Operator
'ptr'         Name
' '           Text
'|'           Operator
'|'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'data'        Name
'-'           Operator
'>'           Operator
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'!'           Operator
'='           Operator
' '           Text
'data'        Name
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_raise'    Name
'('           Punctuation
'rb_eRuntimeError' Name
','           Punctuation
' '           Text
'"'           Literal.String
'array modified during sort' Literal.String
'"'           Literal.String
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
'\n'          Text

'sort_1'      Name
'('           Punctuation
'a'           Name
','           Punctuation
' '           Text
'b'           Name
','           Punctuation
' '           Text
'data'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'a'           Name
','           Punctuation
' '           Text
'*'           Operator
'b'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'struct'      Keyword
' '           Text
'ary_sort_data' Name.Class
' '           Text
'*'           Operator
'data'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'retval'      Name
' '           Text
'='           Operator
' '           Text
'rb_yield_values' Name
'('           Punctuation
'2'           Literal.Number.Integer
','           Punctuation
' '           Text
'*'           Operator
'a'           Name
','           Punctuation
' '           Text
'*'           Operator
'b'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'n'           Name
' '           Text
'='           Operator
' '           Text
'rb_cmpint'   Name
'('           Punctuation
'retval'      Name
','           Punctuation
' '           Text
'*'           Operator
'a'           Name
','           Punctuation
' '           Text
'*'           Operator
'b'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'ary_sort_check' Name
'('           Punctuation
'data'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'int'         Keyword.Type
'\n'          Text

'sort_2'      Name
'('           Punctuation
'ap'          Name
','           Punctuation
' '           Text
'bp'          Name
','           Punctuation
' '           Text
'data'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'ap'          Name
','           Punctuation
' '           Text
'*'           Operator
'bp'          Name
';'           Punctuation
'\n'          Text

'    '        Text
'struct'      Keyword
' '           Text
'ary_sort_data' Name.Class
' '           Text
'*'           Operator
'data'        Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'retval'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'a'           Name
' '           Text
'='           Operator
' '           Text
'*'           Operator
'ap'          Name
','           Punctuation
' '           Text
'b'           Name
' '           Text
'='           Operator
' '           Text
'*'           Operator
'bp'          Name
';'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'FIXNUM_P'    Name
'('           Punctuation
'a'           Name
')'           Punctuation
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'FIXNUM_P'    Name
'('           Punctuation
'b'           Name
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'('           Punctuation
'long'        Keyword.Type
')'           Punctuation
'a'           Name
' '           Text
'>'           Operator
' '           Text
'('           Punctuation
'long'        Keyword.Type
')'           Punctuation
'b'           Name
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'('           Punctuation
'long'        Keyword.Type
')'           Punctuation
'a'           Name
' '           Text
'<'           Operator
' '           Text
'('           Punctuation
'long'        Keyword.Type
')'           Punctuation
'b'           Name
')'           Punctuation
' '           Text
'return'      Keyword
' '           Text
'-1'          Literal.Number.Integer
';'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'TYPE'        Name
'('           Punctuation
'a'           Name
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'T_STRING'    Name
' '           Text
'&'           Operator
'&'           Operator
' '           Text
'TYPE'        Name
'('           Punctuation
'b'           Name
')'           Punctuation
' '           Text
'='           Operator
'='           Operator
' '           Text
'T_STRING'    Name
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_str_cmp'  Name.Function
'('           Punctuation
'a'           Name
','           Punctuation
' '           Text
'b'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'retval'      Name
' '           Text
'='           Operator
' '           Text
'rb_funcall'  Name
'('           Punctuation
'a'           Name
','           Punctuation
' '           Text
'id_cmp'      Name
','           Punctuation
' '           Text
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'b'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'n'           Name
' '           Text
'='           Operator
' '           Text
'rb_cmpint'   Name
'('           Punctuation
'retval'      Name
','           Punctuation
' '           Text
'a'           Name
','           Punctuation
' '           Text
'b'           Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'ary_sort_check' Name
'('           Punctuation
'data'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'n'           Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'sort_internal' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'struct'      Keyword
' '           Text
'ary_sort_data' Name.Class
' '           Text
'data'        Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'data'        Name
'.'           Punctuation
'ary'         Name
' '           Text
'='           Operator
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'data'        Name
'.'           Punctuation
'ptr'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
';'           Punctuation
' '           Text
'data'        Name
'.'           Punctuation
'len'         Name
' '           Text
'='           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'qsort'       Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'sizeof'      Keyword
'('           Punctuation
'VALUE'       Name
')'           Punctuation
','           Punctuation
'\n'          Text

'\t  '        Text
'rb_block_given_p' Name
'('           Punctuation
')'           Punctuation
'?'           Operator
'sort_1'      Name.Label
':'           Punctuation
'sort_2'      Name
','           Punctuation
' '           Text
'&'           Operator
'data'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'sort_unlock' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'FL_UNSET'    Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ARY_TMPLOCK' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.sort!                   -> array\n *     array.sort! {| a,b | block }  -> array \n *  \n *  Sorts _self_. Comparisons for\n *  the sort will be done using the <code><=></code> operator or using\n *  an optional code block. The block implements a comparison between\n *  <i>a</i> and <i>b</i>, returning -1, 0, or +1. See also\n *  <code>Enumerable#sort_by</code>.\n *     \n *     a = [ "d", "a", "e", "c", "b" ]\n *     a.sort                    #=> ["a", "b", "c", "d", "e"]\n *     a.sort {|x,y| y <=> x }   #=> ["e", "d", "c", "b", "a"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_sort_bang' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
' '           Text
'>'           Operator
' '           Text
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'FL_SET'      Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'ARY_TMPLOCK' Name
')'           Punctuation
';'           Punctuation
'\t'          Text
'/* prohibit modification during sort */' Comment.Multiline
'\n'          Text

'\t'          Text
'rb_ensure'   Name
'('           Punctuation
'sort_internal' Name
','           Punctuation
' '           Text
'ary'         Name
','           Punctuation
' '           Text
'sort_unlock' Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.sort                   -> an_array \n *     array.sort {| a,b | block }  -> an_array \n *  \n *  Returns a new array created by sorting <i>self</i>. Comparisons for\n *  the sort will be done using the <code><=></code> operator or using\n *  an optional code block. The block implements a comparison between\n *  <i>a</i> and <i>b</i>, returning -1, 0, or +1. See also\n *  <code>Enumerable#sort_by</code>.\n *     \n *     a = [ "d", "a", "e", "c", "b" ]\n *     a.sort                    #=> ["a", "b", "c", "d", "e"]\n *     a.sort {|x,y| y <=> x }   #=> ["e", "d", "c", "b", "a"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_ary_sort' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'ary'         Name
' '           Text
'='           Operator
' '           Text
'rb_ary_dup'  Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'rb_ary_sort_bang' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.collect {|item| block }  -> an_array\n *     array.map     {|item| block }  -> an_array\n *  \n *  Invokes <i>block</i> once for each element of <i>self</i>. Creates a \n *  new array containing the values returned by the block.\n *  See also <code>Enumerable#collect</code>.\n *     \n *     a = [ "a", "b", "c", "d" ]\n *     a.collect {|x| x + "!" }   #=> ["a!", "b!", "c!", "d!"]\n *     a                          #=> ["a", "b", "c", "d"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_collect' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'collect'     Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'if'          Keyword
' '           Text
'('           Punctuation
'!'           Operator
'rb_block_given_p' Name
'('           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'return'      Keyword
' '           Text
'rb_ary_new4' Name.Function
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'collect'     Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
' '           Text
'<'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_ary_push' Name
'('           Punctuation
'collect'     Name
','           Punctuation
' '           Text
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'collect'     Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/* \n *  call-seq:\n *     array.collect! {|item| block }   ->   array\n *     array.map!     {|item| block }   ->   array\n *\n *  Invokes the block once for each element of _self_, replacing the\n *  element with the value returned by _block_.\n *  See also <code>Enumerable#collect</code>.\n *   \n *     a = [ "a", "b", "c", "d" ]\n *     a.collect! {|x| x + "!" }\n *     a             #=>  [ "a!", "b!", "c!", "d!" ]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_collect_bang' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'rb_ary_modify' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
' '           Text
'<'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'rb_ary_store' Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'i'           Name
','           Punctuation
' '           Text
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'VALUE'       Name
'\n'          Text

'rb_get_values_at' Name
'('           Punctuation
'obj'         Name
','           Punctuation
' '           Text
'olen'        Name
','           Punctuation
' '           Text
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'func'        Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'obj'         Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'olen'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'('           Punctuation
'*'           Operator
'func'        Name
')'           Punctuation
' '           Text
'_'           Name
'('           Punctuation
'('           Punctuation
'VALUE'       Name
','           Punctuation
'long'        Keyword.Type
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'argc'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'beg'         Name
','           Punctuation
' '           Text
'len'         Name
','           Punctuation
' '           Text
'i'           Name
','           Punctuation
' '           Text
'j'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
'<'           Operator
'argc'        Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'FIXNUM_P'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_ary_push' Name
'('           Punctuation
'result'      Name
','           Punctuation
' '           Text
'('           Punctuation
'*'           Operator
'func'        Name
')'           Punctuation
'('           Punctuation
'obj'         Name
','           Punctuation
' '           Text
'FIX2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'continue'    Keyword
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'/* check if idx is Range */' Comment.Multiline
'\n'          Text

'\t'          Text
'switch'      Keyword
' '           Text
'('           Punctuation
'rb_range_beg_len' Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'i'           Name
']'           Punctuation
','           Punctuation
' '           Text
'&'           Operator
'beg'         Name
','           Punctuation
' '           Text
'&'           Operator
'len'         Name
','           Punctuation
' '           Text
'olen'        Name
','           Punctuation
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t  '        Text
'case'        Keyword
' '           Text
'Qfalse'      Name.Label
':'           Punctuation
'\n'          Text

'\t    '      Text
'break'       Keyword
';'           Punctuation
'\n'          Text

'\t  '        Text
'case'        Keyword
' '           Text
'Qnil'        Name.Label
':'           Punctuation
'\n'          Text

'\t    '      Text
'continue'    Keyword
';'           Punctuation
'\n'          Text

'\t  '        Text
'default'     Keyword
':'           Operator
'\n'          Text

'\t    '      Text
'for'         Keyword
' '           Text
'('           Punctuation
'j'           Name
'='           Operator
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'j'           Name
'<'           Operator
'len'         Name
';'           Punctuation
' '           Text
'j'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t\t'        Text
'rb_ary_push' Name
'('           Punctuation
'result'      Name
','           Punctuation
' '           Text
'('           Punctuation
'*'           Operator
'func'        Name
')'           Punctuation
'('           Punctuation
'obj'         Name
','           Punctuation
' '           Text
'j'           Name
'+'           Operator
'beg'         Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t    '      Text
'}'           Punctuation
'\n'          Text

'\t    '      Text
'continue'    Keyword
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'\t'          Text
'rb_ary_push' Name
'('           Punctuation
'result'      Name
','           Punctuation
' '           Text
'('           Punctuation
'*'           Operator
'func'        Name
')'           Punctuation
'('           Punctuation
'obj'         Name
','           Punctuation
' '           Text
'NUM2LONG'    Name
'('           Punctuation
'argv'        Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/* \n *  call-seq:\n *     array.values_at(selector,... )  -> an_array\n *\n *  Returns an array containing the elements in\n *  _self_ corresponding to the given selector(s). The selectors\n *  may be either integer indices or ranges. \n *  See also <code>Array#select</code>.\n * \n *     a = %w{ a b c d e f }\n *     a.values_at(1, 3, 5)\n *     a.values_at(1, 3, 5, 7)\n *     a.values_at(-1, -3, -5, -7)\n *     a.values_at(1..3, 2...5)\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_values_at' Name
'('           Punctuation
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'int'         Keyword.Type
' '           Text
'argc'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'*'           Operator
'argv'        Name
';'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'rb_get_values_at' Name.Function
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
','           Punctuation
' '           Text
'argc'        Name
','           Punctuation
' '           Text
'argv'        Name
','           Punctuation
' '           Text
'rb_ary_entry' Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'\n'          Text

'/*\n *  call-seq:\n *     array.select {|item| block } -> an_array\n *  \n *  Invokes the block passing in successive elements from <i>array</i>,\n *  returning an array containing those elements for which the block\n *  returns a true value (equivalent to <code>Enumerable#select</code>).\n *     \n *     a = %w{ a b c d e f }\n *     a.select {|v| v =~ /[aeiou]/}   #=> ["a", "e"]\n */' Comment.Multiline
'\n'          Text

'\n'          Text

'static'      Keyword
' '           Text
'VALUE'       Name
'\n'          Text

'rb_ary_select' Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'ary'         Name
';'           Punctuation
'\n'          Text

'{'           Punctuation
'\n'          Text

'    '        Text
'VALUE'       Name
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'    '        Text
'long'        Keyword.Type
' '           Text
'i'           Name
';'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'result'      Name
' '           Text
'='           Operator
' '           Text
'rb_ary_new2' Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
')'           Punctuation
';'           Punctuation
'\n'          Text

'    '        Text
'for'         Keyword
' '           Text
'('           Punctuation
'i'           Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
';'           Punctuation
' '           Text
'i'           Name
' '           Text
'<'           Operator
' '           Text
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'len'         Name
';'           Punctuation
' '           Text
'i'           Name
'+'           Operator
'+'           Operator
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t'          Text
'if'          Keyword
' '           Text
'('           Punctuation
'RTEST'       Name
'('           Punctuation
'rb_yield'    Name
'('           Punctuation
'RARRAY'      Name
'('           Punctuation
'ary'         Name
')'           Punctuation
'-'           Operator
'>'           Operator
'ptr'         Name
'['           Punctuation
'i'           Name
']'           Punctuation
')'           Punctuation
')'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n'          Text

'\t    '      Text
'rb_ary_push' Name
'('           Punctuation
'result'      Name
','           Punctuation
' '           Text
'rb_ary_elt'  Name
'('           Punctuation
'ary'         Name
','           Punctuation
' '           Text
'i'           Name
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text

'\t'          Text
'}'           Punctuation
'\n'          Text

'    '        Text
'}'           Punctuation
'\n'          Text

'    '        Text
'return'      Keyword
' '           Text
'result'      Name
';'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text
