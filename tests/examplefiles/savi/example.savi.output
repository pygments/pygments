':'           Name.Tag
'import'      Name.Tag
' '           Text
'"'           Literal.String.Double
's'           Literal.String.Double
'p'           Literal.String.Double
'e'           Literal.String.Double
'c'           Literal.String.Double
'"'           Literal.String.Double
'\n'          Text

'\n'          Text

':'           Name.Tag
'actor'       Name.Tag
' '           Text
'Main'        Name.Class
'\n'          Text

'  '          Text
':'           Name.Tag
'new'         Name.Tag
' '           Text
'('           Punctuation
'env'         Name
')'           Punctuation
'\n'          Text

'    '        Text
'Specs'       Name.Class
'.'           Punctuation
'run'         Name.Function
'('           Punctuation
'env'         Name
','           Punctuation
' '           Text
'['           Punctuation
'\n'          Text

'      '      Text
'SpecRun'     Name.Class
'('           Punctuation
'AdditionSpec' Name.Class
')'           Punctuation
'.'           Punctuation
'new'         Name.Function
'('           Punctuation
'env'         Name
')'           Punctuation
'\n'          Text

'    '        Text
']'           Punctuation
')'           Punctuation
'\n'          Text

'\n'          Text

':'           Name.Tag
'class'       Name.Tag
' '           Text
'AdditionSpec' Name.Class
'\n'          Text

'  '          Text
':'           Name.Tag
'is'          Name.Tag
' '           Text
'Spec'        Name.Class
'\n'          Text

'  '          Text
':'           Name.Tag
'const'       Name.Tag
' '           Text
'describes'   Keyword.Declaration
':'           Punctuation
' '           Text
'"'           Literal.String.Double
'A'           Literal.String.Double
'd'           Literal.String.Double
'd'           Literal.String.Double
'i'           Literal.String.Double
't'           Literal.String.Double
'i'           Literal.String.Double
'o'           Literal.String.Double
'n'           Literal.String.Double
'"'           Literal.String.Double
'\n'          Text

'\n'          Text

'  '          Text
':: Return the number 2 (written in hex, just for fun).' Comment.Singleline
'\n'          Text

'  '          Text
':'           Name.Tag
'const'       Name.Tag
' '           Text
'two'         Keyword.Declaration
' '           Text
'U64'         Name.Class
"'"           Operator
'val'         Name
':'           Punctuation
' '           Text
'0x02'        Literal.Number.Hex
'\n'          Text

'\n  '        Text
':'           Name.Tag
'it'          Name.Tag
' '           Text
'"'           Literal.String.Double
'a'           Literal.String.Double
'd'           Literal.String.Double
'd'           Literal.String.Double
's'           Literal.String.Double
' '           Literal.String.Double
't'           Literal.String.Double
'w'           Literal.String.Double
'o'           Literal.String.Double
' '           Literal.String.Double
't'           Literal.String.Double
'w'           Literal.String.Double
'o'           Literal.String.Double
's'           Literal.String.Double
'"'           Literal.String.Double
'\n'          Text

'    '        Text
'@'           Punctuation
'assert'      Name.Function
' '           Text
'='           Operator
' '           Text
'@'           Punctuation
'two'         Name.Function
' '           Text
'+'           Operator
' '           Text
"'"           Literal.String.Char
'\\x02'       Literal.String.Escape
"'"           Literal.String.Char
' '           Text
'=='          Operator
' '           Text
'4'           Literal.Number
'\n'          Text

'\n'          Text

'  '          Text
':: Raise an error if the argument is positive.' Comment.Singleline
'\n'          Text

'  '          Text
':'           Name.Tag
'fun'         Name.Tag
' '           Text
'non'         Keyword.Declaration
' '           Text
'add_overflow!' Generic.Deleted
'('           Punctuation
'a'           Name
' '           Text
'U64'         Name.Class
"'"           Operator
'val'         Name
','           Punctuation
' '           Text
'b'           Name
' '           Text
'U64'         Name.Class
"'"           Operator
'val'         Name
')'           Punctuation
':'           Punctuation
' '           Text
'a'           Name
' '           Text
'+!'          Generic.Deleted
' '           Text
'b'           Name
'\n'          Text

'\n  '        Text
':'           Name.Tag
'it'          Name.Tag
' '           Text
'"'           Literal.String.Double
'c'           Literal.String.Double
'a'           Literal.String.Double
'n'           Literal.String.Double
' '           Literal.String.Double
'e'           Literal.String.Double
'r'           Literal.String.Double
'r'           Literal.String.Double
'o'           Literal.String.Double
'r'           Literal.String.Double
' '           Literal.String.Double
'o'           Literal.String.Double
'n'           Literal.String.Double
' '           Literal.String.Double
'o'           Literal.String.Double
'v'           Literal.String.Double
'e'           Literal.String.Double
'r'           Literal.String.Double
'f'           Literal.String.Double
'l'           Literal.String.Double
'o'           Literal.String.Double
'w'           Literal.String.Double
'"'           Literal.String.Double
'\n'          Text

'    '        Text
'integers'    Name
' '           Text
'Array'       Name.Class
'('           Punctuation
'U64'         Name.Class
')'           Punctuation
"'"           Operator
'val'         Name
' '           Text
'='           Operator
' '           Text
'['           Punctuation
'99'          Literal.Number
','           Punctuation
' '           Text
'100'         Literal.Number
','           Punctuation
' '           Text
'101'         Literal.Number
']'           Punctuation
'\n'          Text

'\n'          Text

'    '        Text
'// Check addition overflow for various pairs of addends.' Comment.Singleline
'\n'          Text

'    '        Text
'@'           Punctuation
'assert'      Name.Function
' '           Text
'='           Operator
' '           Text
'try'         Name
' '           Text
'('           Punctuation
'add_overflow!' Generic.Deleted
'('           Punctuation
'U64'         Name.Class
'.'           Punctuation
'max_value'   Name.Function
','           Punctuation
' '           Text
'1'           Literal.Number
')'           Punctuation
','           Punctuation
' '           Text
'False'       Name.Class
' '           Text
'|'           Operator
' '           Text
'True'        Name.Class
')'           Punctuation
'\n'          Text

'    '        Text
'@'           Punctuation
'assert'      Name.Function
' '           Text
'='           Operator
' '           Text
'try'         Name
' '           Text
'('           Punctuation
'add_overflow!' Generic.Deleted
'('           Punctuation
'U64'         Name.Class
'.'           Punctuation
'max_value'   Name.Function
','           Punctuation
' '           Text
'0'           Literal.Number
')'           Punctuation
','           Punctuation
' '           Text
'True'        Name.Class
' '           Text
'|'           Operator
' '           Text
'False'       Name.Class
')'           Punctuation
'\n'          Text

'    '        Text
'@'           Punctuation
'assert'      Name.Function
' '           Text
'='           Operator
' '           Text
'try'         Name
' '           Text
'('           Punctuation
'add_overflow!' Generic.Deleted
'('           Punctuation
'integers'    Name
'['           Punctuation
'0'           Literal.Number
']'           Punctuation
'!'           Generic.Deleted
','           Punctuation
' '           Text
'1'           Literal.Number
')'           Punctuation
','           Punctuation
' '           Text
'True'        Name.Class
' '           Text
'|'           Operator
' '           Text
'False'       Name.Class
')'           Punctuation
'\n'          Text
