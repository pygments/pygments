'.'           Punctuation
'\\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32' Comment
'\n'          Text

'.'           Punctuation
'\\"'         Comment
'\n'          Text

'.'           Punctuation
'\\" Standard preamble:' Comment
'\n'          Text

'.'           Punctuation
'\\" ========================================================================' Comment
'\n'          Text

'.'           Text
'de'          Keyword
' '           Text
'Sh'          Literal.String
' '           Text
'\\" Subsection heading' Comment
'\n'          Text

'.'           Text
'br'          Keyword
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
't'           Literal.String
' '           Text
'.Sp'         Literal.String
'\n'          Text

'.'           Text
'ne'          Keyword
' '           Text
'5'           Literal.Number
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'\\fB'        Literal.String.Escape
'\\\\'        Literal.String.Escape
'$1'          Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'.'           Punctuation
'.'           Literal.String
'\n'          Text

'.'           Text
'de'          Keyword
' '           Text
'Sp'          Literal.String
' '           Text
'\\" Vertical space (when we can\'t use .PP)' Comment
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
't'           Literal.String
' '           Text
'.sp'         Literal.String
' '           Text
'.5v'         Literal.String
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'.sp'         Literal.String
'\n'          Text

'.'           Punctuation
'.'           Literal.String
'\n'          Text

'.'           Text
'de'          Keyword
' '           Text
'Vb'          Literal.String
' '           Text
'\\" Begin verbatim text' Comment
'\n'          Text

'.'           Text
'ft'          Keyword
' '           Text
'CW'          Literal.String
'\n'          Text

'.'           Text
'nf'          Keyword
'\n'          Text

'.'           Text
'ne'          Keyword
' '           Text
'\\\\'        Literal.String.Escape
'$1'          Literal.String
'\n'          Text

'.'           Punctuation
'.'           Literal.String
'\n'          Text

'.'           Text
'de'          Keyword
' '           Text
'Ve'          Literal.String
' '           Text
'\\" End verbatim text' Comment
'\n'          Text

'.'           Text
'ft'          Keyword
' '           Text
'R'           Literal.String
'\n'          Text

'.'           Text
'fi'          Keyword
'\n'          Text

'.'           Punctuation
'.'           Literal.String
'\n'          Text

'.'           Punctuation
'\\" Set up some character translations and predefined strings.  \\*(-- will' Comment
'\n'          Text

'.'           Punctuation
'\\" give an unbreakable dash, \\*(PI will give pi, \\*(L" will give a left' Comment
'\n'          Text

'.'           Punctuation
'\\" double quote, and \\*(R" will give a right double quote.  | will give a' Comment
'\n'          Text

'.'           Punctuation
'\\" real vertical bar.  \\*(C+ will give a nicer C++.  Capital omega is used to' Comment
'\n'          Text

'.'           Punctuation
'\\" do unbreakable dashes and therefore won\'t be available.  \\*(C` and \\*(C\'' Comment
'\n'          Text

'.'           Punctuation
'\\" expand to `\' in nroff, nothing in troff, for use with C<>.' Comment
'\n'          Text

'.'           Text
'tr'          Keyword
' '           Text
'\\(*W'       Literal.String.Escape
'-|\\(bv\\*(Tr' Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'C+'          Literal.String
' '           Text
"C\\v'-.1v'\\h'-1p'\\s-2+\\h'-1p'+\\s0\\v'.1v'\\h'-1p'" Literal.String
'\n'          Text

'.'           Text
'ie'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'--'          Literal.String
' '           Text
'\\(*W'       Literal.String.Escape
'-'           Literal.String
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'PI'          Literal.String
' '           Text
'pi'          Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'if'          Literal.String
' '           Text
'(\\n(.H=4u)&(1m=24u)' Literal.String
' '           Text
'.ds'         Literal.String
' '           Text
'--'          Literal.String
' '           Text
'\\(*W'       Literal.String.Escape
'\\h'         Literal.String.Escape
'\'-12u\'\\(*W\\h\'-12u\'-\\"' Literal.String
' '           Text
'diablo'      Literal.String
' '           Text
'10'          Literal.Number
' '           Text
'pitch'       Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'if'          Literal.String
' '           Text
'(\\n(.H=4u)&(1m=20u)' Literal.String
' '           Text
'.ds'         Literal.String
' '           Text
'--'          Literal.String
' '           Text
'\\(*W'       Literal.String.Escape
'\\h'         Literal.String.Escape
'\'-12u\'\\(*W\\h\'-8u\'-\\"' Literal.String
'  '          Text
'diablo'      Literal.String
' '           Text
'12'          Literal.Number
' '           Text
'pitch'       Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'L"'          Literal.String
' '           Text
'""'          Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'R"'          Literal.String
' '           Text
'""'          Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'C`'          Literal.String
' '           Text
'""'          Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
"C'"          Literal.String
' '           Text
'""'          Literal.String
'\n'          Text

"'br"         Text
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Text
'el'          Keyword
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'--'          Literal.String
' '           Text
'\\|'         Literal.String.Escape
'\\(em'       Literal.String.Escape
'\\|'         Literal.String.Escape
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'PI'          Literal.String
' '           Text
'\\(*p'       Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'L"'          Literal.String
' '           Text
'``'          Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'R"'          Literal.String
' '           Text
"''"          Literal.String
'\n'          Text

"'br"         Text
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'\\"'         Comment
'\n'          Text

'.'           Punctuation
'\\" If the F register is turned on, we\'ll generate index entries on stderr for' Comment
'\n'          Text

'.'           Punctuation
'\\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index' Comment
'\n'          Text

'.'           Punctuation
'\\" entries marked with X<> in POD.  Of course, you\'ll have to process the' Comment
'\n'          Text

'.'           Punctuation
'\\" output yourself in some meaningful fashion.' Comment
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'\\nF'        Literal.String.Escape
' '           Text
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'de'          Literal.String
' '           Text
'IX'          Literal.String
'\n'          Text

'.'           Literal.String
'    '        Text
'tm'          Literal.String
' '           Text
'Index:\\\\$1\\t\\\\n%\\t"\\\\$2"' Literal.String
'\n'          Text

'.'           Punctuation
'.'           Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'nr'          Literal.String
' '           Text
'%'           Literal.String
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Punctuation
'    '        Text
'rr'          Literal.String
' '           Text
'F'           Literal.String
'\n'          Text

'.'           Punctuation
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'\\"'         Comment
'\n'          Text

'.'           Punctuation
'\\" For nroff, turn off justification.  Always turn off hyphenation; it makes' Comment
'\n'          Text

'.'           Punctuation
'\\" way too many mistakes in technical documents.' Comment
'\n'          Text

'.'           Text
'hy'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'.na'         Literal.String
'\n'          Text

'.'           Punctuation
'\\"'         Comment
'\n'          Text

'.'           Punctuation
'\\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).' Comment
'\n'          Text

'.'           Punctuation
'\\" Fear.  Run.  Save yourself.  No user-serviceable parts.' Comment
'\n'          Text

'.'           Punctuation
'    '        Text
'\\" fudge factors for nroff and troff' Comment
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'#H'          Literal.String
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'#V'          Literal.String
' '           Text
'.8m'         Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'#F'          Literal.String
' '           Text
'.3m'         Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'#['          Literal.String
' '           Text
'\\f1'        Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'#]'          Literal.String
' '           Text
'\\fP'        Literal.String.Escape
'\n'          Text

'.'           Punctuation
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
't'           Literal.String
' '           Text
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'#H'          Literal.String
' '           Text
'((1u-(\\\\\\\\n(.fu%2u))*.13m)' Literal.String
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'#V'          Literal.String
' '           Text
'.6m'         Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'#F'          Literal.String
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'#['          Literal.String
' '           Text
'\\&'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'#]'          Literal.String
' '           Text
'\\&'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'\\" simple accents for nroff and troff' Comment
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
"'"           Literal.String
' '           Text
'\\&'         Literal.String.Escape
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'`'           Literal.String
' '           Text
'\\&'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'^'           Literal.String
' '           Text
'\\&'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
','           Literal.String
' '           Text
'\\&'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'~'           Literal.String
' '           Text
'~'           Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'/'           Literal.String
'\n'          Text

'.'           Punctuation
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
't'           Literal.String
' '           Text
'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
"'"           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
'k:\\h\'-(\\\\n(.wu*8/10-\\*(#H)\'\\\'\\h"|\\\\n:u"' Literal.String
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'`'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\`\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'^'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'^\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
','           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*8/10)',\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'~'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu-\\*(#H-.1m)'~\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'/'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\z\\(sl\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Punctuation
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Punctuation
'    '        Text
'\\" troff and (daisy-wheel) nroff accents' Comment
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
':'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*8/10-\\*(#H+.1m+\\*(#F)'\\v'-\\*(#V'\\z.\\h'.2m+\\*(#F'.\\h'|\\\\n:u'\\v'\\*(#V'" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'8'           Literal.Number
' '           Text
'\\h'         Literal.String.Escape
"'\\*(#H'\\(*b\\h'-\\*(#H'" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'o'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu+\\w'\\(de'u-\\*(#H)/2u'\\v'-.3n'\\*(#[\\z\\(de\\v'.3n'\\h'|\\\\n:u'\\*(#]" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'd-'          Literal.String
' '           Text
'\\h'         Literal.String.Escape
"'\\*(#H'\\(pd\\h'-\\w'~'u'\\v'-.25m'\\f2\\(hy\\fP\\v'.25m'\\h'-\\*(#H'" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'D-'          Literal.String
' '           Text
"D\\\\k:\\h'-\\w'D'u'\\v'-.11m'\\z\\(hy\\v'.11m'\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'th'          Literal.String
' '           Text
'\\*'         Literal.String.Escape
"(#[\\v'.3m'\\s+1I\\s-1\\v'-.3m'\\h'-(\\w'I'u*2/3)'\\s-1o\\s+1\\*(#]" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'Th'          Literal.String
' '           Text
'\\*'         Literal.String.Escape
"(#[\\s+2I\\s-2\\h'-\\w'I'u*3/5'\\v'-.3m'o\\v'.3m'\\*(#]" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'ae'          Literal.String
' '           Text
"a\\h'-(\\w'a'u*4/10)'e" Literal.String
'\n'          Text

'.'           Text
'ds'          Keyword
' '           Text
'Ae'          Literal.String
' '           Text
"A\\h'-(\\w'A'u*4/10)'E" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'\\" corrections for vroff' Comment
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'v'           Literal.String
' '           Text
'.ds'         Literal.String
' '           Text
'~'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*9/10-\\*(#H)'\\s-2\\u~\\d\\s+2\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'v'           Literal.String
' '           Text
'.ds'         Literal.String
' '           Text
'^'           Literal.String
' '           Text
'\\\\'        Literal.String.Escape
"k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'\\v'-.4m'^\\v'.4m'\\h'|\\\\n:u'" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'\\" for low resolution devices (crt and lpr)' Comment
'\n'          Text

'.'           Text
'if'          Keyword
' '           Text
'\\n'         Literal.String.Escape
'(.H>23'      Literal.String
' '           Text
'.if'         Literal.String
' '           Text
'\\n'         Literal.String.Escape
'(.V>19'      Literal.String
' '           Text
'\\\n'        Text

'\\{'         Literal.String.Escape
'\\\n'        Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
':'           Literal.String
' '           Text
'e'           Literal.String
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'8'           Literal.Number
' '           Text
'ss'          Literal.String
'\n'          Text

'.'           Literal.String
'    '        Text
'ds'          Literal.String
' '           Text
'o'           Literal.String
' '           Text
'a'           Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'd-'          Literal.String
' '           Text
"d\\h'-1'\\(ga" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'D-'          Literal.String
' '           Text
"D\\h'-1'\\(hy" Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'th'          Literal.String
' '           Text
'\\o'         Literal.String.Escape
"'bp'"        Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'Th'          Literal.String
' '           Text
'\\o'         Literal.String.Escape
"'LP'"        Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'ae'          Literal.String
' '           Text
'ae'          Literal.String
'\n'          Text

'.'           Punctuation
'    '        Text
'ds'          Literal.String
' '           Text
'Ae'          Literal.String
' '           Text
'AE'          Literal.String
'\n'          Text

'.'           Punctuation
'\\}'         Literal.String.Escape
'\n'          Text

'.'           Text
'rm'          Keyword
' '           Text
'#['          Literal.String
' '           Text
'#]'          Literal.String
' '           Text
'#H'          Literal.String
' '           Text
'#V'          Literal.String
' '           Text
'#F'          Literal.String
' '           Text
'C'           Literal.String
'\n'          Text

'.'           Punctuation
'\\" ========================================================================' Comment
'\n'          Text

'.'           Punctuation
'\\"'         Comment
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Title'       Literal.String
' '           Text
'"PERLFUNC 1"' Literal.String.Double
'\n'          Text

'.'           Text
'TH'          Keyword
' '           Text
'PERLFUNC'    Literal.String
' '           Text
'1'           Literal.Number
' '           Text
'"2006-01-07"' Literal.String.Double
' '           Text
'"perl v5.8.8"' Literal.String.Double
' '           Text
'"Perl Programmers Reference Guide"' Literal.String.Double
'\n'          Text

'.'           Text
'SH'          Keyword
' '           Text
'"NAME"'      Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"function"'  Literal.String.Double
'\n'          Text

'perlfunc '   Text
'\\-'         Literal.String.Escape
' Perl builtin functions' Text
'\n'          Text

'.'           Text
'SH'          Keyword
' '           Text
'"DESCRIPTION"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Header'      Literal.String
' '           Text
'"DESCRIPTION"' Literal.String.Double
'\n'          Text

'The functions in this section can serve as terms in an expression.' Text
'\n'          Text

'They fall into two major categories: list operators and named unary' Text
'\n'          Text

'operators.  These differ in their precedence relationship with a' Text
'\n'          Text

'following comma.  (See the precedence table in perlop.)  List' Text
'\n'          Text

'operators take more than one argument, while unary operators can never' Text
'\n'          Text

'take more than one argument.  Thus, a comma terminates the argument of' Text
'\n'          Text

'a unary operator, but merely separates the arguments of a list' Text
'\n'          Text

'operator.  A unary operator generally provides a scalar context to its' Text
'\n'          Text

'argument, while a list operator may provide either scalar or list' Text
'\n'          Text

'contexts for its arguments.  If it does both, the scalar arguments will' Text
'\n'          Text

'be first, and the list argument will follow.  (Note that there can ever' Text
'\n'          Text

'be only one such list argument.)  For instance, ' Text
'\\fI'        Literal.String.Escape
'splice()'    Text
'\\fR'        Literal.String.Escape
' has three scalar' Text
'\n'          Text

'arguments followed by a list, whereas ' Text
'\\fI'        Literal.String.Escape
'gethostbyname()' Text
'\\fR'        Literal.String.Escape
' has four scalar' Text
'\n'          Text

'arguments.'  Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'In the syntax descriptions that follow, list operators that expect a' Text
'\n'          Text

'list (and provide list context for the elements of the list) are shown' Text
'\n'          Text

'with '       Text
'\\s'         Literal.String.Escape
'-1LIST'      Text
'\\s'         Literal.String.Escape
'0 as an argument.  Such a list may consist of any combination' Text
'\n'          Text

'of scalar arguments or list values; the list values will be included' Text
'\n'          Text

'in the list as if each individual element were interpolated at that' Text
'\n'          Text

'point in the list, forming a longer single-dimensional list value.' Text
'\n'          Text

'Commas should separate elements of the ' Text
'\\s'         Literal.String.Escape
'-1LIST'      Text
'\\s'         Literal.String.Escape
'0.'          Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'Any function in the list below may be used either with or without' Text
'\n'          Text

'parentheses around its arguments.  (The syntax descriptions omit the' Text
'\n'          Text

'parentheses.)  If you use the parentheses, the simple (but occasionally' Text
'\n'          Text

'surprising) rule is this: It ' Text
'\\fI'        Literal.String.Escape
'looks'       Text
'\\fR'        Literal.String.Escape
' like a function, therefore it ' Text
'\\fI'        Literal.String.Escape
'is'          Text
'\\fR'        Literal.String.Escape
' a'          Text
'\n'          Text

"function, and precedence doesn't matter.  Otherwise it's a list" Text
'\n'          Text

'operator or unary operator, and precedence does matter.  And whitespace' Text
'\n'          Text

"between the function and left parenthesis doesn't count" Text
'\\*'         Literal.String.Escape
'(--so you need to' Text
'\n'          Text

'be careful sometimes:' Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'5'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    print 1+2+4;        # Prints 7.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print(1+2) + 4;     # Prints 3.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print (1+2)+4;      # Also prints 3!' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print +(1+2)+4;     # Prints 7.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print ((1+2)+4);    # Prints 7.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'If you run Perl with the ' Text
'\\fB'        Literal.String.Escape
'\\-'         Literal.String.Escape
'w'           Text
'\\fR'        Literal.String.Escape
' switch it can warn you about this.  For' Text
'\n'          Text

'example, the third line above produces:' Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'2'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    print (...) interpreted as function at - line 1.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    Useless use of integer addition in void context at - line 1.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'A few functions take no arguments at all, and therefore work as neither' Text
'\n'          Text

'unary nor list operators.  These include such functions as ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`time'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'and '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.  For example, ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`time+86_400' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' always means' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`time() + 86_400' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.'           Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'For functions that can be used in either a scalar or list context,' Text
'\n'          Text

'nonabortive failure is generally indicated in a scalar context by' Text
'\n'          Text

'returning the undefined value, and in a list context by returning the' Text
'\n'          Text

'null list.'  Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'Remember the following important rule: There is ' Text
'\\fB'        Literal.String.Escape
'no rule'     Text
'\\fR'        Literal.String.Escape
' that relates' Text
'\n'          Text

'the behavior of an expression in list context to its behavior in scalar' Text
'\n'          Text

'context, or vice versa.  It might do two totally different things.' Text
'\n'          Text

'Each operator and function decides which sort of value it would be most' Text
'\n'          Text

'appropriate to return in scalar context.  Some operators return the' Text
'\n'          Text

'length of the list that would have been returned in list context.  Some' Text
'\n'          Text

'operators return the first value in the list.  Some operators return the' Text
'\n'          Text

'last value in the list.  Some operators return a count of successful' Text
'\n'          Text

'operations.  In general, they do what you want, unless you want' Text
'\n'          Text

'consistency.' Text
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"context"'   Literal.String.Double
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'A named array in scalar context is quite different from what would at' Text
'\n'          Text

"first glance appear to be a list in scalar context.  You can't get a list" Text
'\n'          Text

'like '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`(1,2,3)'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' into being in scalar context, because the compiler knows' Text
'\n'          Text

'the context at compile time.  It would generate the scalar comma operator' Text
'\n'          Text

'there, not the list construction version of the comma.  That means it' Text
'\n'          Text

'was never a list to start with.' Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'In general, functions in Perl that serve as wrappers for system calls' Text
'\n'          Text

'of the same name (like ' Text
'\\fI'        Literal.String.Escape
'chown'       Text
'\\fR'        Literal.String.Escape
'\\|'         Literal.String.Escape
'(2), '       Text
'\\fI'        Literal.String.Escape
'fork'        Text
'\\fR'        Literal.String.Escape
'\\|'         Literal.String.Escape
'(2), '       Text
'\\fI'        Literal.String.Escape
'closedir'    Text
'\\fR'        Literal.String.Escape
'\\|'         Literal.String.Escape
'(2), etc.) all return' Text
'\n'          Text

'true when they succeed and ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`undef'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' otherwise, as is usually mentioned' Text
'\n'          Text

'in the descriptions below.  This is different from the C interfaces,' Text
'\n'          Text

'which return ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'1'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' on failure.  Exceptions to this rule are ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`wait'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`waitpid'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and '      Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syscall'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.  System calls also set the special ' Text
'\\f'         Literal.String.Escape
'(CW$!'       Text
'\\fR'        Literal.String.Escape
'\n'          Text

'variable on failure.  Other functions do not, except accidentally.' Text
'\n'          Text

'.'           Text
'Sh'          Keyword
' '           Text
'"Perl Functions by Category"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"function"'  Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Subsection'  Literal.String
' '           Text
'"Perl Functions by Category"' Literal.String.Double
'\n'          Text

"Here are Perl's functions (including things that look like" Text
'\n'          Text

'functions, like some keywords and named operators)' Text
'\n'          Text

'arranged by category.  Some functions appear in more' Text
'\n'          Text

'than one place.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions for SCALARs or strings"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"scalar string character"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for SCALARs or strings"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chomp'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chop'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chr'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`crypt'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`hex'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`index'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lc'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lcfirst'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`length'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`oct'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ord'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`pack'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`q/STRING/' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`qq/STRING/' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`reverse'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`rindex'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sprintf'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`substr'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`tr///'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`uc'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ucfirst'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`y///'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Regular expressions and pattern matching"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"regular expression regex regexp"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Regular expressions and pattern matching"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`m//'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`pos'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`quotemeta' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`s///'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`split'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`study'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`qr//'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Numeric functions"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"numeric number trigonometric trigonometry"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Numeric functions"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`abs'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`atan2'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`cos'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`exp'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`hex'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`int'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`log'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`oct'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`rand'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sin'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sqrt'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`srand'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'ie'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'.IP'         Literal.String
' '           Text
'"Functions for real @ARRAYs"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'el'          Keyword
' '           Text
'.IP'         Literal.String
' '           Text
'"Functions for real \\f(CW@ARRAYs\\fR"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"array"'     Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for real @ARRAYs"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`pop'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`push'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shift'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`splice'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`unshift'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions for list data"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"list"'      Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for list data"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`grep'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`join'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`map'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`qw/STRING/' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`reverse'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sort'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`unpack'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'ie'          Keyword
' '           Text
'n'           Literal.String
' '           Text
'.IP'         Literal.String
' '           Text
'"Functions for real %HASHes"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'el'          Keyword
' '           Text
'.IP'         Literal.String
' '           Text
'"Functions for real \\f(CW%HASHes\\fR"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"hash"'      Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for real %HASHes"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`delete'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`each'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`exists'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`keys'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`values'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Input and output functions"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"I O input output dbm"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Input and output functions"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`binmode'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`close'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`closedir' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmclose' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`die'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eof'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`fileno'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`flock'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`format'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getc'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`print'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`printf'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`read'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`readdir'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`rewinddir' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`seek'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`seekdir'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`select'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syscall'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sysread'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sysseek'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syswrite' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`tell'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`telldir'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`truncate' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`warn'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`write'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions for fixed length data or records"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for fixed length data or records"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`pack'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`read'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syscall'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sysread'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syswrite' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`unpack'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`vec'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions for filehandles, files, or directories"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"file filehandle directory pipe link symlink"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for filehandles, files, or directories"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CIX'        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chdir'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chmod'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chown'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chroot'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`fcntl'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`glob'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ioctl'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`link'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lstat'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`mkdir'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`open'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`opendir'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`readlink' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`rename'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`rmdir'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`stat'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`symlink'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sysopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`umask'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`unlink'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`utime'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Keywords related to the control flow of your Perl program"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"control flow"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Keywords related to the control flow of your Perl program"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`caller'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`continue' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`die'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`do'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dump'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`exit'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`goto'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`last'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`next'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`redo'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`return'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sub'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`wantarray' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Keywords related to scoping"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Keywords related to scoping"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`caller'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`import'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`local'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`my'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`our'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`package'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`use'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Miscellaneous functions"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Miscellaneous functions"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`defined'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dump'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`formline' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`local'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`my'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`our'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`reset'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`scalar'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`undef'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`wantarray' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions for processes and process groups"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"process pid process id"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions for processes and process groups"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`alarm'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`exec'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`fork'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpgrp'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getppid'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpriority' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`kill'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`pipe'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`qx/STRING/' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setpgrp'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setpriority' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sleep'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`system'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`times'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`wait'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`waitpid'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Keywords related to perl modules"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"module"'    Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Keywords related to perl modules"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`do'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`import'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`no'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`package'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`require'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`use'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Keywords related to classes and object-orientedness"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"object class package"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Keywords related to classes and object-orientedness"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`bless'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmclose' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`package'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ref'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`tie'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`tied'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`untie'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`use'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Low-level socket functions"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"socket sock"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Low-level socket functions"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`accept'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`bind'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`connect'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpeername' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getsockname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getsockopt' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`listen'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`recv'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`send'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setsockopt' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shutdown' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`socket'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`socketpair' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"System V interprocess communication functions"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"IPC System V semaphore shared memory memory message"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"System V interprocess communication functions"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgctl'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgget'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgrcv'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgsnd'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`semctl'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`semget'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`semop'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmctl'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmget'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmread'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmwrite' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Fetching user and group info"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"user group password uid gid passwd  etc passwd"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Fetching user and group info"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endgrent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endhostent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endnetent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getgrent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getgrgid' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getgrnam' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getlogin' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpwnam' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpwuid' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setgrent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Fetching network info"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"network protocol host hostname IP address service"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Fetching network info"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endprotoent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endservent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`gethostbyaddr' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`gethostbyname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`gethostent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getnetbyaddr' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getnetbyname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getnetent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getprotobyname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getprotobynumber' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getprotoent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getservbyname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getservbyport' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getservent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sethostent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setnetent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setprotoent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setservent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Time-related functions"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"time date"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Time-related functions"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`gmtime'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`localtime' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`time'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`times'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions new in perl5"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"perl5"'     Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions new in perl5"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`abs'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`bless'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chomp'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chr'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`exists'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`formline' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`glob'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`import'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lc'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lcfirst'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`map'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`my'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`no'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`our'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`prototype' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`qx'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`qw'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`readline' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`readpipe' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ref'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sub*'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sysopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`tie'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`tied'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`uc'       Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ucfirst'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`untie'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`use'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'* '          Text
'\\-'         Literal.String.Escape
' '           Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sub'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' was a keyword in perl4, but in perl5 it is an' Text
'\n'          Text

'operator, which can be used in expressions.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"Functions obsoleted in perl5"' Literal.String.Double
' '           Text
'4'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"Functions obsoleted in perl5"' Literal.String.Double
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmclose' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'Sh'          Keyword
' '           Text
'"Portability"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"portability Unix portable"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Subsection'  Literal.String
' '           Text
'"Portability"' Literal.String.Double
'\n'          Text

'Perl was born in Unix and can therefore access all common Unix' Text
'\n'          Text

'system calls.  In non-Unix environments, the functionality of some' Text
'\n'          Text

'Unix system calls may not be available, or details of the available' Text
'\n'          Text

'functionality may differ slightly.  The Perl functions affected' Text
'\n'          Text

'by this are:' Text
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'X'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`binmode'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chmod'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chown'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chroot'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`crypt'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmclose' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dbmopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`dump'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endgrent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endhostent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endnetent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endprotoent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`endservent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`exec'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`fcntl'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`flock'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`fork'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getgrent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getgrgid' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`gethostbyname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`gethostent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getlogin' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getnetbyaddr' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getnetbyname' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getnetent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getppid'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpgrp'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpriority' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getprotobynumber' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getprotoent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpwnam' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getpwuid' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getservbyport' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getservent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`getsockopt' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`glob'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`ioctl'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`kill'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`link'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lstat'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgctl'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgget'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgrcv'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`msgsnd'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`open'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`pipe'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`readlink' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`rename'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`select'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`semctl'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`semget'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`semop'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setgrent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sethostent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setnetent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setpgrp'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setpriority' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setprotoent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setpwent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setservent' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`setsockopt' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmctl'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmget'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmread'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`shmwrite' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`socket'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`socketpair' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`stat'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`symlink'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syscall'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sysopen'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`system'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`times'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`truncate' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`umask'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`unlink'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`utime'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`wait'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`waitpid'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'PP'          Keyword
'\n'          Text

'For more information about the portability of these functions, see' Text
'\n'          Text

'perlport and other available platform-specific documentation.' Text
'\n'          Text

'.'           Text
'Sh'          Keyword
' '           Text
'"Alphabetical Listing of Perl Functions"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Subsection'  Literal.String
' '           Text
'"Alphabetical Listing of Perl Functions"' Literal.String.Double
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"\\-X \\s-1FILEHANDLE\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"-r -w -x -o -R -W -X -O -e -z -s -f -d -l -p -S -b -c -t -u -g -k -T -B -M -A -C"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"-X FILEHANDLE"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"\\-X \\s-1EXPR\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"-X EXPR"'   Literal.String.Double
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"\\-X"'      Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"-X"'        Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'A file test, where X is one of the letters listed below.  This unary' Text
'\n'          Text

'operator takes one argument, either a filename or a filehandle, and' Text
'\n'          Text

'tests the associated file to see if something is true about it.  If the' Text
'\n'          Text

'argument is omitted, tests ' Text
'\\f'         Literal.String.Escape
'(CW$_'       Text
'\\fR'        Literal.String.Escape
', except for ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
't'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', which tests ' Text
'\\s'         Literal.String.Escape
'-1STDIN'     Text
'\\s'         Literal.String.Escape
'0.'          Text
'\n'          Text

'Unless otherwise documented, it returns ' Text
'\\f'         Literal.String.Escape
'(CW1'        Text
'\\fR'        Literal.String.Escape
' for true and ' Text
'\\f'         Literal.String.Escape
"(CW''"       Text
'\\fR'        Literal.String.Escape
' for false, or' Text
'\n'          Text

"the undefined value if the file doesn't exist.  Despite the funny" Text
'\n'          Text

'names, precedence is the same as any other named unary operator, and' Text
'\n'          Text

'the argument may be parenthesized like any other unary operator.  The' Text
'\n'          Text

'operator may be any of:' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'4'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -r  File is readable by effective uid/gid.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -w  File is writable by effective uid/gid.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -x  File is executable by effective uid/gid.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -o  File is owned by effective uid.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'4'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -R  File is readable by real uid/gid.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -W  File is writable by real uid/gid.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -X  File is executable by real uid/gid.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -O  File is owned by real uid.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'3'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -e  File exists.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -z  File has zero size (is empty).' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -s  File has nonzero size (returns size in bytes).' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'8'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -f  File is a plain file.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -d  File is a directory.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -l  File is a symbolic link.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -p  File is a named pipe (FIFO), or Filehandle is a pipe.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -S  File is a socket.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -b  File is a block special file.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -c  File is a character special file.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -t  Filehandle is opened to a tty.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'3'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -u  File has setuid bit set.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -g  File has setgid bit set.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -k  File has sticky bit set.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'2'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -T  File is an ASCII text file (heuristic guess).' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -B  File is a "binary" file (opposite of -T).' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'3'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    -M  Script start time minus file modification time, in days.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -A  Same for access time.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    -C  Same for inode change time (Unix, may differ for other platforms)' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Example:'    Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'5'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    while (<>) {' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        chomp;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        next unless -f $_;      # ignore specials' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        #...' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    }'       Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'The interpretation of the file permission operators ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'r'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'R'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'w'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'W'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'x'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and '      Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'X'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' is by default based solely on the mode' Text
'\n'          Text

'of the file and the uids and gids of the user.  There may be other' Text
'\n'          Text

"reasons you can't actually read, write, or execute the file.  Such" Text
'\n'          Text

'reasons may be for example network filesystem access controls, ACLs' Text
'\n'          Text

'(access control lists), read-only filesystems, and unrecognized' Text
'\n'          Text

'executable formats.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Also note that, for the superuser on the local filesystems, the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'r'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'R'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'w'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and '      Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'W'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' tests always return 1, and ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'x'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'X'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' return 1'   Text
'\n'          Text

'if any execute bit is set in the mode.  Scripts run by the superuser' Text
'\n'          Text

'may thus need to do a ' Text
'\\fI'        Literal.String.Escape
'stat()'      Text
'\\fR'        Literal.String.Escape
' to determine the actual mode of the file,' Text
'\n'          Text

'or temporarily set their effective uid to something else.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'If you are using ACLs, there is a pragma called ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`filetest' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' that may'   Text
'\n'          Text

'produce more accurate results than the bare ' Text
'\\fI'        Literal.String.Escape
'stat()'      Text
'\\fR'        Literal.String.Escape
' mode bits.' Text
'\n'          Text

'When under the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
"(C`use filetest 'access'" Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' the above-mentioned filetests' Text
'\n'          Text

'will test whether the permission can (not) be granted using the' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\fI'        Literal.String.Escape
'access()'    Text
'\\fR'        Literal.String.Escape
' family of system calls.  Also note that the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'x'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'X'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' may'        Text
'\n'          Text

'under this pragma return true even if there are no execute permission' Text
'\n'          Text

'bits set (nor any extra execute permission ACLs).  This strangeness is' Text
'\n'          Text

"due to the underlying system calls' definitions.  Read the" Text
'\n'          Text

'documentation for the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`filetest' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' pragma for more information.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Note that '  Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
's/a/b/'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' does not do a negated substitution.  Saying' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'exp($foo)'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' still works as expected, however' Text
'\\*'         Literal.String.Escape
'(--only single letters' Text
'\n'          Text

'following a minus are interpreted as file tests.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'The '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'T'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'B'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' switches work as follows.  The first block or so of the' Text
'\n'          Text

'file is examined for odd characters such as strange control codes or' Text
'\n'          Text

'characters with the high bit set.  If too many strange characters (>30%)' Text
'\n'          Text

"are found, it's a " Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'B'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
" file; otherwise it's a " Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'T'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' file.  Also, any file' Text
'\n'          Text

'containing null in the first block is considered a binary file.  If ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'T'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'or '         Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'B'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' is used on a filehandle, the current ' Text
'\\s'         Literal.String.Escape
'-1IO'        Text
'\\s'         Literal.String.Escape
'0 buffer is examined' Text
'\n'          Text

'rather than the first block.  Both ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'T'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'B'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' return true on a null' Text
'\n'          Text

'file, or a file at ' Text
'\\s'         Literal.String.Escape
'-1EOF'       Text
'\\s'         Literal.String.Escape
'0 when testing a filehandle.  Because you have to' Text
'\n'          Text

'read a file to do the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'T'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' test, on most occasions you want to use a ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'f'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'against the file first, as in ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`next unless ' Text
'\\-'         Literal.String.Escape
'f $file && ' Text
'\\-'         Literal.String.Escape
'T $file'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.'           Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'If any of the file tests (or either the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`stat'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' or '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lstat'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' operators) are given' Text
'\n'          Text

'the special filehandle consisting of a solitary underline, then the stat' Text
'\n'          Text

'structure of the previous file test (or stat operator) is used, saving' Text
'\n'          Text

"a system call.  (This doesn't work with " Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
't'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and you need to remember' Text
'\n'          Text

'that '       Text
'\\fI'        Literal.String.Escape
'lstat()'     Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'l'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' will leave values in the stat structure for the' Text
'\n'          Text

'symbolic link, not the real file.)  (Also, if the stat buffer was filled by' Text
'\n'          Text

'an '         Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`lstat'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' call, '     Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'T'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\-'         Literal.String.Escape
'B'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' will reset it with the results of ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`stat _'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
').'          Text
'\n'          Text

'Example:'    Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'1'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Can do.' Text
'\\e'         Literal.String.Escape
'n" if -r $a || -w _ || -x _;' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'9'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    stat($filename);' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Readable' Text
'\\e'         Literal.String.Escape
'n" if -r _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Writable' Text
'\\e'         Literal.String.Escape
'n" if -w _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Executable' Text
'\\e'         Literal.String.Escape
'n" if -x _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Setuid' Text
'\\e'         Literal.String.Escape
'n" if -u _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Setgid' Text
'\\e'         Literal.String.Escape
'n" if -g _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Sticky' Text
'\\e'         Literal.String.Escape
'n" if -k _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Text' Text
'\\e'         Literal.String.Escape
'n" if -T _;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    print "Binary' Text
'\\e'         Literal.String.Escape
'n" if -B _;' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"abs \\s-1VALUE\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"abs absolute"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"abs VALUE"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"abs"'       Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"abs"'       Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'Returns the absolute value of its argument.' Text
'\n'          Text

'If '         Text
'\\s'         Literal.String.Escape
'-1VALUE'     Text
'\\s'         Literal.String.Escape
'0 is omitted, uses ' Text
'\\f'         Literal.String.Escape
'(CW$_'       Text
'\\fR'        Literal.String.Escape
'.'           Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"accept \\s-1NEWSOCKET\\s0,GENERICSOCKET"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"accept"'    Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"accept NEWSOCKET,GENERICSOCKET"' Literal.String.Double
'\n'          Text

'Accepts an incoming socket connect, just as the ' Text
'\\fI'        Literal.String.Escape
'accept'      Text
'\\fR'        Literal.String.Escape
'\\|'         Literal.String.Escape
'(2) system call' Text
'\n'          Text

'does.  Returns the packed address if it succeeded, false otherwise.' Text
'\n'          Text

'See the example in ' Text
'\\*'         Literal.String.Escape
'(L"Sockets: Client/Server Communication' Text
'\\*'         Literal.String.Escape
'(R" in perlipc.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'On systems that support a close-on-exec flag on files, the flag will' Text
'\n'          Text

'be set for the newly opened file descriptor, as determined by the' Text
'\n'          Text

'value of $^F.  See ' Text
'\\*'         Literal.String.Escape
'(L"$^F'      Text
'\\*'         Literal.String.Escape
'(R" in perlvar.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"alarm \\s-1SECONDS\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"alarm SIGALRM timer"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"alarm SECONDS"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"alarm"'     Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"alarm"'     Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'Arranges to have a ' Text
'\\s'         Literal.String.Escape
'-1SIGALRM'   Text
'\\s'         Literal.String.Escape
'0 delivered to this process after the' Text
'\n'          Text

'specified number of wallclock seconds has elapsed.  If ' Text
'\\s'         Literal.String.Escape
'-1SECONDS'   Text
'\\s'         Literal.String.Escape
'0 is not'    Text
'\n'          Text

'specified, the value stored in ' Text
'\\f'         Literal.String.Escape
'(CW$_'       Text
'\\fR'        Literal.String.Escape
' is used. (On some machines,' Text
'\n'          Text

'unfortunately, the elapsed time may be up to one second less or more' Text
'\n'          Text

'than you specified because of how seconds are counted, and process' Text
'\n'          Text

'scheduling may delay the delivery of the signal even further.)' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Only one timer may be counting at once.  Each call disables the' Text
'\n'          Text

'previous timer, and an argument of ' Text
'\\f'         Literal.String.Escape
'(CW0'        Text
'\\fR'        Literal.String.Escape
' may be supplied to cancel the' Text
'\n'          Text

'previous timer without starting a new one.  The returned value is the' Text
'\n'          Text

'amount of time remaining on the previous timer.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

"For delays of finer granularity than one second, you may use Perl's" Text
'\n'          Text

'four-argument version of ' Text
'\\fI'        Literal.String.Escape
'select()'    Text
'\\fR'        Literal.String.Escape
' leaving the first three arguments' Text
'\n'          Text

'undefined, or you might be able to use the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`syscall'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' interface to' Text
'\n'          Text

'access '     Text
'\\fI'        Literal.String.Escape
'setitimer'   Text
'\\fR'        Literal.String.Escape
'\\|'         Literal.String.Escape
'(2) if your system supports it.  The Time::HiRes' Text
'\n'          Text

'module (from ' Text
'\\s'         Literal.String.Escape
'-1CPAN'      Text
'\\s'         Literal.String.Escape
'0, and starting from Perl 5.8 part of the standard' Text
'\n'          Text

'distribution) may also prove useful.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'It is usually a mistake to intermix ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`alarm'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sleep'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' calls.'     Text
'\n'          Text

'('           Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`sleep'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' may be internally implemented in your system with ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`alarm'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
')'           Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'If you want to use ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`alarm'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' to time out a system call you need to use an' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'/'           Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`die'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
" pair.  You can't rely on the alarm causing the system call to" Text
'\n'          Text

'fail with '  Text
'\\f'         Literal.String.Escape
'(CW$!'       Text
'\\fR'        Literal.String.Escape
' set to '    Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`EINTR'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' because Perl sets up signal handlers to' Text
'\n'          Text

'restart system calls on some systems.  Using ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'/'           Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`die'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' always works,' Text
'\n'          Text

'modulo the caveats given in ' Text
'\\*'         Literal.String.Escape
'(L"Signals'  Text
'\\*'         Literal.String.Escape
'(R" in perlipc.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'13'          Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    eval {'  Text
'\n'          Text

'\\&'         Literal.String.Escape
'        local $SIG{ALRM} = sub { die "alarm' Text
'\\e'         Literal.String.Escape
'n" }; # NB: ' Text
'\\e'         Literal.String.Escape
'n required'  Text
'\n'          Text

'\\&'         Literal.String.Escape
'        alarm $timeout;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        $nread = sysread SOCKET, $buffer, $size;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        alarm 0;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    };'      Text
'\n'          Text

'\\&'         Literal.String.Escape
'    if ($@) {' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        die unless $@ eq "alarm' Text
'\\e'         Literal.String.Escape
'n";   # propagate unexpected errors' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        # timed out' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    }'       Text
'\n'          Text

'\\&'         Literal.String.Escape
'    else {'  Text
'\n'          Text

'\\&'         Literal.String.Escape
"        # didn't" Text
'\n'          Text

'\\&'         Literal.String.Escape
'    }'       Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'For more information see perlipc.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"atan2 Y,X"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"atan2 arctangent tan tangent"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"atan2 Y,X"' Literal.String.Double
'\n'          Text

'Returns the arctangent of Y/X in the range ' Text
'\\-'         Literal.String.Escape
'PI to '      Text
'\\s'         Literal.String.Escape
'-1PI'        Text
'\\s'         Literal.String.Escape
'0.'          Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'For the tangent operation, you may use the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`Math::Trig::tan' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'function, or use the familiar relation:' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'1'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    sub tan { sin($_[0]) / cos($_[0])  }' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Note that atan2(0, 0) is not well' Text
'\\-'         Literal.String.Escape
'defined.'    Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"bind \\s-1SOCKET\\s0,NAME"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"bind"'      Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"bind SOCKET,NAME"' Literal.String.Double
'\n'          Text

'Binds a network address to a socket, just as the bind system call' Text
'\n'          Text

'does.  Returns true if it succeeded, false otherwise.  ' Text
'\\s'         Literal.String.Escape
'-1NAME'      Text
'\\s'         Literal.String.Escape
'0 should be a' Text
'\n'          Text

'packed address of the appropriate type for the socket.  See the examples in' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\*'         Literal.String.Escape
'(L"Sockets: Client/Server Communication' Text
'\\*'         Literal.String.Escape
'(R" in perlipc.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"binmode \\s-1FILEHANDLE\\s0, \\s-1LAYER\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"binmode binary text DOS Windows"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"binmode FILEHANDLE, LAYER"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"binmode \\s-1FILEHANDLE\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"binmode FILEHANDLE"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'Arranges for ' Text
'\\s'         Literal.String.Escape
'-1FILEHANDLE' Text
'\\s'         Literal.String.Escape
'0 to be read or written in ' Text
'\\*'         Literal.String.Escape
'(L"binary'   Text
'\\*'         Literal.String.Escape
'(R" or '     Text
'\\*'         Literal.String.Escape
'(L"text'     Text
'\\*'         Literal.String.Escape
'(R"'         Text
'\n'          Text

'mode on systems where the run-time libraries distinguish between' Text
'\n'          Text

'binary and text files.  If ' Text
'\\s'         Literal.String.Escape
'-1FILEHANDLE' Text
'\\s'         Literal.String.Escape
'0 is an expression, the value is' Text
'\n'          Text

'taken as the name of the filehandle.  Returns true on success,' Text
'\n'          Text

'otherwise it returns ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`undef'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' and sets '  Text
'\\f'         Literal.String.Escape
'(CW$!'       Text
'\\fR'        Literal.String.Escape
' (errno).'   Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'On some systems (in general, ' Text
'\\s'         Literal.String.Escape
'-1DOS'       Text
'\\s'         Literal.String.Escape
'0 and Windows-based systems) ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
'\n'          Text

"is necessary when you're not working with a text file.  For the sake" Text
'\n'          Text

'of portability it is a good idea to always use it when appropriate,' Text
'\n'          Text

"and to never use it when it isn't appropriate.  Also, people can" Text
'\n'          Text

'set their I/O to be by default ' Text
'\\s'         Literal.String.Escape
'-1UTF'       Text
'\\-'         Literal.String.Escape
'8'           Text
'\\s'         Literal.String.Escape
'0 encoded Unicode, not bytes.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'In other words: regardless of platform, use ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
' on binary data,' Text
'\n'          Text

'like for example images.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'If '         Text
'\\s'         Literal.String.Escape
'-1LAYER'     Text
'\\s'         Literal.String.Escape
'0 is present it is a single string, but may contain multiple' Text
'\n'          Text

'directives. The directives alter the behaviour of the file handle.' Text
'\n'          Text

'When '       Text
'\\s'         Literal.String.Escape
'-1LAYER'     Text
'\\s'         Literal.String.Escape
'0 is present using binmode on text file makes sense.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'If '         Text
'\\s'         Literal.String.Escape
'-1LAYER'     Text
'\\s'         Literal.String.Escape
'0 is omitted or specified as ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:raw'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' the filehandle is made' Text
'\n'          Text

'suitable for passing binary data. This includes turning off possible ' Text
'\\s'         Literal.String.Escape
'-1CRLF'      Text
'\\s'         Literal.String.Escape
'0'           Text
'\n'          Text

'translation and marking it as bytes (as opposed to Unicode characters).' Text
'\n'          Text

'Note that, despite what may be implied in ' Text
'\\fI'        Literal.String.Escape
'\\*'         Literal.String.Escape
'(L"Programming Perl' Text
'\\*'         Literal.String.Escape
'(R"'         Text
'\\fR'        Literal.String.Escape
' (the'       Text
'\n'          Text

'Camel) or elsewhere, ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:raw'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' is '        Text
'\\fI'        Literal.String.Escape
'not'         Text
'\\fR'        Literal.String.Escape
' the simply inverse of ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:crlf'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'\\&'         Literal.String.Escape
'\\*'         Literal.String.Escape
'(-- other layers which would affect binary nature of the stream are' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\fI'        Literal.String.Escape
'also'        Text
'\\fR'        Literal.String.Escape
' disabled. See PerlIO, perlrun and the discussion about the' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\s'         Literal.String.Escape
'-1PERLIO'    Text
'\\s'         Literal.String.Escape
'0 environment variable.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'The '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:bytes'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', '          Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:crlf'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and '      Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:utf8'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and any other directives of the' Text
'\n'          Text

'form '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:...'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', are called I/O ' Text
'\\fI'        Literal.String.Escape
'layers'      Text
'\\fR'        Literal.String.Escape
'.  The '     Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`open'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' pragma can be used to' Text
'\n'          Text

'establish default I/O layers.  See open.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'\\&'         Literal.String.Escape
'\\fI'        Literal.String.Escape
'The '        Text
'\\s'         Literal.String.Escape
'-1LAYER'     Text
'\\s'         Literal.String.Escape
'0 parameter of the ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fI'        Literal.String.Escape
' function is described as ' Text
'\\*'         Literal.String.Escape
'(L"'         Text
'\\s'         Literal.String.Escape
'-1DISCIPLINE' Text
'\\s'         Literal.String.Escape
'0'           Text
'\\*'         Literal.String.Escape
'(R"'         Text
'\n'          Text

'in '         Text
'\\*'         Literal.String.Escape
'(L"Programming Perl, 3rd Edition' Text
'\\*'         Literal.String.Escape
'(R".  However, since the publishing of this' Text
'\n'          Text

'book, by many known as ' Text
'\\*'         Literal.String.Escape
'(L"Camel '   Text
'\\s'         Literal.String.Escape
'-1III'       Text
'\\s'         Literal.String.Escape
'0'           Text
'\\*'         Literal.String.Escape
'(R", the consensus of the naming of this' Text
'\n'          Text

'functionality has moved from ' Text
'\\*'         Literal.String.Escape
'(L"discipline' Text
'\\*'         Literal.String.Escape
'(R" to '     Text
'\\*'         Literal.String.Escape
'(L"layer'    Text
'\\*'         Literal.String.Escape
'(R".  All documentation' Text
'\n'          Text

'of this version of Perl therefore refers to ' Text
'\\*'         Literal.String.Escape
'(L"layers'   Text
'\\*'         Literal.String.Escape
'(R" rather than to' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\*'         Literal.String.Escape
'(L"disciplines' Text
'\\*'         Literal.String.Escape
'(R".  Now back to the regularly scheduled documentation...' Text
'\\fR'        Literal.String.Escape
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'To mark '    Text
'\\s'         Literal.String.Escape
'-1FILEHANDLE' Text
'\\s'         Literal.String.Escape
'0 as '       Text
'\\s'         Literal.String.Escape
'-1UTF'       Text
'\\-'         Literal.String.Escape
'8'           Text
'\\s'         Literal.String.Escape
'0, use '     Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:utf8'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.'           Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'In general, ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
' should be called after ' Text
'\\fI'        Literal.String.Escape
'open()'      Text
'\\fR'        Literal.String.Escape
' but before any I/O' Text
'\n'          Text

'is done on the filehandle.  Calling ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
' will normally flush any' Text
'\n'          Text

'pending buffered output data (and perhaps pending input data) on the' Text
'\n'          Text

'handle.  An exception to this is the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:encoding' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' layer that' Text
'\n'          Text

'changes the default character encoding of the handle, see open.' Text
'\n'          Text

'The '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:encoding' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' layer sometimes needs to be called in' Text
'\n'          Text

'mid'         Text
'\\-'         Literal.String.Escape
"stream, and it doesn't flush the stream.  The " Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:encoding' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'also implicitly pushes on top of itself the ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`:utf8'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' layer because' Text
'\n'          Text

'internally Perl will operate on ' Text
'\\s'         Literal.String.Escape
'-1UTF'       Text
'\\-'         Literal.String.Escape
'8'           Text
'\\s'         Literal.String.Escape
'0 encoded Unicode characters.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'The operating system, device drivers, C libraries, and Perl run-time' Text
'\n'          Text

'system all work together to let the programmer treat a single' Text
'\n'          Text

'character (' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'n'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
') as the line terminator, irrespective of the external' Text
'\n'          Text

'representation.  On many operating systems, the native text file' Text
'\n'          Text

'representation matches the internal representation, but on some' Text
'\n'          Text

'platforms the external representation of ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'n'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' is made up of more than' Text
'\n'          Text

'one character.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Mac '        Text
'\\s'         Literal.String.Escape
'-1OS'        Text
'\\s'         Literal.String.Escape
'0, all variants of Unix, and Stream_LF files on ' Text
'\\s'         Literal.String.Escape
'-1VMS'       Text
'\\s'         Literal.String.Escape
'0 use a single' Text
'\n'          Text

'character to end each line in the external representation of text (even' Text
'\n'          Text

'though that single character is ' Text
'\\s'         Literal.String.Escape
'-1CARRIAGE'  Text
'\\s'         Literal.String.Escape
'0 '          Text
'\\s'         Literal.String.Escape
'-1RETURN'    Text
'\\s'         Literal.String.Escape
'0 on Mac '   Text
'\\s'         Literal.String.Escape
'-1OS'        Text
'\\s'         Literal.String.Escape
'0 and '      Text
'\\s'         Literal.String.Escape
'-1LINE'      Text
'\\s'         Literal.String.Escape
'0 '          Text
'\\s'         Literal.String.Escape
'-1FEED'      Text
'\\s'         Literal.String.Escape
'0'           Text
'\n'          Text

'on Unix and most ' Text
'\\s'         Literal.String.Escape
'-1VMS'       Text
'\\s'         Literal.String.Escape
'0 files). In other systems like ' Text
'\\s'         Literal.String.Escape
'-1OS/2'      Text
'\\s'         Literal.String.Escape
'0, '         Text
'\\s'         Literal.String.Escape
'-1DOS'       Text
'\\s'         Literal.String.Escape
'0 and the'   Text
'\n'          Text

'various flavors of MS-Windows your program sees a ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'n'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' as a simple ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'cJ'          Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
','           Text
'\n'          Text

"but what's stored in text files are the two characters " Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'cM'          Text
'\\e'         Literal.String.Escape
'cJ'          Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.  That'     Text
'\n'          Text

"means that, if you don't use " Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
' on these systems, ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'cM'          Text
'\\e'         Literal.String.Escape
'cJ'          Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'sequences on disk will be converted to ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'n'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' on input, and any ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'n'           Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' in'         Text
'\n'          Text

'your program will be converted back to ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'cM'          Text
'\\e'         Literal.String.Escape
'cJ'          Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' on output.  This is what' Text
'\n'          Text

'you want for text files, but it can be disastrous for binary files.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Another consequence of using ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
' (on some systems) is that' Text
'\n'          Text

'special end-of-file markers will be seen as part of the data stream.' Text
'\n'          Text

'For systems from the Microsoft family this means that if your binary' Text
'\n'          Text

'data contains ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`'         Text
'\\e'         Literal.String.Escape
'cZ'          Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', the I/O subsystem will regard it as the end of' Text
'\n'          Text

'the file, unless you use ' Text
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
'.'           Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'\\&'         Literal.String.Escape
'\\fI'        Literal.String.Escape
'binmode()'   Text
'\\fR'        Literal.String.Escape
' is not only important for ' Text
'\\fI'        Literal.String.Escape
'readline()'  Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\fI'        Literal.String.Escape
'print()'     Text
'\\fR'        Literal.String.Escape
' operations,' Text
'\n'          Text

'but also when using ' Text
'\\fI'        Literal.String.Escape
'read()'      Text
'\\fR'        Literal.String.Escape
', '          Text
'\\fI'        Literal.String.Escape
'seek()'      Text
'\\fR'        Literal.String.Escape
', '          Text
'\\fI'        Literal.String.Escape
'sysread()'   Text
'\\fR'        Literal.String.Escape
', '          Text
'\\fI'        Literal.String.Escape
'syswrite()'  Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\fI'        Literal.String.Escape
'tell()'      Text
'\\fR'        Literal.String.Escape
'\n'          Text

'(see perlport for more details).  See the ' Text
'\\f'         Literal.String.Escape
'(CW$/'       Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`$'        Text
'\\e'         Literal.String.Escape
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' variables'  Text
'\n'          Text

'in perlvar for how to manually set your input and output' Text
'\n'          Text

'line-termination sequences.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"bless \\s-1REF\\s0,CLASSNAME"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"bless"'     Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"bless REF,CLASSNAME"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"bless \\s-1REF\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"bless REF"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'This function tells the thingy referenced by ' Text
'\\s'         Literal.String.Escape
'-1REF'       Text
'\\s'         Literal.String.Escape
'0 that it is now an object' Text
'\n'          Text

'in the '     Text
'\\s'         Literal.String.Escape
'-1CLASSNAME' Text
'\\s'         Literal.String.Escape
'0 package.  If ' Text
'\\s'         Literal.String.Escape
'-1CLASSNAME' Text
'\\s'         Literal.String.Escape
'0 is omitted, the current package' Text
'\n'          Text

'is used.  Because a ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`bless'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' is often the last thing in a constructor,' Text
'\n'          Text

'it returns the reference for convenience.  Always use the two-argument' Text
'\n'          Text

'version if a derived class might inherit the function doing the blessing.' Text
'\n'          Text

'See perltoot and perlobj for more about the blessing (and blessings)' Text
'\n'          Text

'of objects.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Consider always blessing objects in CLASSNAMEs that are mixed case.' Text
'\n'          Text

'Namespaces with all lowercase names are considered reserved for' Text
'\n'          Text

'Perl pragmata.  Builtin types have all uppercase names. To prevent' Text
'\n'          Text

'confusion, you may wish to avoid such package names as well.  Make sure' Text
'\n'          Text

'that '       Text
'\\s'         Literal.String.Escape
'-1CLASSNAME' Text
'\\s'         Literal.String.Escape
'0 is a true value.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'See '        Text
'\\*'         Literal.String.Escape
'(L"Perl Modules' Text
'\\*'         Literal.String.Escape
'(R" in perlmod.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"caller \\s-1EXPR\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"caller call stack stack stack trace"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"caller EXPR"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"caller"'    Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"caller"'    Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'Returns the context of the current subroutine call.  In scalar context,' Text
'\n'          Text

"returns the caller's package name if there is a caller, that is, if" Text
'\n'          Text

"we're in a subroutine or " Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' or '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`require'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', and the undefined value' Text
'\n'          Text

'otherwise.  In list context, returns' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'1'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    ($package, $filename, $line) = caller;' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'With '       Text
'\\s'         Literal.String.Escape
'-1EXPR'      Text
'\\s'         Literal.String.Escape
'0, it returns some extra information that the debugger uses to' Text
'\n'          Text

'print a stack trace.  The value of ' Text
'\\s'         Literal.String.Escape
'-1EXPR'      Text
'\\s'         Literal.String.Escape
'0 indicates how many call frames' Text
'\n'          Text

'to go back before the current one.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'2'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    ($package, $filename, $line, $subroutine, $hasargs,' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    $wantarray, $evaltext, $is_require, $hints, $bitmask) = caller($i);' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Here '       Text
'\\f'         Literal.String.Escape
'(CW$subroutine' Text
'\\fR'        Literal.String.Escape
' may be '    Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`(eval)'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' if the frame is not a subroutine' Text
'\n'          Text

'call, but an ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.  In such a case additional elements ' Text
'\\f'         Literal.String.Escape
'(CW$evaltext' Text
'\\fR'        Literal.String.Escape
' and'        Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW$is_require' Text
'\\fR'        Literal.String.Escape
' are set: '  Text
'\\f'         Literal.String.Escape
'(CW$is_require' Text
'\\fR'        Literal.String.Escape
' is true if the frame is created by a' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`require'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' or '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`use'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' statement, ' Text
'\\f'         Literal.String.Escape
'(CW$evaltext' Text
'\\fR'        Literal.String.Escape
' contains the text of the' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval EXPR' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' statement.  In particular, for an ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval BLOCK' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' statement,' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW$filename' Text
'\\fR'        Literal.String.Escape
' is '        Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`(eval)'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
', but '      Text
'\\f'         Literal.String.Escape
'(CW$evaltext' Text
'\\fR'        Literal.String.Escape
' is undefined.  (Note also that' Text
'\n'          Text

'each '       Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`use'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' statement creates a ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`require'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' frame inside an ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`eval EXPR' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'\n'          Text

'frame.)  '   Text
'\\f'         Literal.String.Escape
'(CW$subroutine' Text
'\\fR'        Literal.String.Escape
' may also be ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`(unknown)' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' if this particular' Text
'\n'          Text

'subroutine happens to have been deleted from the symbol table.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW$hasargs' Text
'\\fR'        Literal.String.Escape
' is true if a new instance of ' Text
'\\f'         Literal.String.Escape
'(CW@_'       Text
'\\fR'        Literal.String.Escape
' was set up for the frame.' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW$hints'   Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW$bitmask' Text
'\\fR'        Literal.String.Escape
' contain pragmatic hints that the caller was' Text
'\n'          Text

'compiled with.  The ' Text
'\\f'         Literal.String.Escape
'(CW$hints'   Text
'\\fR'        Literal.String.Escape
' and '       Text
'\\f'         Literal.String.Escape
'(CW$bitmask' Text
'\\fR'        Literal.String.Escape
' values are subject to change' Text
'\n'          Text

'between versions of Perl, and are not meant for external use.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Furthermore, when called from within the ' Text
'\\s'         Literal.String.Escape
'-1DB'        Text
'\\s'         Literal.String.Escape
'0 package, caller returns more' Text
'\n'          Text

'detailed information: it sets the list variable ' Text
'\\f'         Literal.String.Escape
'(CW@DB::args' Text
'\\fR'        Literal.String.Escape
' to be the'  Text
'\n'          Text

'arguments with which the subroutine was invoked.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'Be aware that the optimizer might have optimized call frames away before' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`caller'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' had a chance to get the information.  That means that ' Text
'\\f'         Literal.String.Escape
'(CWcaller(N)' Text
'\\fR'        Literal.String.Escape
'\n'          Text

'might not return information about the call frame you expect it do, for' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`N > 1'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.  In particular, ' Text
'\\f'         Literal.String.Escape
'(CW@DB::args' Text
'\\fR'        Literal.String.Escape
' might have information from the' Text
'\n'          Text

'previous time ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`caller'   Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' was called.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chdir \\s-1EXPR\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"chdir cd"'  Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chdir EXPR"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chdir \\s-1FILEHANDLE\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chdir FILEHANDLE"' Literal.String.Double
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chdir \\s-1DIRHANDLE\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chdir DIRHANDLE"' Literal.String.Double
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chdir"'     Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chdir"'     Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'Changes the working directory to ' Text
'\\s'         Literal.String.Escape
'-1EXPR'      Text
'\\s'         Literal.String.Escape
'0, if possible. If ' Text
'\\s'         Literal.String.Escape
'-1EXPR'      Text
'\\s'         Literal.String.Escape
'0 is omitted,' Text
'\n'          Text

'changes to the directory specified by ' Text
'\\f'         Literal.String.Escape
'(CW$ENV{HOME}' Text
'\\fR'        Literal.String.Escape
', if set; if not,' Text
'\n'          Text

'changes to the directory specified by ' Text
'\\f'         Literal.String.Escape
'(CW$ENV{LOGDIR}' Text
'\\fR'        Literal.String.Escape
'. (Under '   Text
'\\s'         Literal.String.Escape
'-1VMS'       Text
'\\s'         Literal.String.Escape
'0, the'      Text
'\n'          Text

'variable '   Text
'\\f'         Literal.String.Escape
'(CW$ENV{SYS$LOGIN}' Text
'\\fR'        Literal.String.Escape
' is also checked, and used if it is set.) If' Text
'\n'          Text

'neither is set, ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`chdir'    Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' does nothing. It returns true upon success,' Text
'\n'          Text

'false otherwise. See the example under ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`die'      Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'.'           Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'On systems that support fchdir, you might pass a file handle or' Text
'\n'          Text

"directory handle as argument.  On systems that don't support fchdir," Text
'\n'          Text

'passing handles produces a fatal error at run time.' Text
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chmod \\s-1LIST\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"chmod permission mode"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chmod LIST"' Literal.String.Double
'\n'          Text

'Changes the permissions of a list of files.  The first element of the' Text
'\n'          Text

'list must be the numerical mode, which should probably be an octal' Text
'\n'          Text

'number, and which definitely should ' Text
'\\fI'        Literal.String.Escape
'not'         Text
'\\fR'        Literal.String.Escape
' be a string of octal digits:' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW0644'     Text
'\\fR'        Literal.String.Escape
' is okay, '  Text
'\\f'         Literal.String.Escape
"(CW'0644'"   Text
'\\fR'        Literal.String.Escape
' is not.  Returns the number of files' Text
'\n'          Text

'successfully changed.  See also ' Text
'\\*'         Literal.String.Escape
'(L"oct'      Text
'\\*'         Literal.String.Escape
'(R", if all you have is a string.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'6'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
"    $cnt = chmod 0755, 'foo', 'bar';" Text
'\n'          Text

'\\&'         Literal.String.Escape
'    chmod 0755, @executables;' Text
'\n'          Text

'\\&'         Literal.String.Escape
"    $mode = '0644'; chmod $mode, 'foo';      # !!! sets mode to" Text
'\n'          Text

'\\&'         Literal.String.Escape
'                                             # --w----r-T' Text
'\n'          Text

'\\&'         Literal.String.Escape
"    $mode = '0644'; chmod oct($mode), 'foo'; # this is better" Text
'\n'          Text

'\\&'         Literal.String.Escape
"    $mode = 0644;   chmod $mode, 'foo';      # this is best" Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'On systems that support fchmod, you might pass file handles among the' Text
'\n'          Text

"files.  On systems that don't support fchmod, passing file handles" Text
'\n'          Text

'produces a fatal error at run time.' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'3'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    open(my $fh, "<", "foo");' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    my $perm = (stat $fh)[2] & 07777;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    chmod($perm | 0600, $fh);' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'You can also import the symbolic ' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`S_I*'     Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' constants from the Fcntl' Text
'\n'          Text

'module:'     Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'1'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
"    use Fcntl ':mode';" Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'2'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    chmod S_IRWXU|S_IRGRP|S_IXGRP|S_IROTH|S_IXOTH, @executables;' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    # This is identical to the chmod 0755 of the above example.' Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chomp \\s-1VARIABLE\\s0"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Xref'        Literal.String
' '           Text
'"chomp INPUT_RECORD_SEPARATOR $ newline eol"' Literal.String.Double
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chomp VARIABLE"' Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
' '           Text
'0'           Literal.Number
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chomp( \\s-1LIST\\s0 )"' Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chomp( LIST )"' Literal.String.Double
'\n'          Text

'.'           Text
'IP'          Keyword
' '           Text
'"chomp"'     Literal.String.Double
' '           Text
'8'           Literal.Number
'\n'          Text

'.'           Text
'IX'          Keyword
' '           Text
'Item'        Literal.String
' '           Text
'"chomp"'     Literal.String.Double
'\n'          Text

'.'           Text
'PD'          Keyword
'\n'          Text

'This safer version of ' Text
'\\*'         Literal.String.Escape
'(L"chop'     Text
'\\*'         Literal.String.Escape
'(R" removes any trailing string' Text
'\n'          Text

'that corresponds to the current value of ' Text
'\\f'         Literal.String.Escape
'(CW$/'       Text
'\\fR'        Literal.String.Escape
' (also known as' Text
'\n'          Text

'\\&'         Literal.String.Escape
'\\f'         Literal.String.Escape
'(CW$INPUT_RECORD_SEPARATOR' Text
'\\fR'        Literal.String.Escape
' in the '    Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`English'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
' module).  It returns the total' Text
'\n'          Text

"number of characters removed from all its arguments.  It's often used to" Text
'\n'          Text

"remove the newline from the end of an input record when you're worried" Text
'\n'          Text

'that the final record may be missing its newline.  When in paragraph' Text
'\n'          Text

'mode ('      Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`$/ = ""'  Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
'), it removes all trailing newlines from the string.' Text
'\n'          Text

'When in slurp mode (' Text
'\\f'         Literal.String.Escape
'(CW'         Text
'\\*'         Literal.String.Escape
'(C`$/ = undef' Text
'\\*'         Literal.String.Escape
"(C'"         Text
'\\fR'        Literal.String.Escape
') or fixed-length record mode (' Text
'\\f'         Literal.String.Escape
'(CW$/'       Text
'\\fR'        Literal.String.Escape
' is'         Text
'\n'          Text

'a reference to an integer or the like, see perlvar) ' Text
'\\fI'        Literal.String.Escape
'chomp()'     Text
'\\fR'        Literal.String.Escape
" won't"      Text
'\n'          Text

'remove anything.' Text
'\n'          Text

'If '         Text
'\\s'         Literal.String.Escape
'-1VARIABLE'  Text
'\\s'         Literal.String.Escape
'0 is omitted, it chomps ' Text
'\\f'         Literal.String.Escape
'(CW$_'       Text
'\\fR'        Literal.String.Escape
'.  Example:' Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'.'           Text
'Vb'          Keyword
' '           Text
'5'           Literal.Number
'\n'          Text

'\\&'         Literal.String.Escape
'    while (<>) {' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        chomp;  # avoid ' Text
'\\e'         Literal.String.Escape
'n on last field' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        @array = split(/:/);' Text
'\n'          Text

'\\&'         Literal.String.Escape
'        # ...' Text
'\n'          Text

'\\&'         Literal.String.Escape
'    }'       Text
'\n'          Text

'.'           Text
'Ve'          Keyword
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text

'If '         Text
'\\s'         Literal.String.Escape
'-1VARIABLE'  Text
'\\s'         Literal.String.Escape
"0 is a hash, it chomps the hash's values, but not its keys." Text
'\n'          Text

'.'           Text
'Sp'          Keyword
'\n'          Text
