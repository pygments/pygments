'#!/usr/bin/scala' Comment.Hashbang
'\n\n'        Text

'// Comments\n' Comment.Single

'/*'          Comment.Multiline
' Comment block ' Comment.Multiline
'*/'          Comment.Multiline
'\n'          Text

'/*'          Comment.Multiline
' Multi-line \n ' Comment.Multiline
'*'           Comment.Multiline
' comment block\n ' Comment.Multiline
'*/'          Comment.Multiline
'\n'          Text

'/*'          Comment.Multiline
'  '          Comment.Multiline
'/*'          Comment.Multiline
'*/'          Comment.Multiline
' '           Comment.Multiline
'/*'          Comment.Multiline
'*'           Comment.Multiline
' '           Comment.Multiline
'*/'          Comment.Multiline
' '           Comment.Multiline
'/*'          Comment.Multiline
' comments within comments ' Comment.Multiline
'*/'          Comment.Multiline
' '           Comment.Multiline
'*/'          Comment.Multiline
'\n'          Text

'/*'          Comment.Multiline
'*'           Comment.Multiline
'   '         Comment.Multiline
'/*'          Comment.Multiline
' '           Comment.Multiline
'*/'          Comment.Multiline
' '           Comment.Multiline
'/*'          Comment.Multiline
'*'           Comment.Multiline
' '           Comment.Multiline
'*'           Comment.Multiline
'*/'          Comment.Multiline
' '           Comment.Multiline
'*'           Comment.Multiline
'*/'          Comment.Multiline
'\n'          Text

'// /* Commented-out comment block\n' Comment.Single

'// Line comment\n' Comment.Single

'\n'          Text

'// Imports\n' Comment.Single

'import'      Keyword
' '           Text
'// This is incorrect Scala but can still be highlighted correctly\n' Comment.Single

''            Text
'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'y'           Name
'}'           Punctuation
' '           Text
'// Test comment\n' Comment.Single

''            Text
'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'}'           Punctuation
' '           Text
'// This is incorrect Scala but can still be highlighted correctly\n' Comment.Single

''            Text
'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'`test-name`' Name
'}'           Punctuation
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'given'       Keyword
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'given'       Keyword
' '           Text
'a'           Name
'}'           Punctuation
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
','           Punctuation
' '           Text
'y'           Name
'}'           Punctuation
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'_'           Name
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'x'           Name
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'x'           Name.Namespace
'.'           Punctuation
'y'           Name.Namespace
'.'           Punctuation
'z'           Name
'\n'          Text

'import'      Keyword
' '           Text
'java'        Name.Namespace
'.'           Punctuation
'io'          Name.Namespace
'.'           Punctuation
'{'           Punctuation
'File'        Name.Class
','           Punctuation
' '           Text
'IOException' Name.Class
','           Punctuation
' '           Text
'FileNotFoundException' Name.Class
'}'           Punctuation
'\n'          Text

'import'      Keyword
' '           Text
'java'        Name.Namespace
'.'           Punctuation
'io'          Name.Namespace
'.'           Punctuation
'File'        Name.Class
'\n'          Text

'import'      Keyword
' '           Text
'scala'       Name.Namespace
'.'           Punctuation
'math'        Name.Namespace
'.'           Punctuation
'{'           Punctuation
'given'       Keyword
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'Int'         Name.Class
']'           Punctuation
'}'           Punctuation
'\n'          Text

'import'      Keyword
' '           Text
'scala'       Name.Namespace
'.'           Punctuation
'math'        Name.Namespace
'.'           Punctuation
'{'           Punctuation
'given'       Keyword
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'?'           Name
']'           Punctuation
'}'           Punctuation
'\n'          Text

'import'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'givenSomething' Name
'\n'          Text

'import'      Keyword
' '           Text
'givenPackage' Name
'\n'          Text

'\n'          Text

'// Exports\n' Comment.Single

'export'      Keyword
' '           Text
'// This is incorrect Scala but can still be highlighted correctly\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'_'           Name
'\n'          Text

'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'x'           Name
' '           Text
'// Test comment\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'x'           Name.Namespace
'.'           Punctuation
'y'           Name.Namespace
'.'           Punctuation
'z'           Name
' '           Text
'// Test comment\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
','           Punctuation
' '           Text
'y'           Name
'}'           Punctuation
'\n'          Text

'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'y'           Name
'}'           Punctuation
'\n'          Text

'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'}'           Punctuation
' '           Text
'// This is incorrect Scala but can still be highlighted correctly\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'`test-name`' Name
'}'           Punctuation
' '           Text
'// Test comment\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'given'       Keyword
'\n'          Text

''            Text
'export'      Keyword
' '           Text
'given'       Keyword
' '           Text
'a'           Name
' '           Text
'// Test comment\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'given'       Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'x'           Name
' '           Text
'// Test comment\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'given'       Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'_'           Name
'\n'          Text

'export'      Keyword
' '           Text
'given'       Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
','           Punctuation
' '           Text
'y'           Name
'}'           Punctuation
' '           Text
'// Test comment\n' Comment.Single

''            Text
'export'      Keyword
' '           Text
'given'       Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'y'           Name
'}'           Punctuation
'\n'          Text

'export'      Keyword
' '           Text
'given'       Keyword
' '           Text
'a'           Name.Namespace
'.'           Punctuation
'{'           Punctuation
'x'           Name
' '           Text
'=>'          Operator
' '           Text
'`test-name`' Name
'}'           Punctuation
'\n'          Text

'  '          Text
'export'      Keyword
' '           Text
'scanUnit'    Name.Namespace
'.'           Punctuation
'scan'        Name
'\n'          Text

'  '          Text
'export'      Keyword
' '           Text
'printUnit'   Name.Namespace
'.'           Punctuation
'{'           Punctuation
'status'      Name
' '           Text
'=>'          Operator
' '           Text
'_'           Name
','           Punctuation
' '           Text
'_'           Name
'}'           Punctuation
'\n'          Text

'\n'          Text

'// Package declarations\n' Comment.Single

'package'     Keyword
'\n'          Text

''            Text
'package'     Keyword
' '           Text
'com'         Name
'\n'          Text

'package'     Keyword
' '           Text
'com'         Name.Namespace
'.'           Punctuation
'example'     Name
'\n'          Text

'\n'          Text

'// Literals\n' Comment.Single

'true'        Keyword.Constant
' '           Text
'false'       Keyword.Constant
' '           Text
'null'        Keyword.Constant
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
' '           Text
'4'           Literal.Number.Integer
'\n'          Text

'1L'          Literal.Number.Integer.Long
' '           Text
'1l'          Literal.Number.Integer.Long
' '           Text
'10L'         Literal.Number.Integer.Long
' '           Text
'12123123L'   Literal.Number.Integer.Long
'\n'          Text

'3.0'         Literal.Number.Float
' '           Text
'12.345'      Literal.Number.Float
'\n'          Text

'3f'          Literal.Number.Float
' '           Text
'3.0f'        Literal.Number.Float
' '           Text
'3F'          Literal.Number.Float
' '           Text
'3.0F'        Literal.Number.Float
'\n'          Text

'3d'          Literal.Number.Float
' '           Text
'3.0d'        Literal.Number.Float
' '           Text
'3D'          Literal.Number.Float
' '           Text
'3.0D'        Literal.Number.Float
'\n'          Text

'110_222_795_799.99' Literal.Number.Float
' '           Text
'110.9499_999' Literal.Number.Float
' '           Text
'2_000.343_999e561_100' Literal.Number.Float
'\n'          Text

'1e12'        Literal.Number.Float
' '           Text
'1e+34'       Literal.Number.Float
' '           Text
'1e-56'       Literal.Number.Float
' '           Text
'1e12f'       Literal.Number.Float
' '           Text
'1e+34f'      Literal.Number.Float
' '           Text
'1e-56f'      Literal.Number.Float
' '           Text
'1e12d'       Literal.Number.Float
' '           Text
'1e+34d'      Literal.Number.Float
' '           Text
'1e-56d'      Literal.Number.Float
'\n'          Text

'1E12'        Literal.Number.Float
' '           Text
'1E+34'       Literal.Number.Float
' '           Text
'1E-56'       Literal.Number.Float
' '           Text
'1E12f'       Literal.Number.Float
' '           Text
'1E+34f'      Literal.Number.Float
' '           Text
'1E-56f'      Literal.Number.Float
' '           Text
'1E12d'       Literal.Number.Float
' '           Text
'1E+34d'      Literal.Number.Float
' '           Text
'1E-56d'      Literal.Number.Float
'\n'          Text

'.1e12'       Literal.Number.Float
' '           Text
'.1e+34'      Literal.Number.Float
' '           Text
'.1e-56'      Literal.Number.Float
' '           Text
'.1e12f'      Literal.Number.Float
' '           Text
'.1e+34f'     Literal.Number.Float
' '           Text
'.1e-56f'     Literal.Number.Float
' '           Text
'.1e12d'      Literal.Number.Float
' '           Text
'.1e+34d'     Literal.Number.Float
' '           Text
'.1e-56d'     Literal.Number.Float
'\n'          Text

'.1E12'       Literal.Number.Float
' '           Text
'.1E+34'      Literal.Number.Float
' '           Text
'.1E-56'      Literal.Number.Float
' '           Text
'.1E12f'      Literal.Number.Float
' '           Text
'.1E+34f'     Literal.Number.Float
' '           Text
'.1E-56f'     Literal.Number.Float
' '           Text
'.1E12d'      Literal.Number.Float
' '           Text
'.1E+34d'     Literal.Number.Float
' '           Text
'.1E-56d'     Literal.Number.Float
'\n'          Text

'0x'          Literal.Number.Hex
' '           Text
'// Can still be highlighted correctly!\n' Comment.Single

'0x1234567890ABCDEF' Literal.Number.Hex
' '           Text
'0x1234567890abcdef' Literal.Number.Hex
'\n'          Text

'0x123_abc'   Literal.Number.Hex
' '           Text
'0x123_ABC'   Literal.Number.Hex
'\n'          Text

'"test"'      Literal.String
' '           Text
'"\\"test\\""' Literal.String
' '           Text
'"\'test\'"'  Literal.String
' '           Text
'// comment\n' Comment.Single

'"""test: one ", two "", three """"""' Literal.String
' '           Text
'// comment\n' Comment.Single

"'t'"         Literal.String.Char
' '           Text
'\'"\''       Literal.String.Char
' '           Text
"'"           Literal.String.Char
"\\'"         Literal.String.Escape
"'"           Literal.String.Char
' '           Text
"'"           Literal.String.Char
'\\n'         Literal.String.Escape
"'"           Literal.String.Char
' '           Text
"' '"         Literal.String.Char
'\n'          Text

'super'       Name.Builtin.Pseudo
' '           Text
'this'        Name.Builtin.Pseudo
'\n\n'        Text

'// String interpolation\n' Comment.Single

's"'          Literal.String
'1 + 2 = '    Literal.String
'${'          Literal.String.Interpol
' '           Text
'1'           Literal.Number.Integer
' '           Text
'+'           Operator
' '           Text
'{'           Punctuation
' '           Text
'val'         Keyword.Declaration
' '           Text
'x'           Name
' '           Text
'='           Operator
' '           Text
'2'           Literal.Number.Integer
';'           Punctuation
' '           Text
'x'           Name
' '           Text
'}'           Punctuation
' '           Text
'}'           Literal.String.Interpol
'.'           Literal.String
'"'           Literal.String
'\n'          Text

's"""'        Literal.String
'1 + 2 = '    Literal.String
'${'          Literal.String.Interpol
'\n  '        Text
'def'         Keyword
' '           Text
'add'         Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
','           Punctuation
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'{'           Punctuation
'\n    '      Text
'x'           Name
' '           Text
'+'           Operator
' '           Text
'y'           Name
'\n  '        Text
'}'           Punctuation
'\n  '        Text
'add'         Name
'('           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'}'           Literal.String.Interpol
'.'           Literal.String
'"""'         Literal.String
'\n'          Text

's"'          Literal.String
'$'           Literal.String.Interpol
'first'       Name
'$'           Literal.String.Interpol
'second'      Name
'"'           Literal.String
'\n'          Text

's"'          Literal.String
'$'           Literal.String.Interpol
'safeTagMarker' Name
'${'          Literal.String.Interpol
'mtch'        Name
'.'           Punctuation
'matched'     Name
'}'           Literal.String.Interpol
'$'           Literal.String.Interpol
'safeTagMarker' Name
'"'           Literal.String
'\n'          Text

's"'          Literal.String
'$'           Literal.String.Interpol
'a'           Name
'$'           Literal.String.Interpol
'a'           Name
'$'           Literal.String.Interpol
'a'           Name
'${'          Literal.String.Interpol
'b'           Name
'}'           Literal.String.Interpol
'$'           Literal.String.Interpol
'a'           Name
'${'          Literal.String.Interpol
'b'           Name
'}'           Literal.String.Interpol
'${'          Literal.String.Interpol
'b'           Name
'}'           Literal.String.Interpol
'"'           Literal.String
'\n'          Text

's"'          Literal.String
'${'          Literal.String.Interpol
'x$'          Name
'}'           Literal.String.Interpol
'"'           Literal.String
'\n'          Text

's"'          Literal.String
'$'           Literal.String.Interpol
'a'           Name
'$$'          Literal.String.Escape
'$'           Literal.String.Interpol
'a'           Name
'"'           Literal.String
' '           Text
'// $$ is an escape\n' Comment.Single

'val'         Keyword.Declaration
' '           Text
'a'           Name
' '           Text
'='           Operator
' '           Text
'4'           Literal.Number.Integer
';'           Punctuation
' '           Text
'foo'         Name
'('           Punctuation
'a'           Name
')'           Punctuation
'\n'          Text

's"'          Literal.String
'$'           Literal.String.Interpol
'safeTagMarker' Name
'${'          Literal.String.Interpol
'val'         Keyword.Declaration
' '           Text
'a'           Name
' '           Text
'='           Operator
' '           Text
'4'           Literal.Number.Integer
';'           Punctuation
' '           Text
'foo'         Name
'('           Punctuation
'a'           Name
')'           Punctuation
'}'           Literal.String.Interpol
'$'           Literal.String.Interpol
'safeTagMarker' Name
'"'           Literal.String
'\n\n'        Text

'// Vals & vars\n' Comment.Single

'val'         Keyword.Declaration
' '           Text
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'z'           Name
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
'\n'          Text

'var'         Keyword.Declaration
' '           Text
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
'\n'          Text

'var'         Keyword.Declaration
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
'\n'          Text

'var'         Keyword.Declaration
' '           Text
'z'           Name
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'('           Punctuation
'a'           Name
','           Punctuation
' '           Text
'b'           Name
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'('           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'Some'        Name.Class
'('           Punctuation
'a'           Name
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'Some'        Name.Class
'('           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'var'         Keyword.Declaration
' '           Text
'Pair'        Name.Class
'('           Punctuation
'a'           Name
','           Punctuation
' '           Text
'b'           Name
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'Pair'        Name.Class
'('           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'Test'        Name.Class
'.'           Punctuation
'Pair'        Name.Class
'('           Punctuation
'a'           Name
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'Test'        Name.Class
'.'           Punctuation
'Pair'        Name.Class
'('           Punctuation
'1'           Literal.Number.Integer
','           Punctuation
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'a'           Name
' '           Text
'::'          Operator
' '           Text
'b'           Name
' '           Text
'='           Operator
' '           Text
'x'           Name
' '           Text
'::'          Operator
' '           Text
'Nil'         Name.Class
'\n'          Text

'var'         Keyword.Declaration
' '           Text
'a'           Name
' '           Text
'::'          Operator
' '           Text
'b'           Name
' '           Text
'='           Operator
' '           Text
'x'           Name
' '           Text
'::'          Operator
' '           Text
'Nil'         Name.Class
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'a'           Name
' '           Text
'+:'          Operator
' '           Text
'rest'        Name
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n\n'        Text

'// Defs\n'   Comment.Single

'def'         Keyword
' '           Text
'abs'         Name.Function
'['           Punctuation
'T'           Name.Class
']'           Punctuation
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'='           Operator
' '           Text
'if'          Keyword
' '           Text
'x'           Name
' '           Text
'>='          Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'then'        Keyword
' '           Text
'new'         Keyword
' '           Text
'x'           Name
' '           Text
'else'        Keyword
' '           Text
'now'         Name
' '           Text
'-'           Operator
'x'           Name
'\n'          Text

'def'         Keyword
' '           Text
'abs'         Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'if'          Keyword
' '           Text
'x'           Name
' '           Text
'>='          Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'then'        Keyword
' '           Text
'new'         Keyword
' '           Text
'x'           Name
' '           Text
'else'        Keyword
' '           Text
'now'         Name
' '           Text
'-'           Operator
'x'           Name
'\n'          Text

'def'         Keyword
' '           Text
'sum'         Name.Function
'['           Punctuation
'A'           Name.Class
']'           Punctuation
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
'('           Punctuation
'implicit'    Keyword
' '           Text
'm'           Name
':'           Punctuation
' '           Text
'Monoid'      Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'A'           Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'def'         Keyword
' '           Text
'sum'         Name.Function
'['           Punctuation
'A'           Name.Class
']'           Punctuation
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
'('           Punctuation
'implicit'    Keyword
' '           Text
'Monoid'      Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'A'           Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'def'         Keyword
' '           Text
'sum'         Name.Function
'['           Punctuation
'A'           Name.Class
']'           Punctuation
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
'('           Punctuation
'using'       Keyword
' '           Text
'm'           Name
':'           Punctuation
' '           Text
'Monoid'      Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'A'           Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'def'         Keyword
' '           Text
'sum'         Name.Function
'['           Punctuation
'A'           Name.Class
']'           Punctuation
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
'('           Punctuation
'using'       Keyword
' '           Text
'Monoid'      Name.Class
'['           Punctuation
'A'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'A'           Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'def'         Keyword
' '           Text
'reduceRight' Name.Function
'('           Punctuation
'op'          Name
':'           Punctuation
' '           Text
'('           Punctuation
'T'           Name.Class
','           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'T'           Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'T'           Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'def'         Keyword
' '           Text
'foldRight'   Name.Function
'['           Punctuation
']'           Punctuation
'('           Punctuation
'z'           Name
':'           Punctuation
' '           Text
'U'           Name.Class
')'           Punctuation
'('           Punctuation
'op'          Name
':'           Punctuation
' '           Text
'('           Punctuation
'T'           Name.Class
','           Punctuation
' '           Text
'U'           Name.Class
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'U'           Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'U'           Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'def'         Keyword
' '           Text
'obj'         Name.Function
'('           Punctuation
'fields'      Name
':'           Punctuation
' '           Text
'('           Punctuation
'String'      Name.Class
','           Punctuation
' '           Text
'Any'         Name.Class
')'           Punctuation
'*'           Operator
','           Punctuation
' '           Text
'test'        Name
':'           Punctuation
' '           Text
'String'      Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Json'        Name.Class
'\n'          Text

'def'         Keyword
' '           Text
'::'          Name.Function
' '           Text
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'::'          Name
'('           Punctuation
'x'           Name
','           Punctuation
' '           Text
'xs'          Name
')'           Punctuation
'\n'          Text

'def'         Keyword
' '           Text
'::'          Name.Function
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'::'          Name
'('           Punctuation
'x'           Name
','           Punctuation
' '           Text
'xs'          Name
')'           Punctuation
'\n\n'        Text

'// Using\n'  Comment.Single

'def'         Keyword
' '           Text
'f'           Name.Function
'('           Punctuation
'using'       Keyword
' '           Text
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Unit'        Name.Class
' '           Text
'='           Operator
' '           Text
'('           Punctuation
')'           Punctuation
'\n'          Text

'f'           Name
'('           Punctuation
'using'       Keyword
' '           Text
'2'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'f'           Name
'('           Punctuation
'using'       Keyword
' '           Text
'.2'          Literal.Number.Float
')'           Punctuation
'\n'          Text

'class'       Keyword
' '           Text
'A'           Name.Class
'('           Punctuation
'using'       Keyword
' '           Text
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
'\n'          Text

'new'         Keyword
' '           Text
'A'           Name.Class
'('           Punctuation
'using'       Keyword
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'f'           Name
'('           Punctuation
'using'       Keyword
' '           Text
'('           Punctuation
')'           Punctuation
')'           Punctuation
'\n'          Text

'f'           Name
'('           Punctuation
'using'       Keyword
' '           Text
'{'           Punctuation
'}'           Punctuation
')'           Punctuation
'\n'          Text

'f'           Name
'('           Punctuation
'using'       Keyword
' '           Text
"' '"         Literal.String.Char
')'           Punctuation
'\n'          Text

'f'           Name
'('           Punctuation
'using'       Keyword
' '           Text
'""'          Literal.String
')'           Punctuation
'\n\n'        Text

'// Declarations\n' Comment.Single

'trait'       Keyword
' '           Text
'X'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'object'      Keyword
' '           Text
'X'           Name.Class
'\n'          Text

'class'       Keyword
' '           Text
'Y'           Name.Class
'\n'          Text

'open'        Keyword
' '           Text
'object'      Keyword
' '           Text
'X'           Name.Class
':'           Punctuation
'\n'          Text

'open'        Keyword
' '           Text
'class'       Keyword
' '           Text
'Y'           Name.Class
':'           Punctuation
'\n'          Text

'case'        Keyword
' '           Text
'object'      Keyword
' '           Text
'X'           Name.Class
'\n'          Text

'case'        Keyword
' '           Text
'class'       Keyword
' '           Text
'Y'           Name.Class
'('           Punctuation
')'           Punctuation
'\n'          Text

'package'     Keyword
' '           Text
'object'      Keyword
' '           Text
'x'           Name.Namespace
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'package'     Keyword
' '           Text
'object'      Keyword
' '           Text
'y'           Name.Namespace
':'           Punctuation
'\n\n'        Text

'// Quoted\n' Comment.Single

"'{"          Punctuation
' '           Text
'2'           Literal.Number.Integer
' '           Text
'}'           Punctuation
'\n'          Text

"'["          Punctuation
' '           Text
'String'      Name.Class
' '           Text
']'           Punctuation
'\n\n'        Text

'// Symbols\n' Comment.Single

'object'      Keyword
' '           Text
'Unicode'     Name.Class
' '           Text
'{'           Punctuation
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'blue'        Name
' '           Text
'='           Operator
' '           Text
"'*"          Literal.String.Symbol
' '           Text
'//red\n'     Comment.Single

'    '        Text
'val'         Keyword.Declaration
' '           Text
'stillRed'    Name
' '           Text
'='           Operator
' '           Text
"'*"          Literal.String.Symbol
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'symbolEndedWithOp' Name
'  '          Text
'='           Operator
' '           Text
"'symbol_*"   Literal.String.Symbol
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'symbolWithDigit' Name
' '           Text
'='           Operator
' '           Text
"'symbol1"    Literal.String.Symbol
' '           Text
"//'\n"       Comment.Single

'    '        Text
'val'         Keyword.Declaration
' '           Text
'greekSymbol' Name
' '           Text
'='           Operator
' '           Text
"'ξφδ"        Literal.String.Symbol
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'greekSymbolDigit' Name
' '           Text
'='           Operator
' '           Text
"'φδφ0"       Literal.String.Symbol
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'greekSymbolWithOp' Name
' '           Text
'='           Operator
' '           Text
"'δφξφξ_+-"   Literal.String.Symbol
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'multiOpSymbol' Name
' '           Text
'='           Operator
' '           Text
"'***"        Literal.String.Symbol
'\n    \n    ' Text
'val'         Keyword.Declaration
' '           Text
'symbolFollowedByOp' Name
' '           Text
'='           Operator
' '           Text
"'symbol"     Literal.String.Symbol
'*'           Operator
'\n    '      Text
'val'         Keyword.Declaration
' '           Text
'invalidSymbol' Name
'  '          Text
'='           Operator
' '           Text
"'**"         Literal.String.Symbol
'_x'          Name
' '           Text
"//'\n"       Comment.Single

'    '        Text
'val'         Keyword.Declaration
' '           Text
'characterLit' Name
' '           Text
'='           Operator
' '           Text
"'x'"         Literal.String.Char
'\n'          Text

'}'           Punctuation
'\n\n'        Text

'// Type aliases\n' Comment.Single

'type'        Keyword
' '           Text
'X'           Name.Class
'\n'          Text

'type'        Keyword
' '           Text
'X'           Name.Class
' '           Text
'<:'          Operator
' '           Text
'Y'           Name.Class
'\n'          Text

'type'        Keyword
' '           Text
'X'           Name.Class
' '           Text
'='           Operator
' '           Text
'Y'           Name.Class
'\n'          Text

'type'        Keyword
' '           Text
'X'           Name.Class
'['           Punctuation
'Y'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'Y'           Name.Class
' '           Text
'with'        Keyword
' '           Text
'Z'           Name.Class
'\n'          Text

'type'        Keyword
' '           Text
'X'           Name.Class
'['           Punctuation
'Y'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'Y'           Name.Class
' '           Text
'=>'          Operator
' '           Text
'('           Punctuation
'1'           Literal.Number.Integer
' '           Text
'|'           Operator
' '           Text
'2'           Literal.Number.Integer
','           Punctuation
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'type'        Keyword
' '           Text
'X'           Name.Class
'['           Punctuation
'Y'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'('           Punctuation
'Y'           Name.Class
','           Punctuation
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'('           Punctuation
'1'           Literal.Number.Integer
' '           Text
'|'           Operator
' '           Text
'2'           Literal.Number.Integer
','           Punctuation
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'type'        Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'Bar'         Name.Class
'.'           Punctuation
'Baz'         Name.Class
'\n'          Text

'opaque'      Keyword
' '           Text
'type'        Keyword
' '           Text
'Logarithm'   Name.Class
' '           Text
'='           Operator
' '           Text
'Double'      Name.Class
'\n\n'        Text

'// Type lambda\n' Comment.Single

'['           Punctuation
'X'           Name.Class
','           Punctuation
' '           Text
'Y'           Name.Class
']'           Punctuation
' '           Text
'=>>'         Operator
' '           Text
'Map'         Name.Class
'['           Punctuation
'Y'           Name.Class
','           Punctuation
' '           Text
'X'           Name.Class
']'           Punctuation
'\n\n'        Text

'// Match types\n' Comment.Single

'type'        Keyword
' '           Text
'Elem'        Name.Class
'['           Punctuation
'X'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'X'           Name.Class
' '           Text
'match'       Keyword
' '           Text
'{'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'String'      Name.Class
' '           Text
'=>'          Operator
' '           Text
'Char'        Name.Class
'\n  '        Text
'case'        Keyword
' '           Text
'Array'       Name.Class
'['           Punctuation
't'           Name
']'           Punctuation
' '           Text
'=>'          Operator
' '           Text
't'           Name
'\n  '        Text
'case'        Keyword
' '           Text
'Iterable'    Name.Class
'['           Punctuation
't'           Name
']'           Punctuation
' '           Text
'=>'          Operator
' '           Text
't'           Name
'\n'          Text

'}'           Punctuation
'\n'          Text

'type'        Keyword
' '           Text
'Concat'      Name.Class
'['           Punctuation
'Xs'          Name.Class
' '           Text
'<:'          Operator
' '           Text
'Tuple'       Name.Class
','           Punctuation
' '           Text
'+'           Operator
'Ys'          Name.Class
' '           Text
'<:'          Operator
' '           Text
'Tuple'       Name.Class
']'           Punctuation
' '           Text
'<:'          Operator
' '           Text
'Tuple'       Name.Class
' '           Text
'='           Operator
' '           Text
'Xs'          Name.Class
' '           Text
'match'       Keyword
' '           Text
'{'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Unit'        Name.Class
' '           Text
'=>'          Operator
' '           Text
'Ys'          Name.Class
'\n  '        Text
'case'        Keyword
' '           Text
'x'           Name
' '           Text
'*:'          Operator
' '           Text
'xs'          Name
' '           Text
'=>'          Operator
' '           Text
'x'           Name
' '           Text
'*:'          Operator
' '           Text
'Concat'      Name.Class
'['           Punctuation
'xs'          Name
','           Punctuation
' '           Text
'Ys'          Name.Class
']'           Punctuation
'\n'          Text

'}'           Punctuation
'\n\n'        Text

'// Dependent function types\n' Comment.Single

'trait'       Keyword
' '           Text
'Entry'       Name.Class
' '           Text
'{'           Punctuation
' '           Text
'type'        Keyword
' '           Text
'Key'         Name.Class
';'           Punctuation
' '           Text
'val'         Keyword.Declaration
' '           Text
'key'         Name
':'           Punctuation
' '           Text
'Key'         Name.Class
' '           Text
'}'           Punctuation
'\n'          Text

'def'         Keyword
' '           Text
'extractKey'  Name.Function
'('           Punctuation
'e'           Name
':'           Punctuation
' '           Text
'Entry'       Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'e'           Name
'.'           Punctuation
'Key'         Name.Class
' '           Text
'='           Operator
' '           Text
'e'           Name
'.'           Punctuation
'key'         Name
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'extractor'   Name
':'           Punctuation
' '           Text
'('           Punctuation
'e'           Name
':'           Punctuation
' '           Text
'Entry'       Name.Class
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'e'           Name
'.'           Punctuation
'Key'         Name.Class
' '           Text
'='           Operator
' '           Text
'extractKey'  Name
'\n'          Text

'type'        Keyword
' '           Text
'Extractor'   Name.Class
' '           Text
'='           Operator
' '           Text
'Function1'   Name.Class
'['           Punctuation
'Entry'       Name.Class
','           Punctuation
' '           Text
'Entry'       Name.Class
'#'           Name
'Key'         Name.Class
']'           Punctuation
' '           Text
'{'           Punctuation
'\n  '        Text
'def'         Keyword
' '           Text
'apply'       Name.Function
'('           Punctuation
'e'           Name
':'           Punctuation
' '           Text
'Entry'       Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'e'           Name
'.'           Punctuation
'Key'         Name.Class
'\n'          Text

'}'           Punctuation
'\n\n'        Text

'// Singleton types\n' Comment.Single

'val'         Keyword.Declaration
' '           Text
'x'           Name
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'trait'       Keyword
' '           Text
'Foo'         Name.Class
'['           Punctuation
'T'           Name.Class
' '           Text
'<:'          Operator
' '           Text
'x'           Name
'.'           Punctuation
'type'        Keyword
']'           Punctuation
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'a'           Name
':'           Punctuation
' '           Text
'x'           Name
'.'           Punctuation
'type'        Keyword
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'b'           Name
':'           Punctuation
' '           Text
'Foo'         Name.Class
'['           Punctuation
'x'           Name
'.'           Punctuation
'type'        Keyword
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n\n'        Text

'// Union and intersection types\n' Comment.Single

'Type'        Name.Class
'['           Punctuation
'A'           Name.Class
' '           Text
'with'        Keyword
' '           Text
'"user provided string"' Literal.String
' '           Text
'with'        Keyword
' '           Text
'B'           Name.Class
']'           Punctuation
'\n'          Text

'def'         Keyword
' '           Text
'help'        Name.Function
'('           Punctuation
'id'          Name
':'           Punctuation
' '           Text
'UserName'    Name.Class
' '           Text
'|'           Operator
' '           Text
'Password'    Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'either'      Name
':'           Punctuation
' '           Text
'Password'    Name.Class
' '           Text
'|'           Operator
' '           Text
'UserName'    Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'both'        Name
':'           Punctuation
' '           Text
'Object'      Name.Class
' '           Text
'&'           Name
' '           Text
'Product'     Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n\n'        Text

'// Inline\n' Comment.Single

'inline'      Keyword
' '           Text
'def'         Keyword
' '           Text
'inline'      Name.Function
'('           Punctuation
'inline'      Keyword
' '           Text
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Double'      Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'inline'      Keyword
' '           Text
'def'         Keyword
' '           Text
'power'       Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Double'      Name.Class
','           Punctuation
' '           Text
'inline'      Keyword
' '           Text
'n'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Double'      Name.Class
' '           Text
'='           Operator
'\n'          Text

'inline'      Keyword
' '           Text
'if'          Keyword
' '           Text
'('           Punctuation
'n'           Name
' '           Text
'=='          Operator
' '           Text
'0'           Literal.Number.Integer
')'           Punctuation
' '           Text
'1'           Literal.Number.Integer
' '           Text
'else'        Keyword
' '           Text
'2'           Literal.Number.Integer
'\n'          Text

'inline'      Keyword
' '           Text
'val'         Keyword.Declaration
' '           Text
'c'           Name
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
'\n\n\n'      Text

'// Soft keywords (should not be highlighted as keywords here)\n' Comment.Single

'val'         Keyword.Declaration
' '           Text
'open'        Name
' '           Text
'='           Operator
' '           Text
'true'        Keyword.Constant
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'inline'      Name
' '           Text
'='           Operator
' '           Text
'true'        Keyword.Constant
'\n'          Text

'inline'      Keyword
' '           Text
'xval'        Name
'\n'          Text

'val'         Keyword.Declaration
' '           Text
'x'           Name
' '           Text
'='           Operator
' '           Text
'inline'      Name
' '           Text
'+'           Operator
' '           Text
'2'           Literal.Number.Integer
'\n'          Text

'('           Punctuation
'using'       Name
')'           Punctuation
'\n'          Text

'('           Punctuation
'usingSomething' Name
')'           Punctuation
'\n\n'        Text

'// Storage modifiers\n' Comment.Single

'private'     Keyword
' '           Text
'object'      Keyword
' '           Text
'a'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'private'     Keyword
'['           Punctuation
'com'         Name
']'           Punctuation
' '           Text
'object'      Keyword
' '           Text
'b'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'private'     Keyword
'['           Punctuation
'com'         Name
'.'           Punctuation
'example'     Name
']'           Punctuation
' '           Text
'object'      Keyword
' '           Text
'c'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'protected'   Keyword
' '           Text
'object'      Keyword
' '           Text
'd'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'protected'   Keyword
'['           Punctuation
'com'         Name
']'           Punctuation
' '           Text
'object'      Keyword
' '           Text
'e'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'protected'   Keyword
'['           Punctuation
'com'         Name
'.'           Punctuation
'example'     Name
']'           Punctuation
' '           Text
'object'      Keyword
' '           Text
'f'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'synchronized' Keyword
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'abstract'    Keyword
' '           Text
'class'       Keyword
' '           Text
'g'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'final'       Keyword
' '           Text
'val'         Keyword.Declaration
' '           Text
'h'           Name
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'lazy'        Keyword
' '           Text
'val'         Keyword.Declaration
' '           Text
'i'           Name
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'sealed'      Keyword
' '           Text
'trait'       Keyword
' '           Text
'j'           Name.Class
'\n'          Text

'implicit'    Keyword
' '           Text
'val'         Keyword.Declaration
' '           Text
'k'           Name
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'enum'        Keyword
' '           Text
'm'           Name.Class
' '           Text
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'inline'      Keyword
' '           Text
'val'         Keyword.Declaration
' '           Text
'n'           Name
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'opaque'      Keyword
' '           Text
'type'        Keyword
' '           Text
'o'           Name.Class
' '           Text
'='           Operator
' '           Text
'Unit'        Name.Class
'\n'          Text

'@volatile'   Name.Decorator
' '           Text
'@transient'  Name.Decorator
' '           Text
'@native'     Name.Decorator
'\n'          Text

'override'    Keyword
' '           Text
'def'         Keyword
' '           Text
'p'           Name.Function
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n\n'        Text

'// Meta bounds\n' Comment.Single

'<%'          Operator
' '           Text
'=:='         Operator
' '           Text
'<:<'         Operator
' '           Text
'<%<'         Operator
' '           Text
'>:'          Operator
' '           Text
'<:'          Operator
'\n\n'        Text

'// Given\n'  Comment.Single

'given'       Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'foo'         Name.Class
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'listOrd'     Name.Class
'['           Punctuation
'T'           Name.Class
':'           Punctuation
' '           Text
'Ordering'    Name.Class
']'           Punctuation
':'           Punctuation
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
']'           Punctuation
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'listOrd'     Name.Class
'('           Punctuation
'using'       Keyword
' '           Text
'ev'          Name
':'           Punctuation
' '           Text
'Ev'          Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'Int'         Name.Class
']'           Punctuation
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'['           Punctuation
'T'           Name.Class
':'           Punctuation
' '           Text
'Ordering'    Name.Class
']'           Punctuation
':'           Punctuation
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
']'           Punctuation
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'('           Punctuation
'using'       Keyword
' '           Text
'ev'          Name
':'           Punctuation
' '           Text
'Ev'          Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'intOrd'      Name.Class
':'           Punctuation
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'Int'         Name.Class
']'           Punctuation
' '           Text
'with'        Keyword
'\n'          Text

'given'       Keyword
' '           Text
'foo'         Name.Class
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'`foo`'       Name.Class
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'listOrd'     Name.Class
'['           Punctuation
'T'           Name.Class
':'           Punctuation
' '           Text
'Ordering'    Name.Class
']'           Punctuation
':'           Punctuation
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'listOrd'     Name.Class
'('           Punctuation
'using'       Keyword
' '           Text
'ev'          Name
':'           Punctuation
' '           Text
'Ev'          Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'Int'         Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'['           Punctuation
'T'           Name.Class
':'           Punctuation
' '           Text
'Ordering'    Name.Class
']'           Punctuation
':'           Punctuation
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'given'       Keyword
' '           Text
'('           Punctuation
'using'       Keyword
' '           Text
'ev'          Name
':'           Punctuation
' '           Text
'Ev'          Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Foo'         Name.Class
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n\n'        Text

'given'       Keyword
' '           Text
'sumMonoid'   Name.Class
':'           Punctuation
' '           Text
'Monoid'      Name.Class
'['           Punctuation
'Int'         Name.Class
']'           Punctuation
' '           Text
'with'        Keyword
'\n  '        Text
'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'def'         Keyword
' '           Text
'combine'     Name.Function
'('           Punctuation
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'='           Operator
' '           Text
'x'           Name
' '           Text
'+'           Operator
' '           Text
'y'           Name
' \n  '       Text
'def'         Keyword
' '           Text
'unit'        Name.Function
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'='           Operator
' '           Text
'0'           Literal.Number.Integer
'\n\n'        Text

'trait'       Keyword
' '           Text
'Ord'         Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
':'           Punctuation
'\n   '       Text
'def'         Keyword
' '           Text
'compare'     Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
','           Punctuation
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Int'         Name.Class
'\n   '       Text
'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
' '           Text
'def'         Keyword
' '           Text
'<'           Name.Function
' '           Text
'('           Punctuation
'y'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'compare'     Name
'('           Punctuation
'x'           Name
','           Punctuation
' '           Text
'y'           Name
')'           Punctuation
' '           Text
'<'           Operator
' '           Text
'0'           Literal.Number.Integer
'\n   '       Text
'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
' '           Text
'def'         Keyword
' '           Text
'>'           Name.Function
' '           Text
'('           Punctuation
'y'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'compare'     Name
'('           Punctuation
'x'           Name
','           Punctuation
' '           Text
'y'           Name
')'           Punctuation
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
'\n'          Text

'given'       Keyword
' '           Text
'intOrd'      Name.Class
':'           Punctuation
' '           Text
'Ord'         Name.Class
'['           Punctuation
'Int'         Name.Class
']'           Punctuation
' '           Text
'with'        Keyword
'\n   '       Text
'def'         Keyword
' '           Text
'compare'     Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
','           Punctuation
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'='           Operator
'\n      '    Text
'if'          Keyword
' '           Text
'x'           Name
' '           Text
'<'           Operator
' '           Text
'y'           Name
' '           Text
'then'        Keyword
' '           Text
'-'           Operator
'1'           Literal.Number.Integer
' '           Text
'else'        Keyword
' '           Text
'if'          Keyword
' '           Text
'x'           Name
' '           Text
'>'           Operator
' '           Text
'y'           Name
' '           Text
'then'        Keyword
' '           Text
'+'           Operator
'1'           Literal.Number.Integer
' '           Text
'else'        Keyword
' '           Text
'0'           Literal.Number.Integer
'\n'          Text

'given'       Keyword
' '           Text
'listOrd'     Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
'('           Punctuation
'using'       Keyword
' '           Text
'ord'         Name
':'           Punctuation
' '           Text
'Ord'         Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'Ord'         Name.Class
'['           Punctuation
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
']'           Punctuation
' '           Text
'with'        Keyword
'\n   '       Text
'def'         Keyword
' '           Text
'compare'     Name.Function
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
','           Punctuation
' '           Text
'ys'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'='           Operator
' '           Text
'('           Punctuation
'xs'          Name
','           Punctuation
' '           Text
'ys'          Name
')'           Punctuation
' '           Text
'match'       Keyword
'\n      '    Text
'case'        Keyword
' '           Text
'('           Punctuation
'Nil'         Name.Class
','           Punctuation
' '           Text
'Nil'         Name.Class
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'0'           Literal.Number.Integer
'\n      '    Text
'case'        Keyword
' '           Text
'('           Punctuation
'Nil'         Name.Class
','           Punctuation
' '           Text
'_'           Name
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'-'           Operator
'1'           Literal.Number.Integer
'\n      '    Text
'case'        Keyword
' '           Text
'('           Punctuation
'_'           Name
','           Punctuation
' '           Text
'Nil'         Name.Class
')'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'+'           Operator
'1'           Literal.Number.Integer
'\n      '    Text
'case'        Keyword
' '           Text
'('           Punctuation
'x'           Name
' '           Text
'::'          Operator
' '           Text
'xs1'         Name
','           Punctuation
' '           Text
'y'           Name
' '           Text
'::'          Operator
' '           Text
'ys1'         Name
')'           Punctuation
' '           Text
'=>'          Operator
'\n         ' Text
'val'         Keyword.Declaration
' '           Text
'fst'         Name
' '           Text
'='           Operator
' '           Text
'ord'         Name
'.'           Punctuation
'compare'     Name
'('           Punctuation
'x'           Name
','           Punctuation
' '           Text
'y'           Name
')'           Punctuation
'\n         ' Text
'if'          Keyword
' '           Text
'fst'         Name
' '           Text
'!='          Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'then'        Keyword
' '           Text
'fst'         Name
' '           Text
'else'        Keyword
' '           Text
'compare'     Name
'('           Punctuation
'xs1'         Name
','           Punctuation
' '           Text
'ys1'         Name
')'           Punctuation
'\n'          Text

'trait'       Keyword
' '           Text
'A'           Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'given'       Keyword
' '           Text
'ac'          Name.Class
':'           Punctuation
' '           Text
'C'           Name.Class
'\n'          Text

'trait'       Keyword
' '           Text
'B'           Name.Class
' '           Text
'extends'     Keyword
' '           Text
'A'           Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'given'       Keyword
' '           Text
'bc'          Name.Class
':'           Punctuation
' '           Text
'C'           Name.Class
'\n'          Text

'object'      Keyword
' '           Text
'O'           Name.Class
' '           Text
'extends'     Keyword
' '           Text
'B'           Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'x'           Name
' '           Text
'='           Operator
' '           Text
'summon'      Name
'['           Punctuation
'C'           Name.Class
']'           Punctuation
'\n\n'        Text

'// Classes\n' Comment.Single

'class'       Keyword
' '           Text
'A'           Name.Class
'\n'          Text

'class'       Keyword
' '           Text
'B'           Name.Class
'\n'          Text

'class'       Keyword
' '           Text
'Bar'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'class'       Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'class'       Keyword
' '           Text
'::'          Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'class'       Keyword
' '           Text
'Rational'    Name.Class
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
','           Punctuation
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'with'        Keyword
'\n  '        Text
'def'         Keyword
' '           Text
'numer'       Name.Function
' '           Text
'='           Operator
' '           Text
'x'           Name
'\n  '        Text
'def'         Keyword
' '           Text
'denom'       Name.Function
' '           Text
'='           Operator
' '           Text
'y'           Name
'\n'          Text

'class'       Keyword
' '           Text
'Cons'        Name.Class
'('           Punctuation
'_head'       Name
':'           Punctuation
' '           Text
'Int'         Name.Class
','           Punctuation
' '           Text
'_tail'       Name
':'           Punctuation
' '           Text
'IntList'     Name.Class
')'           Punctuation
' '           Text
'extends'     Keyword
' '           Text
'IntList'     Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'head'        Name
' '           Text
'='           Operator
' '           Text
'_head'       Name
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'tail'        Name
' '           Text
'='           Operator
' '           Text
'_tail'       Name
'\n'          Text

'class'       Keyword
' '           Text
'Int'         Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'def'         Keyword
' '           Text
'+'           Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Double'      Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Double'      Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'+'           Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Float'       Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Float'       Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'+'           Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Long'        Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Long'        Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'+'           Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'// same for -, *, /, %\n' Comment.Single

'  '          Text
'def'         Keyword
' '           Text
'<<'          Name.Function
' '           Text
'('           Punctuation
'cnt'         Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'// same for >>, >>> */\n' Comment.Single

'  '          Text
'def'         Keyword
' '           Text
'&'           Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Long'        Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Long'        Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'&'           Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Int'         Name.Class
' '           Text
'// same for |, ^ */\n' Comment.Single

'  '          Text
'def'         Keyword
' '           Text
'=='          Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Double'      Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Boolean'     Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'=='          Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Float'       Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Boolean'     Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'=='          Name.Function
' '           Text
'('           Punctuation
'that'        Name
':'           Punctuation
' '           Text
'Long'        Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Boolean'     Name.Class
' '           Text
'// same for !=, <, >, <=, >=\n' Comment.Single

'end'         Keyword
' '           Text
'Int'         Name.Class
'\n'          Text

'class'       Keyword
' '           Text
'Sub'         Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Base'        Name.Class
' '           Text
'with'        Keyword
' '           Text
'Something'   Name.Class
' '           Text
'{'           Punctuation
'\n  '        Text
'override'    Keyword
' '           Text
'def'         Keyword
' '           Text
'foo'         Name.Function
' '           Text
'='           Operator
' '           Text
'2'           Literal.Number.Integer
'\n  '        Text
'def'         Keyword
' '           Text
'bar'         Name.Function
' '           Text
'='           Operator
' '           Text
'3'           Literal.Number.Integer
'\n'          Text

'}'           Punctuation
'\n'          Text

'class'       Keyword
' '           Text
'Succ'        Name.Class
'('           Punctuation
'n'           Name
':'           Punctuation
' '           Text
'Nat'         Name.Class
')'           Punctuation
' '           Text
'extends'     Keyword
' '           Text
'Nat'         Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'// ...\n'    Comment.Single

'open'        Keyword
' '           Text
'class'       Keyword
' '           Text
'Writer'      Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
' '           Text
'{'           Punctuation
'\n  '        Text
'/*'          Comment.Multiline
'*'           Comment.Multiline
' Sends to stdout, can be overridden ' Comment.Multiline
'*/'          Comment.Multiline
'\n  '        Text
'def'         Keyword
' '           Text
'send'        Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'println'     Name
'('           Punctuation
'x'           Name
')'           Punctuation
'\n  '        Text
'/*'          Comment.Multiline
'*'           Comment.Multiline
' Sends all arguments using `send` ' Comment.Multiline
'*/'          Comment.Multiline
'\n  '        Text
'def'         Keyword
' '           Text
'sendAll'     Name.Function
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'T'           Name.Class
'*'           Operator
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'xs'          Name
'.'           Punctuation
'foreach'     Name
'('           Punctuation
'send'        Name
')'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'class'       Keyword
' '           Text
'LazyList'    Name.Class
'['           Punctuation
'+'           Operator
'T'           Name.Class
']'           Punctuation
'('           Punctuation
'init'        Name
':'           Punctuation
' '           Text
'=>'          Operator
' '           Text
'State'       Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
' '           Text
'with'        Keyword
'\n  '        Text
'lazy'        Keyword
' '           Text
'val'         Keyword.Declaration
' '           Text
'state'       Name
':'           Punctuation
' '           Text
'State'       Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'init'        Name
'\t\t\t\n\n'  Text

'// Traits\n' Comment.Single

'trait'       Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'trait'       Keyword
' '           Text
'Bar'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'trait'       Keyword
' '           Text
'*:'          Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'trait'       Keyword
' '           Text
'*:'          Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'trait'       Keyword
' '           Text
'::'          Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'::'          Operator
' '           Text
'Nil'         Name.Class
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'::'          Operator
'\n\n'        Text

'// Objects\n' Comment.Single

'object'      Keyword
' '           Text
'Foo'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'object'      Keyword
' '           Text
'Bar'         Name.Class
' '           Text
'with'        Keyword
'\n'          Text

'object'      Keyword
' '           Text
'Zero'        Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Nat'         Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n\n'        Text

'// Enums\n'  Comment.Single

'object'      Keyword
' '           Text
'Enum'        Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Enumeration' Name.Class
' '           Text
'{'           Punctuation
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'Foo'         Name.Class
','           Punctuation
' '           Text
'Bar'         Name.Class
','           Punctuation
' '           Text
'Baz'         Name.Class
' '           Text
'='           Operator
' '           Text
'Value'       Name.Class
'\n'          Text

'}'           Punctuation
'\n'          Text

'enum'        Keyword
' '           Text
'Color'       Name.Class
' '           Text
'with'        Keyword
'\n  '        Text
'case'        Keyword
' '           Text
'Red'         Name.Class
','           Punctuation
' '           Text
'Green'       Name.Class
','           Punctuation
' '           Text
'Blue'        Name.Class
','           Punctuation
' '           Text
'Magenta'     Name.Class
'\n'          Text

'enum'        Keyword
' '           Text
'Color'       Name.Class
'('           Punctuation
'val'         Keyword.Declaration
' '           Text
'test'        Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'with'        Keyword
'\n  '        Text
'case'        Keyword
' '           Text
'Red'         Name.Class
','           Punctuation
' '           Text
'Green'       Name.Class
','           Punctuation
' '           Text
'Blue'        Name.Class
','           Punctuation
' '           Text
'Magenta'     Name.Class
'\n  '        Text
'def'         Keyword
' '           Text
'isPrimary'   Name.Function
'('           Punctuation
'color'       Name
':'           Punctuation
' '           Text
'Color'       Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Boolean'     Name.Class
' '           Text
'='           Operator
'\n    '      Text
'color'       Name
' '           Text
'match'       Keyword
'\n        '  Text
'case'        Keyword
' '           Text
'Red'         Name.Class
' '           Text
'|'           Operator
' '           Text
'Green'       Name.Class
' '           Text
'|'           Operator
' '           Text
'Blue'        Name.Class
' '           Text
'=>'          Operator
' '           Text
'true'        Keyword.Constant
'\n        '  Text
'case'        Keyword
' '           Text
'Magenta'     Name.Class
' '           Text
'=>'          Operator
' '           Text
'false'       Keyword.Constant
'\n'          Text

'enum'        Keyword
' '           Text
'State'       Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
' '           Text
'with'        Keyword
'\n  '        Text
'case'        Keyword
' '           Text
'Empty'       Name.Class
'\n  '        Text
'case'        Keyword
' '           Text
'Cons'        Name.Class
'('           Punctuation
'hd'          Name
':'           Punctuation
' '           Text
'T'           Name.Class
','           Punctuation
' '           Text
'tl'          Name
':'           Punctuation
' '           Text
'LazyList'    Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
'\n'          Text

'abstract'    Keyword
' '           Text
'class'       Keyword
' '           Text
'Color'       Name.Class
'\n'          Text

'object'      Keyword
' '           Text
'Color'       Name.Class
' '           Text
'{'           Punctuation
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'Red'         Name.Class
' '           Text
'='           Operator
' '           Text
'Color'       Name.Class
'('           Punctuation
')'           Punctuation
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'Green'       Name.Class
' '           Text
'='           Operator
' '           Text
'Color'       Name.Class
'('           Punctuation
')'           Punctuation
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'Blue'        Name.Class
' '           Text
'='           Operator
' '           Text
'Color'       Name.Class
'('           Punctuation
')'           Punctuation
'\n  '        Text
'val'         Keyword.Declaration
' '           Text
'Magenta'     Name.Class
' '           Text
'='           Operator
' '           Text
'Color'       Name.Class
'('           Punctuation
')'           Punctuation
'\n  '        Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'enum'        Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'val'         Keyword.Declaration
' '           Text
'numberOfWheels' Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'{'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Unicycle'    Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'1'           Literal.Number.Integer
')'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Bicycle'     Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'2'           Literal.Number.Integer
')'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Car'         Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'4'           Literal.Number.Integer
')'           Punctuation
'\n'          Text

'}'           Punctuation
'\n'          Text

'enum'        Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'val'         Keyword.Declaration
' '           Text
'numberOfWheels' Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Unicycle'    Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'1'           Literal.Number.Integer
')'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Bicycle'     Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'2'           Literal.Number.Integer
')'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Car'         Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Vehicle'     Name.Class
'('           Punctuation
'4'           Literal.Number.Integer
')'           Punctuation
'\n\n'        Text

'// New\n'    Comment.Single

'new'         Keyword
' '           Text
'A'           Name.Class
'\n'          Text

'new'         Keyword
' '           Text
'{'           Punctuation
' '           Text
'}'           Punctuation
'\n'          Text

'new'         Keyword
' '           Text
'Foo'         Name.Class
'\n'          Text

'new'         Keyword
' '           Text
'foo'         Name
'.'           Punctuation
'Foo'         Name.Class
'\n'          Text

'new'         Keyword
' '           Text
'Foo'         Name.Class
'.'           Punctuation
'Foo'         Name.Class
'\n'          Text

'new'         Keyword
' '           Text
'A'           Name.Class
':'           Punctuation
'\n  '        Text
'def'         Keyword
' '           Text
'f'           Name.Function
' '           Text
'='           Operator
' '           Text
'3'           Literal.Number.Integer
'\n\n'        Text

'// End\n'    Comment.Single

'new'         Keyword
' '           Text
'Foo'         Name.Class
':'           Punctuation
'\n  '        Text
'// ...\n'    Comment.Single

'end'         Keyword
' '           Text
'new'         Keyword
'\n'          Text

'end'         Keyword
' '           Text
'extension'   Keyword
'\n'          Text

'end'         Keyword
' '           Text
'if'          Keyword
'\n'          Text

'end'         Keyword
' '           Text
'while'       Keyword
'\n'          Text

'end'         Keyword
' '           Text
'for'         Keyword
'\n'          Text

'end'         Keyword
' '           Text
'match'       Keyword
'\n'          Text

'class'       Keyword
' '           Text
'Foo'         Name.Class
'\n'          Text

'end'         Keyword
' '           Text
'Foo'         Name.Class
'\n'          Text

'end'         Keyword
' '           Text
'bar'         Name.Namespace
'\n'          Text

'end'         Keyword
' '           Text
'`bar`'       Name.Namespace
'\n'          Text

'end'         Keyword
' '           Text
'// test comment\n' Comment.Single

'package'     Keyword
' '           Text
'p1'          Name.Namespace
'.'           Punctuation
'p2'          Name
':'           Punctuation
'\n  '        Text
'abstract'    Keyword
' '           Text
'class'       Keyword
' '           Text
'C'           Name.Class
'('           Punctuation
')'           Punctuation
':'           Punctuation
'\n    '      Text
'def'         Keyword
' '           Text
'this'        Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'='           Operator
'\n      '    Text
'this'        Name.Builtin.Pseudo
'('           Punctuation
')'           Punctuation
'\n      '    Text
'if'          Keyword
' '           Text
'x'           Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'then'        Keyword
'\n        '  Text
'val'         Keyword.Declaration
' '           Text
'a'           Name
' '           Text
'::'          Operator
' '           Text
'b'           Name
' '           Text
'='           Operator
'\n          ' Text
'x'           Name
' '           Text
'::'          Operator
' '           Text
'Nil'         Name.Class
'\n        '  Text
'end'         Keyword
' '           Text
'val'         Keyword
' '           Text
'// test comment\n' Comment.Single

'        '    Text
'var'         Keyword.Declaration
' '           Text
'y'           Name
' '           Text
'='           Operator
'\n          ' Text
'x'           Name
'\n        '  Text
'end'         Keyword
' '           Text
'y'           Name.Namespace
' '           Text
'// test comment\n' Comment.Single

'        '    Text
'while'       Keyword
' '           Text
'y'           Name
' '           Text
'>'           Operator
' '           Text
'0'           Literal.Number.Integer
' '           Text
'do'          Keyword
'\n          ' Text
'println'     Name
'('           Punctuation
'y'           Name
')'           Punctuation
'\n          ' Text
'y'           Name
' '           Text
'-='          Operator
' '           Text
'1'           Literal.Number.Integer
'\n        '  Text
'end'         Keyword
' '           Text
'while'       Keyword
' '           Text
'// test comment\n' Comment.Single

'        '    Text
'try'         Keyword
'\n          ' Text
'x'           Name
' '           Text
'match'       Keyword
'\n            ' Text
'case'        Keyword
' '           Text
'0'           Literal.Number.Integer
' '           Text
'=>'          Operator
' '           Text
'println'     Name
'('           Punctuation
'"0"'         Literal.String
')'           Punctuation
'\n            ' Text
'case'        Keyword
' '           Text
'_'           Name
' '           Text
'=>'          Operator
'\n          ' Text
'end'         Keyword
' '           Text
'match'       Keyword
' '           Text
'// test comment\n' Comment.Single

'        '    Text
'finally'     Keyword
'\n          ' Text
'println'     Name
'('           Punctuation
'"done"'      Literal.String
')'           Punctuation
'\n        '  Text
'end'         Keyword
' '           Text
'try'         Name.Namespace
' '           Text
'// test comment\n' Comment.Single

'      '      Text
'end'         Keyword
' '           Text
'if'          Keyword
' '           Text
'// test comment\n' Comment.Single

'    '        Text
'end'         Keyword
' '           Text
'this'        Name.Namespace
' '           Text
'// test comment\n' Comment.Single

'    '        Text
'def'         Keyword
' '           Text
'f'           Name.Function
':'           Punctuation
' '           Text
'String'      Name.Class
'\n  '        Text
'end'         Keyword
' '           Text
'C'           Name.Class
' '           Text
'// test comment\n' Comment.Single

'  '          Text
'object'      Keyword
' '           Text
'C'           Name.Class
':'           Punctuation
'\n    '      Text
'given'       Keyword
' '           Text
'C'           Name.Class
' '           Text
'='           Operator
'\n      '    Text
'new'         Keyword
' '           Text
'C'           Name.Class
':'           Punctuation
'\n        '  Text
'def'         Keyword
' '           Text
'f'           Name.Function
' '           Text
'='           Operator
' '           Text
'"!"'         Literal.String
'\n        '  Text
'end'         Keyword
' '           Text
'f'           Name.Namespace
' '           Text
'// test comment\n' Comment.Single

'      '      Text
'end'         Keyword
' '           Text
'new'         Keyword
' '           Text
'// test comment\n' Comment.Single

'    '        Text
'end'         Keyword
' '           Text
'given'       Name.Namespace
' '           Text
'// test comment\n' Comment.Single

'  '          Text
'end'         Keyword
' '           Text
'C'           Name.Class
' '           Text
'// test comment\n' Comment.Single

'  '          Text
'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'C'           Name.Class
')'           Punctuation
'\n    '      Text
'def'         Keyword
' '           Text
'ff'          Name.Function
':'           Punctuation
' '           Text
'String'      Name.Class
' '           Text
'='           Operator
' '           Text
'x'           Name
'.'           Punctuation
'f'           Name
' '           Text
'++'          Operator
' '           Text
'x'           Name
'.'           Punctuation
'f'           Name
'\n  '        Text
'end'         Keyword
' '           Text
'extension'   Keyword
' '           Text
'// test comment\n' Comment.Single

'end'         Keyword
' '           Text
'p2'          Name.Namespace
' '           Text
'// test comment\n' Comment.Single

'\n'          Text

'// Extension methods\n' Comment.Single

'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'String'      Name.Class
')'           Punctuation
'\n   '       Text
'def'         Keyword
' '           Text
'<'           Name.Function
' '           Text
'('           Punctuation
'y'           Name
':'           Punctuation
' '           Text
'String'      Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Boolean'     Name.Class
' '           Text
'='           Operator
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Elem'        Name.Class
')'           Punctuation
'\n   '       Text
'def'         Keyword
' '           Text
'+:'          Name.Function
' '           Text
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'Seq'         Name.Class
'['           Punctuation
'Elem'        Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'Seq'         Name.Class
'['           Punctuation
'Elem'        Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Number'      Name.Class
')'           Punctuation
'\n   '       Text
'infix'       Keyword
' '           Text
'def'         Keyword
' '           Text
'min'         Name.Function
' '           Text
'('           Punctuation
'y'           Name
':'           Punctuation
' '           Text
'Number'      Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Number'      Name.Class
' '           Text
'='           Operator
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'ss'          Name
':'           Punctuation
' '           Text
'Seq'         Name.Class
'['           Punctuation
'String'      Name.Class
']'           Punctuation
')'           Punctuation
'\n   '       Text
'def'         Keyword
' '           Text
'longestStrings' Name.Function
':'           Punctuation
' '           Text
'Seq'         Name.Class
'['           Punctuation
'String'      Name.Class
']'           Punctuation
' '           Text
'='           Operator
'\n      '    Text
'val'         Keyword.Declaration
' '           Text
'maxLength'   Name
' '           Text
'='           Operator
' '           Text
'ss'          Name
'.'           Punctuation
'map'         Name
'('           Punctuation
'_'           Name
'.'           Punctuation
'length'      Name
')'           Punctuation
'.'           Punctuation
'max'         Name
'\n      '    Text
'ss'          Name
'.'           Punctuation
'filter'      Name
'('           Punctuation
'_'           Name
'.'           Punctuation
'length'      Name
' '           Text
'=='          Operator
' '           Text
'maxLength'   Name
')'           Punctuation
'\n   '       Text
'def'         Keyword
' '           Text
'longestString' Name.Function
':'           Punctuation
' '           Text
'String'      Name.Class
' '           Text
'='           Operator
' '           Text
'longestStrings' Name
'.'           Punctuation
'head'        Name
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'ss'          Name
':'           Punctuation
' '           Text
'Seq'         Name.Class
'['           Punctuation
'String'      Name.Class
']'           Punctuation
')'           Punctuation
' '           Text
'{'           Punctuation
'\n   '       Text
'def'         Keyword
' '           Text
'longestStrings' Name.Function
':'           Punctuation
' '           Text
'Seq'         Name.Class
'['           Punctuation
'String'      Name.Class
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'{'           Punctuation
'\n      '    Text
'val'         Keyword.Declaration
' '           Text
'maxLength'   Name
' '           Text
'='           Operator
' '           Text
'ss'          Name
'.'           Punctuation
'map'         Name
'('           Punctuation
'_'           Name
'.'           Punctuation
'length'      Name
')'           Punctuation
'.'           Punctuation
'max'         Name
'\n      '    Text
'ss'          Name
'.'           Punctuation
'filter'      Name
'('           Punctuation
'_'           Name
'.'           Punctuation
'length'      Name
' '           Text
'=='          Operator
' '           Text
'maxLength'   Name
')'           Punctuation
'\n   '       Text
'}'           Punctuation
'\n  '        Text
'def'         Keyword
' '           Text
'longestString' Name.Function
':'           Punctuation
' '           Text
'String'      Name.Class
' '           Text
'='           Operator
' '           Text
'longestStrings' Name
'.'           Punctuation
'head'        Name
'\n'          Text

'}'           Punctuation
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'i'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'def'         Keyword
' '           Text
'isZero'      Name.Function
':'           Punctuation
' '           Text
'Boolean'     Name.Class
' '           Text
'='           Operator
' '           Text
'i'           Name
' '           Text
'=='          Operator
' '           Text
'0'           Literal.Number.Integer
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'i'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'def'         Keyword
' '           Text
'divide'      Name.Function
'('           Punctuation
'd'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Option'      Name.Class
'['           Punctuation
'('           Punctuation
'Int'         Name.Class
','           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
']'           Punctuation
' '           Text
'='           Operator
' '           Text
'???'         Operator
'\n'          Text

'extension'   Keyword
' '           Text
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Rational'    Name.Class
')'           Punctuation
'\n  '        Text
'infix'       Keyword
' '           Text
'def'         Keyword
' '           Text
'min'         Name.Function
'('           Punctuation
'that'        Name
' '           Text
'Rational'    Name.Class
')'           Punctuation
':'           Punctuation
' '           Text
'Rational'    Name.Class
' '           Text
'='           Operator
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n'          Text

'given'       Keyword
' '           Text
'['           Punctuation
'T'           Name.Class
':'           Punctuation
' '           Text
'Ordering'    Name.Class
']'           Punctuation
':'           Punctuation
' '           Text
'Ordering'    Name.Class
'['           Punctuation
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
']'           Punctuation
' '           Text
'with'        Keyword
'\n  '        Text
'extension'   Keyword
' '           Text
'('           Punctuation
'xs'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
'\n      '    Text
'def'         Keyword
' '           Text
'<'           Name.Function
' '           Text
'('           Punctuation
'ys'          Name
':'           Punctuation
' '           Text
'List'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
':'           Punctuation
' '           Text
'Boolean'     Name.Class
' '           Text
'='           Operator
' '           Text
'.'           Punctuation
'.'           Punctuation
'.'           Punctuation
'\n\n'        Text

'// Extends\n' Comment.Single

'trait'       Keyword
' '           Text
'A'           Name.Class
' '           Text
'extends'     Keyword
' '           Text
'B'           Name.Class
'\n'          Text

'trait'       Keyword
' '           Text
'A'           Name.Class
' '           Text
'extends'     Keyword
' '           Text
'('           Punctuation
'B'           Name.Class
' '           Text
'=>'          Operator
' '           Text
'B'           Name.Class
')'           Punctuation
'{'           Punctuation
'}'           Punctuation
'\n'          Text

'trait'       Keyword
' '           Text
'Color'       Name.Class
'\n'          Text

'object'      Keyword
' '           Text
'Red'         Name.Class
' '           Text
'extends'     Keyword
' '           Text
'Color'       Name.Class
'\n\n'        Text

'// Derives\n' Comment.Single

'enum'        Keyword
' '           Text
'Tree'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
' '           Text
'derives'     Keyword
' '           Text
'Eq'          Name.Class
','           Punctuation
' '           Text
'Ordering'    Name.Class
','           Punctuation
' '           Text
'Show'        Name.Class
' '           Text
'{'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Branch'      Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
'('           Punctuation
'left'        Name
':'           Punctuation
' '           Text
'Tree'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
','           Punctuation
' '           Text
'right'       Name
':'           Punctuation
' '           Text
'Tree'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
')'           Punctuation
'\n  '        Text
'case'        Keyword
' '           Text
'Leaf'        Name.Class
'['           Punctuation
'T'           Name.Class
']'           Punctuation
'('           Punctuation
'elem'        Name
':'           Punctuation
' '           Text
'T'           Name.Class
')'           Punctuation
'\n'          Text

'}'           Punctuation
'\n\n'        Text

'// Pattern matching\n' Comment.Single

'def'         Keyword
' '           Text
'f'           Name.Function
'('           Punctuation
'x'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
','           Punctuation
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Int'         Name.Class
')'           Punctuation
' '           Text
'='           Operator
' '           Text
'x'           Name
' '           Text
'match'       Keyword
' '           Text
'{'           Punctuation
'\n    '      Text
'case'        Keyword
' '           Text
'`y`'         Name
' '           Text
'=>'          Operator
' \n    '     Text
'case'        Keyword
'  '          Text
's'           Name
' '           Text
'@'           Operator
' '           Text
'Seq'         Name.Class
'('           Punctuation
'_'           Name
','           Punctuation
' '           Text
'_'           Name
','           Punctuation
' '           Text
'_'           Name
')'           Punctuation
' '           Text
'=>'          Operator
' \n    '     Text
'case'        Keyword
' '           Text
'Seq'         Name.Class
'('           Punctuation
'first'       Name
','           Punctuation
' '           Text
'tail'        Name
' '           Text
'@'           Operator
' '           Text
'_*'          Name
')'           Punctuation
' '           Text
'=>'          Operator
'\n    '      Text
'case'        Keyword
' '           Text
'first'       Name
' '           Text
'+:'          Operator
' '           Text
'tail'        Name
' '           Text
'=>'          Operator
'\n    '      Text
'case'        Keyword
' '           Text
'3'           Literal.Number.Integer
' '           Text
'|'           Operator
' '           Text
'5'           Literal.Number.Integer
' '           Text
'|'           Operator
' '           Text
'6'           Literal.Number.Integer
' '           Text
'=>'          Operator
'\n    '      Text
'case'        Keyword
' '           Text
'y'           Name
':'           Punctuation
' '           Text
'Number'      Name.Class
' '           Text
'=>'          Operator
' '           Text
'y'           Name
'.'           Punctuation
'n'           Name
'\n    '      Text
'case'        Keyword
' '           Text
'Lit'         Name.Class
'('           Punctuation
'n'           Name
')'           Punctuation
'        '    Text
'=>'          Operator
' '           Text
'n'           Name
'\n    '      Text
'case'        Keyword
' '           Text
'IsZero'      Name.Class
'('           Punctuation
'u'           Name
')'           Punctuation
'     '       Text
'=>'          Operator
' '           Text
'eval'        Name
'('           Punctuation
'u'           Name
')'           Punctuation
' '           Text
'=='          Operator
' '           Text
'0'           Literal.Number.Integer
'\n    '      Text
'case'        Keyword
' '           Text
'_'           Name
' '           Text
'=>'          Operator
' '           Text
'15'          Literal.Number.Integer
'\n'          Text

'}'           Punctuation
'\n\n'        Text

'// Operators\n' Comment.Single

'1'           Literal.Number.Integer
' '           Text
'::'          Operator
' '           Text
'2'           Literal.Number.Integer
' '           Text
'::'          Operator
' '           Text
'Nil'         Name.Class
'\n'          Text

'a'           Name
' '           Text
'++'          Operator
' '           Text
'b'           Name
'\n'          Text

'a'           Name
' '           Text
':+'          Operator
' '           Text
'b'           Name
'\n'          Text

'a'           Name
' '           Text
'+:'          Operator
' '           Text
'b'           Name
'\n'          Text

'a'           Name
' '           Text
':++'         Operator
' '           Text
'b'           Name
'\n'          Text

'a'           Name
' '           Text
'++:'         Operator
' '           Text
'b'           Name
'\n'          Text

'a'           Name
' '           Text
'+'           Operator
' '           Text
'b'           Name
'\n'          Text
