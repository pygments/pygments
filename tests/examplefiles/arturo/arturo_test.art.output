'#! home/.arturo/bin' Comment.Hashbang
'\n'          Text

'\n'          Text

'; this is a comment' Comment.Single
'\n'          Text

'; this is another comment' Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; VARIABLES & VALUES' Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; numbers'   Comment.Single
'\n'          Text

'a1:'         Name.Label
' '           Text
'2'           Literal.Number.Integer
'\n'          Text

'a2:'         Name.Label
' '           Text
'3.14'        Literal.Number.Float
'\n'          Text

'a3:'         Name.Label
' '           Text
'to'          Name.Builtin
' '           Text
':complex'    Keyword.Type
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'2.0'         Literal.Number.Float
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; 1.0+2.0i'  Comment.Single
'\n'          Text

'\n'          Text

'; strings'   Comment.Single
'\n'          Text

'c1:'         Name.Label
' '           Text
'"'           Literal.String.Double
'this is a string' Literal.String
'"'           Literal.String.Double
'\n'          Text

'c2:'         Name.Label
' '           Text
'{'           Literal.String.Single
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
't'           Literal.String
'h'           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'a'           Literal.String
' '           Literal.String
'm'           Literal.String
'u'           Literal.String
'l'           Literal.String
't'           Literal.String
'i'           Literal.String
'l'           Literal.String
'i'           Literal.String
'n'           Literal.String
'e'           Literal.String
' '           Literal.String
's'           Literal.String
't'           Literal.String
'r'           Literal.String
'i'           Literal.String
'n'           Literal.String
'g'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
't'           Literal.String
'h'           Literal.String
'a'           Literal.String
't'           Literal.String
' '           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'i'           Literal.String
'n'           Literal.String
'd'           Literal.String
'e'           Literal.String
'n'           Literal.String
't'           Literal.String
'a'           Literal.String
't'           Literal.String
'i'           Literal.String
'o'           Literal.String
'n'           Literal.String
'-'           Literal.String
'a'           Literal.String
'g'           Literal.String
'n'           Literal.String
'o'           Literal.String
's'           Literal.String
't'           Literal.String
'i'           Literal.String
'c'           Literal.String
'\n'          Literal.String

'}'           Literal.String.Single
'\n'          Text

'\n'          Text

'c3:'         Name.Label
' '           Text
'{:'          Literal.String.Double
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
't'           Literal.String
'h'           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'i'           Literal.String
's'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'a'           Literal.String
' '           Literal.String
'v'           Literal.String
'e'           Literal.String
'r'           Literal.String
'b'           Literal.String
'a'           Literal.String
't'           Literal.String
'i'           Literal.String
'm'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'm'           Literal.String
'u'           Literal.String
'l'           Literal.String
't'           Literal.String
'i'           Literal.String
'l'           Literal.String
'i'           Literal.String
'n'           Literal.String
'e'           Literal.String
' '           Literal.String
's'           Literal.String
't'           Literal.String
'r'           Literal.String
'i'           Literal.String
'n'           Literal.String
'g'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'w'           Literal.String
'h'           Literal.String
'i'           Literal.String
'c'           Literal.String
'h'           Literal.String
' '           Literal.String
'w'           Literal.String
'i'           Literal.String
'l'           Literal.String
'l'           Literal.String
' '           Literal.String
'r'           Literal.String
'e'           Literal.String
'm'           Literal.String
'a'           Literal.String
'i'           Literal.String
'n'           Literal.String
' '           Literal.String
'e'           Literal.String
'x'           Literal.String
'a'           Literal.String
'c'           Literal.String
't'           Literal.String
'l'           Literal.String
'y'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'a'           Literal.String
's'           Literal.String
' '           Literal.String
't'           Literal.String
'h'           Literal.String
'e'           Literal.String
' '           Literal.String
'o'           Literal.String
'r'           Literal.String
'i'           Literal.String
'g'           Literal.String
'i'           Literal.String
'n'           Literal.String
'a'           Literal.String
'l'           Literal.String
'\n'          Literal.String

':}'          Literal.String.Double
'\n'          Text

'\n'          Text

'c4:'         Name.Label
' '           Text
'{'           Literal.String.Single
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
't'           Literal.String
'h'           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'a'           Literal.String
' '           Literal.String
'm'           Literal.String
'u'           Literal.String
'l'           Literal.String
't'           Literal.String
'i'           Literal.String
'l'           Literal.String
'i'           Literal.String
'n'           Literal.String
'e'           Literal.String
' '           Literal.String
's'           Literal.String
't'           Literal.String
'r'           Literal.String
'i'           Literal.String
'n'           Literal.String
'g'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'w'           Literal.String
'i'           Literal.String
't'           Literal.String
'h'           Literal.String
' '           Literal.String
'|'           Literal.String.Interpol
'a'           Text
'1'           Text
'|'           Literal.String.Interpol
' '           Literal.String
'l'           Literal.String
'i'           Literal.String
'n'           Literal.String
'e'           Literal.String
's'           Literal.String
'.'           Literal.String
'\n'          Literal.String

'}'           Literal.String.Single
'\n'          Text

'\n'          Text

'annotatedStrings:' Name.Label
' '           Text
'{'           Literal.String.Double
'!'           Literal.String.Interpol
'md'          Literal.String.Interpol
'\n'          Text.Whitespace

' '           Text
' '           Text
' '           Text
' '           Text
'#'           Text
' '           Text
'This'        Text
' '           Text
'is'          Text
' '           Text
'a'           Text
' '           Text
'markdown'    Text
' '           Text
'example'     Text
'\n'          Text

'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
"I'm"         Text
' '           Text
'a'           Text
' '           Text
'paragraph'   Text
'\n'          Text

'\n    > '    Keyword
"I'm a blockquote\n" Generic.Emph

'\n    ```'   Literal.String.Backtick
'c'           Literal.String.Backtick
'\n'          Text

'    '        Text.Whitespace
'#'           Comment.Preproc
'include'     Comment.Preproc
' '           Text.Whitespace
'<stdio.h>'   Comment.PreprocFile
'\n'          Comment.Preproc

'    '        Text.Whitespace
'int'         Keyword.Type
' '           Text.Whitespace
'main'        Name.Function
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'\n'          Text.Whitespace

'        '    Text.Whitespace
'char'        Keyword.Type
' '           Text.Whitespace
'*'           Operator
' '           Text.Whitespace
'name'        Name
' '           Text.Whitespace
'='           Operator
' '           Text.Whitespace
'"'           Literal.String
'World'       Literal.String
'"'           Literal.String
';'           Punctuation
'\n'          Text.Whitespace

'        '    Text.Whitespace
'printf'      Name
'('           Punctuation
'"'           Literal.String
'Hello, %s!'  Literal.String
'"'           Literal.String
','           Punctuation
' '           Text.Whitespace
'name'        Name
')'           Punctuation
';'           Punctuation
'\n'          Text.Whitespace

'        '    Text.Whitespace
'printf'      Name
'('           Punctuation
' '           Text.Whitespace
'"'           Literal.String
"I'm a highlighted C code" Literal.String
'"'           Literal.String
'\n'          Text.Whitespace

'                ' Text.Whitespace
'"'           Literal.String
'inside Markdown highlighted code,' Literal.String
'"'           Literal.String
'\n'          Text.Whitespace

'                ' Text.Whitespace
'"'           Literal.String
'inside Arturo. Awesome!' Literal.String
'"'           Literal.String
'\n'          Text.Whitespace

'            ' Text.Whitespace
')'           Punctuation
';'           Punctuation
'\n'          Text.Whitespace

'        '    Text.Whitespace
'return'      Keyword
' '           Text.Whitespace
'0'           Literal.Number.Integer
';'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'}'           Punctuation
'\n'          Text.Whitespace

'    ```\n'   Literal.String.Backtick

'}'           Literal.String.Double
'\n'          Text

'\n'          Text

'smartString:' Name.Label
' '           Text
'»'           Literal.String.Single
"I'm a string until the end of line    ; I'm not a comment" Literal.String
'\n'          Literal.String.Single

'safeString:' Name.Label
' '           Text
'«««'         Literal.String.Double
"I'm a safe string. 🙂" Literal.String
'»»»'         Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
"; I'm a comment" Comment.Single
'\n'          Text

'\n'          Text

'; characters' Comment.Single
'\n'          Text

'ch:'         Name.Label
' '           Text
'`c`'         Literal.String.Char
'\n'          Text

'\n'          Text

'; blocks/arrays' Comment.Single
'\n'          Text

'd:'          Name.Label
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

'\n'          Text

'; dictionaries' Comment.Single
'\n'          Text

'e:'          Name.Label
' '           Text
'#'           Operator
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'name:'       Name.Label
' '           Text
'"'           Literal.String.Double
'John'        Literal.String
'"'           Literal.String.Double
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'surname:'    Name.Label
' '           Text
'"'           Literal.String.Double
'Doe'         Literal.String
'"'           Literal.String.Double
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'age:'        Name.Label
' '           Text
'34'          Literal.Number.Integer
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'likes:'      Name.Label
' '           Text
'['           Punctuation
'p'           Text
'i'           Text
'z'           Text
'z'           Text
'a'           Text
' '           Text
's'           Text
'p'           Text
'a'           Text
'g'           Text
'h'           Text
'e'           Text
't'           Text
't'           Text
'i'           Text
']'           Punctuation
'\n'          Text

']'           Punctuation
'\n'          Text

'\n'          Text

'; yes, functions are values too' Comment.Single
'\n'          Text

'f:'          Name.Label
' '           Text
'function'    Name.Builtin
' '           Text
'['           Punctuation
'x'           Text
']'           Punctuation
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'2'           Literal.Number.Integer
' '           Text
'*'           Operator
' '           Text
'x'           Text
'\n'          Text

']'           Punctuation
'\n'          Text

'\n'          Text

'; colors - right, you can directly define them as well!' Comment.Single
'\n'          Text

'g1:'         Name.Label
' '           Text
'#red'        Name.Constant
'\n'          Text

'g2:'         Name.Label
' '           Text
'#0077BF'     Name.Constant
'\n'          Text

'\n'          Text

'; dates'     Comment.Single
'\n'          Text

'h:'          Name.Label
' '           Text
'now'         Name.Builtin
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; 2021-05-03T17:10:48+02:00' Comment.Single
'\n'          Text

'\n'          Text

'; logical values' Comment.Single
'\n'          Text

'i1:'         Name.Label
' '           Text
'true'        Name.Constant
'\n'          Text

'i2:'         Name.Label
' '           Text
'false'       Name.Constant
'\n'          Text

'i3:'         Name.Label
' '           Text
'maybe'       Name.Constant
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; BASIC OPERATORS' Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; simple arithmetic' Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'+'           Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 2'      Comment.Single
'\n'          Text

'8'           Literal.Number.Integer
' '           Text
'-'           Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 7'      Comment.Single
'\n'          Text

'4.2'         Literal.Number.Float
' '           Text
'-'           Operator
' '           Text
'1.1'         Literal.Number.Float
' '           Text
' '           Text
' '           Text
'; => 3.1'    Comment.Single
'\n'          Text

'10'          Literal.Number.Integer
' '           Text
'*'           Operator
' '           Text
'2'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 20'     Comment.Single
'\n'          Text

'35'          Literal.Number.Integer
' '           Text
'/'           Text
' '           Text
'4'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 8'      Comment.Single
'\n'          Text

'35'          Literal.Number.Integer
' '           Text
'/'           Text
'/'           Text
' '           Text
'4'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 8.75'   Comment.Single
'\n'          Text

'2'           Literal.Number.Integer
' '           Text
'^'           Operator
' '           Text
'5'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 32'     Comment.Single
'\n'          Text

'5'           Literal.Number.Integer
' '           Text
'%'           Operator
' '           Text
'3'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 2'      Comment.Single
'\n'          Text

'\n'          Text

'; bitwise operators' Comment.Single
'\n'          Text

'and'         Name.Builtin
' '           Text
'3'           Literal.Number.Integer
' '           Text
'5'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 1'      Comment.Single
'\n'          Text

'or'          Name.Builtin
' '           Text
'3'           Literal.Number.Integer
' '           Text
'5'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 7'      Comment.Single
'\n'          Text

'xor'         Name.Builtin
' '           Text
'3'           Literal.Number.Integer
' '           Text
'5'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 6'      Comment.Single
'\n'          Text

'\n'          Text

'; pre-defined constants' Comment.Single
'\n'          Text

'pi'          Name.Builtin
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 3.141592653589793' Comment.Single
'\n'          Text

'epsilon'     Name.Builtin
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 2.718281828459045' Comment.Single
'\n'          Text

'null'        Name.Builtin
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => null'   Comment.Single
'\n'          Text

'true'        Name.Constant
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'false'       Name.Constant
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; COMPARISON OPERATORS' Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; equality'  Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'2'           Literal.Number.Integer
' '           Text
'='           Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'\n'          Text

'; inequality' Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'<>'          Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'2'           Literal.Number.Integer
' '           Text
'<>'          Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'\n'          Text

'; more comparisons' Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'<'           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'='           Operator
'<'           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'10'          Literal.Number.Integer
' '           Text
'='           Operator
'<'           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'>'           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'1'           Literal.Number.Integer
' '           Text
'>'           Operator
'='           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'11'          Literal.Number.Integer
' '           Text
'>'           Operator
'='           Operator
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; CONDITIONALS' Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; logical operators' Comment.Single
'\n'          Text

'and?'        Name.Builtin
' '           Text
'true'        Name.Constant
' '           Text
'true'        Name.Constant
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'and?'        Name.Builtin
' '           Text
'true'        Name.Constant
' '           Text
'false'       Name.Constant
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'or?'         Name.Builtin
' '           Text
'true'        Name.Constant
' '           Text
'false'       Name.Constant
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'or?'         Name.Builtin
' '           Text
'false'       Name.Constant
' '           Text
'false'       Name.Constant
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'\n'          Text

'and?'        Name.Builtin
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
'='           Operator
'2'           Literal.Number.Integer
']'           Punctuation
'['           Punctuation
'2'           Literal.Number.Integer
'<'           Operator
'3'           Literal.Number.Integer
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; (the second block will not be evaluated)' Comment.Single
'\n'          Text

'\n'          Text

'; simple if statements' Comment.Single
'\n'          Text

'if'          Name.Builtin
' '           Text
'2'           Literal.Number.Integer
' '           Text
'>'           Operator
' '           Text
'1'           Literal.Number.Integer
' '           Text
'['           Punctuation
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'yes!'        Literal.String
'"'           Literal.String.Double
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
'; yes!'      Comment.Single
'\n'          Text

'if'          Name.Builtin
' '           Text
'3'           Literal.Number.Integer
' '           Text
'<>'          Operator
' '           Text
'2'           Literal.Number.Integer
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'true!'       Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
'; true!'     Comment.Single
'\n'          Text

'\n'          Text

'; if/else statements' Comment.Single
'\n'          Text

'if?'         Name.Builtin
' '           Text
'2'           Literal.Number.Integer
' '           Text
'>'           Operator
' '           Text
'3'           Literal.Number.Integer
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'2 is greater than 3' Literal.String
'"'           Literal.String.Double
'\n'          Text

'else'        Name.Builtin
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'2 is not greater than 3' Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; 2 is not greater than 3' Comment.Single
'\n'          Text

'\n'          Text

'; switch statements' Comment.Single
'\n'          Text

'switch'      Name.Builtin
' '           Text
'2'           Literal.Number.Integer
' '           Text
'>'           Operator
' '           Text
'3'           Literal.Number.Integer
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'2 is greater than 3' Literal.String
'"'           Literal.String.Double
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'2 is not greater than 3' Literal.String
'"'           Literal.String.Double
' '           Text
'; 2 is not greater than 3' Comment.Single
'\n'          Text

'\n'          Text

'a:'          Name.Label
' '           Text
'('           Punctuation
'2'           Literal.Number.Integer
' '           Text
'>'           Operator
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
'['           Punctuation
'"'           Literal.String.Double
'yes'         Literal.String
'"'           Literal.String.Double
']'           Punctuation
'['           Punctuation
'"'           Literal.String.Double
'no'          Literal.String
'"'           Literal.String.Double
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; a: "no"'   Comment.Single
'\n'          Text

'a:'          Name.Label
' '           Text
'('           Punctuation
'2'           Literal.Number.Integer
' '           Text
'>'           Operator
' '           Text
'3'           Literal.Number.Integer
')'           Punctuation
'?'           Text
' '           Text
'->'          Name.Decorator
' '           Text
'"'           Literal.String.Double
'yes'         Literal.String
'"'           Literal.String.Double
' '           Text
'->'          Name.Decorator
' '           Text
'"'           Literal.String.Double
'no'          Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
'; a: "no" (exactly the same as above)' Comment.Single
'\n'          Text

'\n'          Text

'; case/when statements' Comment.Single
'\n'          Text

'case'        Name.Builtin
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'when?'       Name.Builtin
' '           Text
'['           Punctuation
'>'           Operator
'2'           Literal.Number.Integer
']'           Punctuation
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'1 is greater than 2. what?!' Literal.String
'"'           Literal.String.Double
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'when?'       Name.Builtin
' '           Text
'['           Punctuation
'<'           Operator
'0'           Literal.Number.Integer
']'           Punctuation
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'1 is less than 0. nope...' Literal.String
'"'           Literal.String.Double
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'else'        Name.Builtin
' '           Text
'->'          Name.Decorator
' '           Text
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'here we are!' Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; here we are!' Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; LOOPS'     Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; with `loop`' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'4'           Literal.Number.Integer
' '           Text
'5'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

'loop'        Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
"'x"          Keyword.Declaration
' '           Text
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'x ='         Literal.String
'"'           Literal.String.Double
' '           Text
'x'           Text
']'           Punctuation
'\n'          Text

']'           Punctuation
'\n'          Text

'; x = 1'     Comment.Single
'\n'          Text

'; x = 4'     Comment.Single
'\n'          Text

'; x = 5'     Comment.Single
'\n'          Text

'; x = 3'     Comment.Single
'\n'          Text

'\n'          Text

'; with loop and custom index' Comment.Single
'\n'          Text

'loop'        Name.Builtin
'.with'       Name.Attribute
':'           Text
"'i"          Keyword.Declaration
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
"'x"          Keyword.Declaration
' '           Text
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'item at position' Literal.String
'"'           Literal.String.Double
' '           Text
'i'           Text
' '           Text
'"'           Literal.String.Double
'=>'          Literal.String
'"'           Literal.String.Double
' '           Text
'x'           Text
']'           Punctuation
'\n'          Text

']'           Punctuation
'\n'          Text

'; item at position 0 => 1' Comment.Single
'\n'          Text

'; item at position 1 => 4' Comment.Single
'\n'          Text

'; item at position 2 => 5' Comment.Single
'\n'          Text

'; item at position 3 => 3' Comment.Single
'\n'          Text

'\n'          Text

'; using ranges' Comment.Single
'\n'          Text

'loop'        Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'3'           Literal.Number.Integer
' '           Text
"'x"          Keyword.Declaration
' '           Text
'->'          Name.Decorator
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
"; since it's a single statement" Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'x'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
"; there's no need for [block] notation" Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; we can wrap it up using the `->` syntactic sugar' Comment.Single
'\n'          Text

'\n'          Text

'loop'        Name.Builtin
' '           Text
'`a`'         Literal.String.Char
'..'          Operator
'`c`'         Literal.String.Char
' '           Text
"'ch"         Keyword.Declaration
' '           Text
'->'          Name.Decorator
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'c'           Text
'h'           Text
'\n'          Text

'; a'         Comment.Single
'\n'          Text

'; b'         Comment.Single
'\n'          Text

'; c'         Comment.Single
'\n'          Text

'\n'          Text

'; picking multiple items' Comment.Single
'\n'          Text

'loop'        Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'['           Punctuation
'x'           Text
' '           Text
'y'           Text
']'           Punctuation
' '           Text
'->'          Name.Decorator
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'x ='         Literal.String
'"'           Literal.String.Double
' '           Text
'x'           Text
' '           Text
'"'           Literal.String.Double
', y ='       Literal.String
'"'           Literal.String.Double
' '           Text
'y'           Text
']'           Punctuation
'\n'          Text

'; x = 1 , y = 2' Comment.Single
'\n'          Text

'; x = 3 , y = 4' Comment.Single
'\n'          Text

'; x = 5 , y = 6' Comment.Single
'\n'          Text

'; x = 7 , y = 8' Comment.Single
'\n'          Text

'; x = 9 , y = 10' Comment.Single
'\n'          Text

'\n'          Text

'; looping through a dictionary' Comment.Single
'\n'          Text

'dict:'       Name.Label
' '           Text
'#'           Operator
'['           Punctuation
'name:'       Name.Label
' '           Text
'"'           Literal.String.Double
'John'        Literal.String
'"'           Literal.String.Double
','           Punctuation
' '           Text
'surname:'    Name.Label
' '           Text
'"'           Literal.String.Double
'Doe'         Literal.String
'"'           Literal.String.Double
','           Punctuation
' '           Text
'age:'        Name.Label
' '           Text
'34'          Literal.Number.Integer
']'           Punctuation
'\n'          Text

'loop'        Name.Builtin
' '           Text
'd'           Text
'i'           Text
'c'           Text
't'           Text
' '           Text
'['           Punctuation
'k'           Text
'e'           Text
'y'           Text
' '           Text
'v'           Text
'a'           Text
'l'           Text
'u'           Text
'e'           Text
']'           Punctuation
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'['           Punctuation
'k'           Text
'e'           Text
'y'           Text
' '           Text
'"'           Literal.String.Double
'->'          Literal.String
'"'           Literal.String.Double
' '           Text
'v'           Text
'a'           Text
'l'           Text
'u'           Text
'e'           Text
']'           Punctuation
'\n'          Text

']'           Punctuation
'\n'          Text

'; name -> John' Comment.Single
'\n'          Text

'; surname -> Doe' Comment.Single
'\n'          Text

'; age -> 34' Comment.Single
'\n'          Text

'\n'          Text

'; while loops' Comment.Single
'\n'          Text

'i:'          Name.Label
' '           Text
'new'         Name.Builtin
' '           Text
'0'           Literal.Number.Integer
'\n'          Text

'while'       Name.Builtin
' '           Text
'['           Punctuation
'i'           Text
'<'           Operator
'3'           Literal.Number.Integer
']'           Punctuation
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'i ='         Literal.String
'"'           Literal.String.Double
' '           Text
'i'           Text
']'           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'inc'         Name.Builtin
' '           Text
"'i"          Keyword.Declaration
'\n'          Text

']'           Punctuation
'\n'          Text

'; i = 0'     Comment.Single
'\n'          Text

'; i = 1'     Comment.Single
'\n'          Text

'; i = 2'     Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; STRINGS'   Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; case'      Comment.Single
'\n'          Text

'a:'          Name.Label
' '           Text
'"'           Literal.String.Double
'tHis Is a stRinG' Literal.String
'"'           Literal.String.Double
'\n'          Text

'print'       Name.Builtin
' '           Text
'upper'       Name.Builtin
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; THIS IS A STRING' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'lower'       Name.Builtin
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; this is a string' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'capitalize'  Name.Builtin
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; THis Is a stRinG' Comment.Single
'\n'          Text

'\n'          Text

'; concatenation' Comment.Single
'\n'          Text

'a:'          Name.Label
' '           Text
'"'           Literal.String.Double
'Hello '      Literal.String
'"'           Literal.String.Double
' '           Text
'+'           Operator
'+'           Operator
' '           Text
'"'           Literal.String.Double
'World!'      Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; a: "Hello World!"' Comment.Single
'\n'          Text

'\n'          Text

'; strings as an array' Comment.Single
'\n'          Text

'split'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [h e l l o]' Comment.Single
'\n'          Text

'split'       Name.Builtin
'.words'      Name.Attribute
' '           Text
'"'           Literal.String.Double
'hello world' Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
'; => [hello world]' Comment.Single
'\n'          Text

'\n'          Text

'print'       Name.Builtin
' '           Text
'first'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; h'         Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'last'        Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; o'         Comment.Single
'\n'          Text

'\n'          Text

'; conversion' Comment.Single
'\n'          Text

'to'          Name.Builtin
' '           Text
':string'     Keyword.Type
' '           Text
'123'         Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => "123"'  Comment.Single
'\n'          Text

'to'          Name.Builtin
' '           Text
':integer'    Keyword.Type
' '           Text
'"'           Literal.String.Double
'123'         Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 123'    Comment.Single
'\n'          Text

'\n'          Text

'; joining strings together' Comment.Single
'\n'          Text

'join'        Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'world'       Literal.String
'"'           Literal.String.Double
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => "helloworld"' Comment.Single
'\n'          Text

'join'        Name.Builtin
'.with'       Name.Attribute
':'           Text
'"'           Literal.String.Double
'-'           Literal.String
'"'           Literal.String.Double
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'world'       Literal.String
'"'           Literal.String.Double
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => "hello-world"' Comment.Single
'\n'          Text

'\n'          Text

'; string interpolation' Comment.Single
'\n'          Text

'x:'          Name.Label
' '           Text
'2'           Literal.Number.Integer
'\n'          Text

'print'       Name.Builtin
' '           Text
'~'           Operator
'"'           Literal.String.Double
'x = '        Literal.String
'|'           Literal.String.Interpol
'x'           Text
'|'           Literal.String.Interpol
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; x = 2'     Comment.Single
'\n'          Text

'\n'          Text

'; interpolation with `print`' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'x ='         Literal.String
'"'           Literal.String.Double
' '           Text
'x'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; x = 2'     Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; (`print` works by calculating the given block' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
';  and joining the different values as strings' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
';  with a single space between them)' Comment.Single
'\n'          Text

'\n'          Text

'; templates' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'render'      Name.Builtin
'.template'   Name.Attribute
' '           Text
'{'           Literal.String.Single
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'<||'         Literal.String.Interpol
'='           Operator
' '           Text
'switch'      Name.Builtin
' '           Text
'x'           Text
'='           Operator
'2'           Literal.Number.Integer
' '           Text
'['           Punctuation
' '           Text
'||>'         Literal.String.Interpol
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'Y'           Literal.String
'e'           Literal.String
's'           Literal.String
','           Literal.String
' '           Literal.String
'x'           Literal.String
' '           Literal.String
'='           Literal.String
' '           Literal.String
'2'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'<||'         Literal.String.Interpol
']'           Punctuation
'['           Punctuation
'||>'         Literal.String.Interpol
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'N'           Literal.String
'o'           Literal.String
','           Literal.String
' '           Literal.String
'x'           Literal.String
' '           Literal.String
'i'           Literal.String
's'           Literal.String
' '           Literal.String
'n'           Literal.String
'o'           Literal.String
't'           Literal.String
' '           Literal.String
'2'           Literal.String
'\n'          Literal.String

' '           Literal.String
' '           Literal.String
' '           Literal.String
' '           Literal.String
'<||'         Literal.String.Interpol
']'           Punctuation
'||>'         Literal.String.Interpol
'\n'          Literal.String

'}'           Literal.String.Single
' '           Text
'; Yes, x = 2' Comment.Single
'\n'          Text

'\n'          Text

'; matching'  Comment.Single
'\n'          Text

'prefix?'     Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'he'          Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'suffix?'     Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'he'          Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'\n'          Text

'contains?'   Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'll'          Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'contains?'   Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'he'          Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'contains?'   Name.Builtin
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'x'           Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'\n'          Text

'in?'         Name.Builtin
' '           Text
'"'           Literal.String.Double
'll'          Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => true'   Comment.Single
'\n'          Text

'in?'         Name.Builtin
' '           Text
'"'           Literal.String.Double
'x'           Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'hello'       Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => false'  Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; BLOCKS'    Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; calculate a block' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'1'           Literal.Number.Integer
'+'           Operator
'1'           Literal.Number.Integer
' '           Text
'1'           Literal.Number.Integer
'+'           Operator
'1'           Literal.Number.Integer
'+'           Operator
'1'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

'@'           Operator
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [1 2 3]' Comment.Single
'\n'          Text

'\n'          Text

'; execute a block' Comment.Single
'\n'          Text

'sth:'        Name.Label
' '           Text
'['           Punctuation
'print'       Name.Builtin
' '           Text
'"'           Literal.String.Double
'Hello world' Literal.String
'"'           Literal.String.Double
']'           Punctuation
' '           Text
' '           Text
'; this is perfectly valid,' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; could contain *anything*' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; and will not be executed...' Comment.Single
'\n'          Text

'\n'          Text

'do'          Name.Builtin
' '           Text
's'           Text
't'           Text
'h'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; Hello world' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; (...until we tell it to)' Comment.Single
'\n'          Text

'\n'          Text

'; array indexing' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'zero'        Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'two'         Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'three'       Literal.String
'"'           Literal.String.Double
']'           Punctuation
'\n'          Text

'print'       Name.Builtin
' '           Text
'first'       Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; zero'      Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
'\\'          Operator
'0'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; zero'      Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'last'        Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; three'     Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
'\\'          Operator
'3'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; three'     Comment.Single
'\n'          Text

'\n'          Text

'x:'          Name.Label
' '           Text
'2'           Literal.Number.Integer
'\n'          Text

'print'       Name.Builtin
' '           Text
'get'         Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
'x'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; two'       Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
'\\'          Operator
'['           Punctuation
'x'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; two'       Comment.Single
'\n'          Text

'\n'          Text

'; setting an array element' Comment.Single
'\n'          Text

'a'           Text
'r'           Text
'r'           Text
'\\'          Operator
'0'           Literal.Number.Integer
':'           Text
' '           Text
'"'           Literal.String.Double
'nada'        Literal.String
'"'           Literal.String.Double
'\n'          Text

'set'         Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
'2'           Literal.Number.Integer
' '           Text
'"'           Literal.String.Double
'dos'         Literal.String
'"'           Literal.String.Double
'\n'          Text

'print'       Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; nada one dos three' Comment.Single
'\n'          Text

'\n'          Text

'; adding elements to an array' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'new'         Name.Builtin
' '           Text
'['           Punctuation
']'           Punctuation
'\n'          Text

"'arr"        Keyword.Declaration
' '           Text
'+'           Operator
'+'           Operator
' '           Text
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
'\n'          Text

"'arr"        Keyword.Declaration
' '           Text
'+'           Operator
'+'           Operator
' '           Text
'"'           Literal.String.Double
'two'         Literal.String
'"'           Literal.String.Double
'\n'          Text

'print'       Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; one two'   Comment.Single
'\n'          Text

'\n'          Text

'; remove elements from an array' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'new'         Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'two'         Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'three'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'four'        Literal.String
'"'           Literal.String.Double
']'           Punctuation
'\n'          Text

"'arr"        Keyword.Declaration
' '           Text
'-'           Operator
'-'           Operator
' '           Text
'"'           Literal.String.Double
'two'         Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; arr: ["one" "three" "four"]' Comment.Single
'\n'          Text

'remove'      Name.Builtin
' '           Text
"'arr"        Keyword.Declaration
' '           Text
'.index'      Name.Attribute
' '           Text
'0'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; arr: ["three" "four"]' Comment.Single
'\n'          Text

'\n'          Text

'; getting the size of an array' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
' '           Text
'2'           Literal.Number.Integer
' '           Text
'"'           Literal.String.Double
'three'       Literal.String
'"'           Literal.String.Double
' '           Text
'4'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

'print'       Name.Builtin
' '           Text
'size'        Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; 4'         Comment.Single
'\n'          Text

'\n'          Text

'; getting a slice of an array' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'slice'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'two'         Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'three'       Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'four'        Literal.String
'"'           Literal.String.Double
']'           Punctuation
' '           Text
'0'           Literal.Number.Integer
' '           Text
'1'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; one two'   Comment.Single
'\n'          Text

'\n'          Text

'; check if array contains a specific element' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'contains?'   Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
' '           Text
'; true'      Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'contains?'   Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
'"'           Literal.String.Double
'five'        Literal.String
'"'           Literal.String.Double
' '           Text
' '           Text
'; false'     Comment.Single
'\n'          Text

'\n'          Text

'; sorting array' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'5'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
' '           Text
'4'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

'sort'        Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [1 2 3 4 5]' Comment.Single
'\n'          Text

'sort'        Name.Builtin
'.descending' Name.Attribute
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [5 4 3 2 1]' Comment.Single
'\n'          Text

'\n'          Text

'; mapping values' Comment.Single
'\n'          Text

'map'         Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'['           Punctuation
'x'           Text
']'           Punctuation
'['           Punctuation
'2'           Literal.Number.Integer
'*'           Operator
'x'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [2 4 6 8 10 12 14 16 18 20]' Comment.Single
'\n'          Text

'map'         Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
"'x"          Keyword.Declaration
' '           Text
'->'          Name.Decorator
' '           Text
'2'           Literal.Number.Integer
'*'           Operator
'x'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; same as above' Comment.Single
'\n'          Text

'map'         Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'='           Operator
'>'           Operator
' '           Text
'['           Punctuation
'2'           Literal.Number.Integer
'*'           Operator
'&'           Operator
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; same as above' Comment.Single
'\n'          Text

'map'         Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'='           Operator
'>'           Operator
' '           Text
'['           Punctuation
'2'           Literal.Number.Integer
'*'           Operator
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; same as above' Comment.Single
'\n'          Text

'\n'          Text

'; selecting/filtering array values' Comment.Single
'\n'          Text

'select'      Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'['           Punctuation
'x'           Text
']'           Punctuation
'['           Punctuation
'odd?'        Name.Builtin
' '           Text
'x'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
'; => [1 3 5 7 9]' Comment.Single
'\n'          Text

'select'      Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'='           Operator
'>'           Operator
' '           Text
'odd?'        Name.Builtin
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; same as above' Comment.Single
'\n'          Text

'\n'          Text

'filter'      Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'='           Operator
'>'           Operator
' '           Text
'odd?'        Name.Builtin
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [2 4 6 8 10]' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; (now, we leave out all odd numbers -' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
';  while select keeps them)' Comment.Single
'\n'          Text

'\n'          Text

'; misc operations' Comment.Single
'\n'          Text

'arr:'        Name.Label
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'one'         Literal.String
'"'           Literal.String.Double
' '           Text
'2'           Literal.Number.Integer
' '           Text
'"'           Literal.String.Double
'three'       Literal.String
'"'           Literal.String.Double
' '           Text
'4'           Literal.Number.Integer
']'           Punctuation
'\n'          Text

'reverse'     Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [4 "three" 2 "one"]' Comment.Single
'\n'          Text

'shuffle'     Name.Builtin
' '           Text
'a'           Text
'r'           Text
'r'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [2 4 "three" "one"]' Comment.Single
'\n'          Text

'unique'      Name.Builtin
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
' '           Text
'1'           Literal.Number.Integer
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [1 2 3]' Comment.Single
'\n'          Text

'permutate'   Name.Builtin
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [[1 2 3] [1 3 2] [3 1 2] [2 1 3] [2 3 1] [3 2 1]]' Comment.Single
'\n'          Text

'take'        Name.Builtin
' '           Text
'1'           Literal.Number.Integer
'..'          Operator
'10'          Literal.Number.Integer
' '           Text
'3'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [1 2 3]' Comment.Single
'\n'          Text

'repeat'      Name.Builtin
' '           Text
'['           Punctuation
'1'           Literal.Number.Integer
' '           Text
'2'           Literal.Number.Integer
']'           Punctuation
' '           Text
'3'           Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => [1 2 1 2 1 2]' Comment.Single
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; FUNCTIONS' Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; declaring a function' Comment.Single
'\n'          Text

'f:'          Name.Label
' '           Text
'function'    Name.Builtin
' '           Text
'['           Punctuation
'x'           Text
']'           Punctuation
'['           Punctuation
' '           Text
'2'           Literal.Number.Integer
'*'           Operator
'x'           Text
' '           Text
']'           Punctuation
'\n'          Text

'f:'          Name.Label
' '           Text
'function'    Name.Builtin
' '           Text
'['           Punctuation
'x'           Text
']'           Punctuation
'->'          Name.Decorator
' '           Text
'2'           Literal.Number.Integer
'*'           Operator
'x'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; same as above' Comment.Single
'\n'          Text

'f:'          Name.Label
' '           Text
'$'           Operator
'['           Punctuation
'x'           Text
']'           Punctuation
'->'          Name.Decorator
'2'           Literal.Number.Integer
'*'           Operator
'x'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; same as above (only using the `$` alias' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
';  for the `function`... function)' Comment.Single
'\n'          Text

'\n'          Text

'; calling a function' Comment.Single
'\n'          Text

'f'           Text
' '           Text
'10'          Literal.Number.Integer
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; => 20'     Comment.Single
'\n'          Text

'\n'          Text

'; returning a value' Comment.Single
'\n'          Text

'g:'          Name.Label
' '           Text
'function'    Name.Builtin
' '           Text
'['           Punctuation
'x'           Text
']'           Punctuation
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'if'          Name.Builtin
' '           Text
'x'           Text
' '           Text
'<'           Operator
' '           Text
'2'           Literal.Number.Integer
' '           Text
'->'          Name.Decorator
' '           Text
'return'      Name.Builtin
' '           Text
'0'           Literal.Number.Integer
'\n'          Text

'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'res:'        Name.Label
' '           Text
'0'           Literal.Number.Integer
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'loop'        Name.Builtin
' '           Text
'0'           Literal.Number.Integer
'..'          Operator
'x'           Text
' '           Text
"'z"          Keyword.Declaration
' '           Text
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'res:'        Name.Label
' '           Text
'r'           Text
'e'           Text
's'           Text
' '           Text
'+'           Operator
' '           Text
'z'           Text
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
']'           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'return'      Name.Builtin
' '           Text
'r'           Text
'e'           Text
's'           Text
'\n'          Text

']'           Punctuation
'\n'          Text

'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'; CUSTOM TYPES' Comment.Single
'\n'          Text

';---------------------------------' Comment.Single
'\n'          Text

'\n'          Text

'; defining a custom type' Comment.Single
'\n'          Text

'define'      Name.Builtin
' '           Text
':person'     Keyword.Type
' '           Text
'['           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; define a new custom type "Person"' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'n'           Text
'a'           Text
'm'           Text
'e'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; with fields: name, surname, age' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
's'           Text
'u'           Text
'r'           Text
'n'           Text
'a'           Text
'm'           Text
'e'           Text
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'a'           Text
'g'           Text
'e'           Text
'\n'          Text

']'           Punctuation
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'; with custom post-construction initializer' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'init:'       Name.Label
' '           Text
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
't'           Text
'h'           Text
'i'           Text
's'           Text
'\\'          Operator
'name:'       Name.Label
' '           Text
'capitalize'  Name.Builtin
' '           Text
't'           Text
'h'           Text
'i'           Text
's'           Text
'\\'          Operator
'n'           Text
'a'           Text
'm'           Text
'e'           Text
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
']'           Punctuation
'\n'          Text

'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'; custom print function' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print:'      Name.Label
' '           Text
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'render'      Name.Builtin
' '           Text
'"'           Literal.String.Double
'NAME: '      Literal.String
'|'           Literal.String.Interpol
't'           Text
'h'           Text
'i'           Text
's'           Text
'\\'          Operator
'n'           Text
'a'           Text
'm'           Text
'e'           Text
'|'           Literal.String.Interpol
', SURNAME: ' Literal.String
'|'           Literal.String.Interpol
't'           Text
'h'           Text
'i'           Text
's'           Text
'\\'          Operator
's'           Text
'u'           Text
'r'           Text
'n'           Text
'a'           Text
'm'           Text
'e'           Text
'|'           Literal.String.Interpol
', AGE: '     Literal.String
'|'           Literal.String.Interpol
't'           Text
'h'           Text
'i'           Text
's'           Text
'\\'          Operator
'a'           Text
'g'           Text
'e'           Text
'|'           Literal.String.Interpol
'"'           Literal.String.Double
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
']'           Punctuation
'\n'          Text

'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'; custom comparison operator' Comment.Single
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'compare:'    Name.Label
' '           Text
"'age"        Keyword.Declaration
'\n'          Text

']'           Punctuation
'\n'          Text

'\n'          Text

'; create a method for our custom type' Comment.Single
'\n'          Text

'sayHello:'   Name.Label
' '           Text
'function'    Name.Builtin
' '           Text
'['           Punctuation
't'           Text
'h'           Text
'i'           Text
's'           Text
']'           Punctuation
'['           Punctuation
'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'ensure'      Name.Builtin
' '           Text
'->'          Name.Decorator
' '           Text
'is?'         Name.Builtin
' '           Text
':person'     Keyword.Type
' '           Text
't'           Text
'h'           Text
'i'           Text
's'           Text
'\n'          Text

'\n'          Text

' '           Text
' '           Text
' '           Text
' '           Text
'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'Hello'       Literal.String
'"'           Literal.String.Double
' '           Text
't'           Text
'h'           Text
'i'           Text
's'           Text
'\\'          Operator
'n'           Text
'a'           Text
'm'           Text
'e'           Text
']'           Punctuation
'\n'          Text

']'           Punctuation
'\n'          Text

'\n'          Text

'; create new objects of our custom type' Comment.Single
'\n'          Text

'a:'          Name.Label
' '           Text
'to'          Name.Builtin
' '           Text
':person'     Keyword.Type
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'John'        Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'Doe'         Literal.String
'"'           Literal.String.Double
' '           Text
'34'          Literal.Number.Integer
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; let\'s create 2 "Person"s' Comment.Single
'\n'          Text

'b:'          Name.Label
' '           Text
'to'          Name.Builtin
' '           Text
':person'     Keyword.Type
' '           Text
'['           Punctuation
'"'           Literal.String.Double
'jane'        Literal.String
'"'           Literal.String.Double
' '           Text
'"'           Literal.String.Double
'Doe'         Literal.String
'"'           Literal.String.Double
' '           Text
'33'          Literal.Number.Integer
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; and another one' Comment.Single
'\n'          Text

'\n'          Text

'; call pseudo-inner method' Comment.Single
'\n'          Text

's'           Text
'a'           Text
'y'           Text
'H'           Text
'e'           Text
'l'           Text
'l'           Text
'o'           Text
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; Hello John' Comment.Single
'\n'          Text

's'           Text
'a'           Text
'y'           Text
'H'           Text
'e'           Text
'l'           Text
'l'           Text
'o'           Text
' '           Text
'b'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; Hello Jane' Comment.Single
'\n'          Text

'\n'          Text

'; access object fields' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
"The first person's name is:" Literal.String
'"'           Literal.String.Double
' '           Text
'a'           Text
'\\'          Operator
'n'           Text
'a'           Text
'm'           Text
'e'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
"; The first person's name is: John" Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'['           Punctuation
'"'           Literal.String.Double
"The second person's name is:" Literal.String
'"'           Literal.String.Double
' '           Text
'b'           Text
'\\'          Operator
'n'           Text
'a'           Text
'm'           Text
'e'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
"; The second person's name is: Jane" Comment.Single
'\n'          Text

'\n'          Text

'; changing object fields' Comment.Single
'\n'          Text

'a'           Text
'\\'          Operator
'name:'       Name.Label
' '           Text
'"'           Literal.String.Double
'Bob'         Literal.String
'"'           Literal.String.Double
'\n'          Text

's'           Text
'a'           Text
'y'           Text
'H'           Text
'e'           Text
'l'           Text
'l'           Text
'o'           Text
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; Hello Bob' Comment.Single
'\n'          Text

'\n'          Text

'; verifying object type' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'type'        Name.Builtin
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; :person'   Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'is?'         Name.Builtin
' '           Text
':person'     Keyword.Type
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; true'      Comment.Single
'\n'          Text

'\n'          Text

'; printing objects' Comment.Single
'\n'          Text

'print'       Name.Builtin
' '           Text
'a'           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; NAME: John, SURNAME: Doe, AGE: 34' Comment.Single
'\n'          Text

'\n'          Text

'; sorting user objects (using custom comparator)' Comment.Single
'\n'          Text

'sort'        Name.Builtin
' '           Text
'@'           Operator
'['           Punctuation
'a'           Text
' '           Text
'b'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; Jane..., John...' Comment.Single
'\n'          Text

'sort'        Name.Builtin
'.descending' Name.Attribute
' '           Text
'@'           Operator
'['           Punctuation
'a'           Text
' '           Text
'b'           Text
']'           Punctuation
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
' '           Text
'; John..., Jane...' Comment.Single
'\n'          Text

'\n'          Text

'eofString:'  Name.Label
'\n'          Text

'---'         Literal.String.Single
'\n'          Literal.String

'I'           Literal.String
"'"           Literal.String
'm'           Literal.String
' '           Literal.String
'a'           Literal.String
'n'           Literal.String
' '           Literal.String
'e'           Literal.String
'n'           Literal.String
'd'           Literal.String
' '           Literal.String
'o'           Literal.String
'f'           Literal.String
' '           Literal.String
'f'           Literal.String
'i'           Literal.String
'l'           Literal.String
'e'           Literal.String
'\n'          Literal.String

'M'           Literal.String
'u'           Literal.String
'l'           Literal.String
't'           Literal.String
'i'           Literal.String
'l'           Literal.String
'i'           Literal.String
'n'           Literal.String
'e'           Literal.String
' '           Literal.String
's'           Literal.String
't'           Literal.String
'r'           Literal.String
'i'           Literal.String
'n'           Literal.String
'g'           Literal.String
'.'           Literal.String
'\n'          Literal.String

''            Literal.String.Single
